# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.intArrayAdd

# Run progress: 0.00% complete, ETA 00:12:45
# Fork: 1 of 1
# Warmup Iteration   1: 920173.156 ops/ms
# Warmup Iteration   2: 1515975.881 ops/ms
# Warmup Iteration   3: 3169596.589 ops/ms
# Warmup Iteration   4: 2064210.271 ops/ms
# Warmup Iteration   5: 3561421.818 ops/ms
# Warmup Iteration   6: 3445818.853 ops/ms
# Warmup Iteration   7: 3602152.138 ops/ms
# Warmup Iteration   8: 3531503.795 ops/ms
# Warmup Iteration   9: 3547526.902 ops/ms
# Warmup Iteration  10: 3583611.947 ops/ms
# Warmup Iteration  11: 3532961.993 ops/ms
# Warmup Iteration  12: 3527770.804 ops/ms
# Warmup Iteration  13: 3371045.719 ops/ms
# Warmup Iteration  14: 3538842.878 ops/ms
# Warmup Iteration  15: 3617120.393 ops/ms
Iteration   1: 3403224.848 ops/ms
Iteration   2: 3628791.995 ops/ms
Iteration   3: 3577670.144 ops/ms
Iteration   4: 3613862.194 ops/ms
Iteration   5: 3504122.197 ops/ms
Iteration   6: 3540842.522 ops/ms
Iteration   7: 3577405.306 ops/ms
Iteration   8: 3576318.645 ops/ms
Iteration   9: 3500385.727 ops/ms
Iteration  10: 3591842.542 ops/ms
Iteration  11: 3528846.242 ops/ms
Iteration  12: 3319015.644 ops/ms
Iteration  13: 3320371.034 ops/ms
Iteration  14: 3629126.615 ops/ms
Iteration  15: 3558682.623 ops/ms


Result "com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.intArrayAdd":
  3524700.552 ±(99.9%) 108311.825 ops/ms [Average]
  (min, avg, max) = (3319015.644, 3524700.552, 3629126.615), stdev = 101314.949
  CI (99.9%): [3416388.727, 3633012.377] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.intArrayClone

# Run progress: 1.18% complete, ETA 00:46:32
# Fork: 1 of 1
# Warmup Iteration   1: 1081110.239 ops/ms
# Warmup Iteration   2: 1932307.353 ops/ms
# Warmup Iteration   3: 2026526.660 ops/ms
# Warmup Iteration   4: 2767378.065 ops/ms
# Warmup Iteration   5: 2962193.246 ops/ms
# Warmup Iteration   6: 3019712.903 ops/ms
# Warmup Iteration   7: 3057321.782 ops/ms
# Warmup Iteration   8: 3059191.439 ops/ms
# Warmup Iteration   9: 3057507.220 ops/ms
# Warmup Iteration  10: 3017833.168 ops/ms
# Warmup Iteration  11: 3006574.550 ops/ms
# Warmup Iteration  12: 3055308.461 ops/ms
# Warmup Iteration  13: 3022857.964 ops/ms
# Warmup Iteration  14: 3055415.535 ops/ms
# Warmup Iteration  15: 3044032.496 ops/ms
Iteration   1: 2981621.171 ops/ms
Iteration   2: 3042695.527 ops/ms
Iteration   3: 3022489.157 ops/ms
Iteration   4: 3064947.009 ops/ms
Iteration   5: 3027537.999 ops/ms
Iteration   6: 3033373.141 ops/ms
Iteration   7: 3020120.713 ops/ms
Iteration   8: 3049978.750 ops/ms
Iteration   9: 3023632.022 ops/ms
Iteration  10: 3052260.247 ops/ms
Iteration  11: 2933206.330 ops/ms
Iteration  12: 3048790.466 ops/ms
Iteration  13: 3054980.048 ops/ms
Iteration  14: 3024234.243 ops/ms
Iteration  15: 3041069.875 ops/ms


Result "com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.intArrayClone":
  3028062.447 ±(99.9%) 35312.801 ops/ms [Average]
  (min, avg, max) = (2933206.330, 3028062.447, 3064947.009), stdev = 33031.616
  CI (99.9%): [2992749.646, 3063375.248] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.intArrayCopyOf

# Run progress: 2.35% complete, ETA 00:45:53
# Fork: 1 of 1
# Warmup Iteration   1: 1098037.795 ops/ms
# Warmup Iteration   2: 1987373.619 ops/ms
# Warmup Iteration   3: 2028089.032 ops/ms
# Warmup Iteration   4: 2753107.335 ops/ms
# Warmup Iteration   5: 2950971.676 ops/ms
# Warmup Iteration   6: 2998495.580 ops/ms
# Warmup Iteration   7: 2829699.105 ops/ms
# Warmup Iteration   8: 2840503.984 ops/ms
# Warmup Iteration   9: 3051620.505 ops/ms
# Warmup Iteration  10: 3056661.236 ops/ms
# Warmup Iteration  11: 3005774.829 ops/ms
# Warmup Iteration  12: 2992717.250 ops/ms
# Warmup Iteration  13: 2870072.599 ops/ms
# Warmup Iteration  14: 2851017.095 ops/ms
# Warmup Iteration  15: 3059737.310 ops/ms
Iteration   1: 2960903.464 ops/ms
Iteration   2: 3031489.912 ops/ms
Iteration   3: 3008659.011 ops/ms
Iteration   4: 3031804.094 ops/ms
Iteration   5: 3020746.364 ops/ms
Iteration   6: 2959175.207 ops/ms
Iteration   7: 3017753.086 ops/ms
Iteration   8: 2956402.521 ops/ms
Iteration   9: 2824039.382 ops/ms
Iteration  10: 3015156.349 ops/ms
Iteration  11: 3047243.383 ops/ms
Iteration  12: 3014248.883 ops/ms
Iteration  13: 3025835.952 ops/ms
Iteration  14: 2948681.596 ops/ms
Iteration  15: 3046872.725 ops/ms


Result "com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.intArrayCopyOf":
  2993934.129 ±(99.9%) 61607.058 ops/ms [Average]
  (min, avg, max) = (2824039.382, 2993934.129, 3047243.383), stdev = 57627.280
  CI (99.9%): [2932327.071, 3055541.186] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.intWrapperArrayAdd

# Run progress: 3.53% complete, ETA 00:45:27
# Fork: 1 of 1
# Warmup Iteration   1: 408319.469 ops/ms
# Warmup Iteration   2: 446329.398 ops/ms
# Warmup Iteration   3: 502419.310 ops/ms
# Warmup Iteration   4: 514761.636 ops/ms
# Warmup Iteration   5: 517794.106 ops/ms
# Warmup Iteration   6: 521142.513 ops/ms
# Warmup Iteration   7: 476420.103 ops/ms
# Warmup Iteration   8: 523709.087 ops/ms
# Warmup Iteration   9: 520378.644 ops/ms
# Warmup Iteration  10: 512378.092 ops/ms
# Warmup Iteration  11: 520402.304 ops/ms
# Warmup Iteration  12: 524705.990 ops/ms
# Warmup Iteration  13: 521245.725 ops/ms
# Warmup Iteration  14: 477270.648 ops/ms
# Warmup Iteration  15: 519248.152 ops/ms
Iteration   1: 527141.209 ops/ms
Iteration   2: 486924.392 ops/ms
Iteration   3: 520258.132 ops/ms
Iteration   4: 482276.546 ops/ms
Iteration   5: 521263.930 ops/ms
Iteration   6: 526375.987 ops/ms
Iteration   7: 519141.328 ops/ms
Iteration   8: 520921.774 ops/ms
Iteration   9: 472707.282 ops/ms
Iteration  10: 496152.980 ops/ms
Iteration  11: 507468.255 ops/ms
Iteration  12: 527989.031 ops/ms
Iteration  13: 528601.445 ops/ms
Iteration  14: 521285.042 ops/ms
Iteration  15: 499099.992 ops/ms


Result "com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.intWrapperArrayAdd":
  510507.155 ±(99.9%) 19792.768 ops/ms [Average]
  (min, avg, max) = (472707.282, 510507.155, 528601.445), stdev = 18514.168
  CI (99.9%): [490714.387, 530299.923] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.intWrapperArrayClone

# Run progress: 4.71% complete, ETA 00:44:54
# Fork: 1 of 1
# Warmup Iteration   1: 1079279.870 ops/ms
# Warmup Iteration   2: 1928058.006 ops/ms
# Warmup Iteration   3: 2010609.310 ops/ms
# Warmup Iteration   4: 2740423.493 ops/ms
# Warmup Iteration   5: 2985804.868 ops/ms
# Warmup Iteration   6: 3021098.669 ops/ms
# Warmup Iteration   7: 3049499.895 ops/ms
# Warmup Iteration   8: 3012949.678 ops/ms
# Warmup Iteration   9: 2955073.524 ops/ms
# Warmup Iteration  10: 2841951.295 ops/ms
# Warmup Iteration  11: 2854555.471 ops/ms
# Warmup Iteration  12: 2857983.502 ops/ms
# Warmup Iteration  13: 3055468.468 ops/ms
# Warmup Iteration  14: 3025852.886 ops/ms
# Warmup Iteration  15: 3023898.709 ops/ms
Iteration   1: 2860656.817 ops/ms
Iteration   2: 3043681.822 ops/ms
Iteration   3: 2846607.055 ops/ms
Iteration   4: 2987605.135 ops/ms
Iteration   5: 3042749.618 ops/ms
Iteration   6: 3010624.995 ops/ms
Iteration   7: 2949388.991 ops/ms
Iteration   8: 3007959.759 ops/ms
Iteration   9: 3050025.896 ops/ms
Iteration  10: 3018175.689 ops/ms
Iteration  11: 3015428.703 ops/ms
Iteration  12: 2948606.688 ops/ms
Iteration  13: 3035433.975 ops/ms
Iteration  14: 3046297.895 ops/ms
Iteration  15: 3071183.200 ops/ms


Result "com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.intWrapperArrayClone":
  2995628.416 ±(99.9%) 71978.726 ops/ms [Average]
  (min, avg, max) = (2846607.055, 2995628.416, 3071183.200), stdev = 67328.945
  CI (99.9%): [2923649.689, 3067607.142] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.intWrapperArrayCopyOf

# Run progress: 5.88% complete, ETA 00:44:19
# Fork: 1 of 1
# Warmup Iteration   1: 1035610.384 ops/ms
# Warmup Iteration   2: 1918161.261 ops/ms
# Warmup Iteration   3: 2007515.816 ops/ms
# Warmup Iteration   4: 2750623.274 ops/ms
# Warmup Iteration   5: 2968312.257 ops/ms
# Warmup Iteration   6: 3055365.647 ops/ms
# Warmup Iteration   7: 3047877.634 ops/ms
# Warmup Iteration   8: 3043457.768 ops/ms
# Warmup Iteration   9: 3017140.945 ops/ms
# Warmup Iteration  10: 3016422.406 ops/ms
# Warmup Iteration  11: 3015803.751 ops/ms
# Warmup Iteration  12: 3010396.829 ops/ms
# Warmup Iteration  13: 3047679.565 ops/ms
# Warmup Iteration  14: 3018421.380 ops/ms
# Warmup Iteration  15: 3048837.171 ops/ms
Iteration   1: 2763771.952 ops/ms
Iteration   2: 3062971.178 ops/ms
Iteration   3: 3029057.132 ops/ms
Iteration   4: 3048370.434 ops/ms
Iteration   5: 3023041.396 ops/ms
Iteration   6: 2850517.756 ops/ms
Iteration   7: 3026313.545 ops/ms
Iteration   8: 2853661.363 ops/ms
Iteration   9: 2988735.237 ops/ms
Iteration  10: 3028897.902 ops/ms
Iteration  11: 3024240.889 ops/ms
Iteration  12: 3034463.355 ops/ms
Iteration  13: 3066740.231 ops/ms
Iteration  14: 3065887.683 ops/ms
Iteration  15: 3053242.224 ops/ms


Result "com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.intWrapperArrayCopyOf":
  2994660.818 ±(99.9%) 99746.537 ops/ms [Average]
  (min, avg, max) = (2763771.952, 2994660.818, 3066740.231), stdev = 93302.973
  CI (99.9%): [2894914.281, 3094407.356] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.longArrayAdd

# Run progress: 7.06% complete, ETA 00:43:45
# Fork: 1 of 1
# Warmup Iteration   1: 474622.426 ops/ms
# Warmup Iteration   2: 887841.570 ops/ms
# Warmup Iteration   3: 1050331.311 ops/ms
# Warmup Iteration   4: 2014112.463 ops/ms
# Warmup Iteration   5: 2110986.682 ops/ms
# Warmup Iteration   6: 2129328.718 ops/ms
# Warmup Iteration   7: 2023281.443 ops/ms
# Warmup Iteration   8: 2100859.545 ops/ms
# Warmup Iteration   9: 2162905.189 ops/ms
# Warmup Iteration  10: 2143527.836 ops/ms
# Warmup Iteration  11: 2108956.881 ops/ms
# Warmup Iteration  12: 2158712.414 ops/ms
# Warmup Iteration  13: 2188193.508 ops/ms
# Warmup Iteration  14: 2114887.801 ops/ms
# Warmup Iteration  15: 2182797.426 ops/ms
Iteration   1: 2155276.608 ops/ms
Iteration   2: 2194176.939 ops/ms
Iteration   3: 2174396.592 ops/ms
Iteration   4: 2142389.459 ops/ms
Iteration   5: 2181880.977 ops/ms
Iteration   6: 2117495.146 ops/ms
Iteration   7: 2148632.771 ops/ms
Iteration   8: 2156123.986 ops/ms
Iteration   9: 2084719.729 ops/ms
Iteration  10: 2161989.922 ops/ms
Iteration  11: 2161554.358 ops/ms
Iteration  12: 2131284.180 ops/ms
Iteration  13: 2184946.946 ops/ms
Iteration  14: 2143772.079 ops/ms
Iteration  15: 2187963.675 ops/ms


Result "com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.longArrayAdd":
  2155106.891 ±(99.9%) 31225.856 ops/ms [Average]
  (min, avg, max) = (2084719.729, 2155106.891, 2194176.939), stdev = 29208.685
  CI (99.9%): [2123881.035, 2186332.747] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.longArrayClone

# Run progress: 8.24% complete, ETA 00:43:09
# Fork: 1 of 1
# Warmup Iteration   1: 535627.172 ops/ms
# Warmup Iteration   2: 955838.511 ops/ms
# Warmup Iteration   3: 1016938.958 ops/ms
# Warmup Iteration   4: 1304180.554 ops/ms
# Warmup Iteration   5: 1392231.795 ops/ms
# Warmup Iteration   6: 1432613.485 ops/ms
# Warmup Iteration   7: 1513074.525 ops/ms
# Warmup Iteration   8: 1531396.660 ops/ms
# Warmup Iteration   9: 1502967.468 ops/ms
# Warmup Iteration  10: 1514724.521 ops/ms
# Warmup Iteration  11: 1510489.725 ops/ms
# Warmup Iteration  12: 1513262.850 ops/ms
# Warmup Iteration  13: 1487115.459 ops/ms
# Warmup Iteration  14: 1431336.131 ops/ms
# Warmup Iteration  15: 1528753.580 ops/ms
Iteration   1: 1496370.889 ops/ms
Iteration   2: 1530387.682 ops/ms
Iteration   3: 1523665.658 ops/ms
Iteration   4: 1534585.112 ops/ms
Iteration   5: 1452851.601 ops/ms
Iteration   6: 1435676.271 ops/ms
Iteration   7: 1502436.969 ops/ms
Iteration   8: 1532906.532 ops/ms
Iteration   9: 1535348.528 ops/ms
Iteration  10: 1514362.346 ops/ms
Iteration  11: 1516751.837 ops/ms
Iteration  12: 1518314.984 ops/ms
Iteration  13: 1534949.010 ops/ms
Iteration  14: 1440447.248 ops/ms
Iteration  15: 1538517.384 ops/ms


Result "com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.longArrayClone":
  1507171.470 ±(99.9%) 38005.958 ops/ms [Average]
  (min, avg, max) = (1435676.271, 1507171.470, 1538517.384), stdev = 35550.797
  CI (99.9%): [1469165.512, 1545177.428] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.longArrayCopyOf

# Run progress: 9.41% complete, ETA 00:42:38
# Fork: 1 of 1
# Warmup Iteration   1: 492738.879 ops/ms
# Warmup Iteration   2: 871239.734 ops/ms
# Warmup Iteration   3: 1009796.711 ops/ms
# Warmup Iteration   4: 1368242.463 ops/ms
# Warmup Iteration   5: 1492369.049 ops/ms
# Warmup Iteration   6: 1536261.127 ops/ms
# Warmup Iteration   7: 1436828.745 ops/ms
# Warmup Iteration   8: 1533759.588 ops/ms
# Warmup Iteration   9: 1532641.436 ops/ms
# Warmup Iteration  10: 1510044.315 ops/ms
# Warmup Iteration  11: 1497611.120 ops/ms
# Warmup Iteration  12: 1492489.187 ops/ms
# Warmup Iteration  13: 1432823.313 ops/ms
# Warmup Iteration  14: 1498013.694 ops/ms
# Warmup Iteration  15: 1522611.190 ops/ms
Iteration   1: 1502436.823 ops/ms
Iteration   2: 1535981.859 ops/ms
Iteration   3: 1520974.821 ops/ms
Iteration   4: 1538189.332 ops/ms
Iteration   5: 1517459.496 ops/ms
Iteration   6: 1531019.518 ops/ms
Iteration   7: 1518574.752 ops/ms
Iteration   8: 1540527.641 ops/ms
Iteration   9: 1434577.599 ops/ms
Iteration  10: 1539308.186 ops/ms
Iteration  11: 1520191.977 ops/ms
Iteration  12: 1522987.565 ops/ms
Iteration  13: 1537035.158 ops/ms
Iteration  14: 1424111.478 ops/ms
Iteration  15: 1531528.676 ops/ms


Result "com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.longArrayCopyOf":
  1514326.992 ±(99.9%) 38609.767 ops/ms [Average]
  (min, avg, max) = (1424111.478, 1514326.992, 1540527.641), stdev = 36115.600
  CI (99.9%): [1475717.225, 1552936.759] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.longWrapperArrayAdd

# Run progress: 10.59% complete, ETA 00:42:05
# Fork: 1 of 1
# Warmup Iteration   1: 407046.931 ops/ms
# Warmup Iteration   2: 445628.840 ops/ms
# Warmup Iteration   3: 502705.744 ops/ms
# Warmup Iteration   4: 514082.356 ops/ms
# Warmup Iteration   5: 517797.751 ops/ms
# Warmup Iteration   6: 523168.275 ops/ms
# Warmup Iteration   7: 519734.977 ops/ms
# Warmup Iteration   8: 519864.506 ops/ms
# Warmup Iteration   9: 520210.477 ops/ms
# Warmup Iteration  10: 520789.046 ops/ms
# Warmup Iteration  11: 522347.195 ops/ms
# Warmup Iteration  12: 521026.572 ops/ms
# Warmup Iteration  13: 521198.937 ops/ms
# Warmup Iteration  14: 521754.641 ops/ms
# Warmup Iteration  15: 521039.692 ops/ms
Iteration   1: 519836.101 ops/ms
Iteration   2: 525704.701 ops/ms
Iteration   3: 522201.772 ops/ms
Iteration   4: 527527.118 ops/ms
Iteration   5: 527975.858 ops/ms
Iteration   6: 519848.884 ops/ms
Iteration   7: 516412.251 ops/ms
Iteration   8: 520134.075 ops/ms
Iteration   9: 510387.989 ops/ms
Iteration  10: 520521.435 ops/ms
Iteration  11: 473857.973 ops/ms
Iteration  12: 469711.092 ops/ms
Iteration  13: 485928.809 ops/ms
Iteration  14: 519263.717 ops/ms
Iteration  15: 527675.152 ops/ms


Result "com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.longWrapperArrayAdd":
  512465.795 ±(99.9%) 20781.299 ops/ms [Average]
  (min, avg, max) = (469711.092, 512465.795, 527975.858), stdev = 19438.840
  CI (99.9%): [491684.496, 533247.094] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.longWrapperArrayClone

# Run progress: 11.76% complete, ETA 00:41:31
# Fork: 1 of 1
# Warmup Iteration   1: 1085199.188 ops/ms
# Warmup Iteration   2: 2001843.199 ops/ms
# Warmup Iteration   3: 2022540.577 ops/ms
# Warmup Iteration   4: 2770802.510 ops/ms
# Warmup Iteration   5: 2940388.017 ops/ms
# Warmup Iteration   6: 3021707.507 ops/ms
# Warmup Iteration   7: 3040080.364 ops/ms
# Warmup Iteration   8: 2995374.297 ops/ms
# Warmup Iteration   9: 2838135.385 ops/ms
# Warmup Iteration  10: 3013689.656 ops/ms
# Warmup Iteration  11: 3033253.693 ops/ms
# Warmup Iteration  12: 3001463.063 ops/ms
# Warmup Iteration  13: 2923438.938 ops/ms
# Warmup Iteration  14: 2983741.682 ops/ms
# Warmup Iteration  15: 3013867.855 ops/ms
Iteration   1: 2986950.909 ops/ms
Iteration   2: 3053680.889 ops/ms
Iteration   3: 2941468.157 ops/ms
Iteration   4: 3057748.030 ops/ms
Iteration   5: 3013790.112 ops/ms
Iteration   6: 3026540.794 ops/ms
Iteration   7: 2977020.561 ops/ms
Iteration   8: 3049972.263 ops/ms
Iteration   9: 3051693.136 ops/ms
Iteration  10: 2901895.684 ops/ms
Iteration  11: 3055586.587 ops/ms
Iteration  12: 3051634.391 ops/ms
Iteration  13: 3051486.969 ops/ms
Iteration  14: 3014663.906 ops/ms
Iteration  15: 2962842.772 ops/ms


Result "com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.longWrapperArrayClone":
  3013131.677 ±(99.9%) 52252.270 ops/ms [Average]
  (min, avg, max) = (2901895.684, 3013131.677, 3057748.030), stdev = 48876.806
  CI (99.9%): [2960879.407, 3065383.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.longWrapperArrayCopyOf

# Run progress: 12.94% complete, ETA 00:40:57
# Fork: 1 of 1
# Warmup Iteration   1: 1035828.599 ops/ms
# Warmup Iteration   2: 1801324.730 ops/ms
# Warmup Iteration   3: 2029518.368 ops/ms
# Warmup Iteration   4: 2730712.773 ops/ms
# Warmup Iteration   5: 2756514.588 ops/ms
# Warmup Iteration   6: 2812017.747 ops/ms
# Warmup Iteration   7: 3005006.065 ops/ms
# Warmup Iteration   8: 3051163.434 ops/ms
# Warmup Iteration   9: 2931385.935 ops/ms
# Warmup Iteration  10: 3060547.979 ops/ms
# Warmup Iteration  11: 2952037.780 ops/ms
# Warmup Iteration  12: 3018841.086 ops/ms
# Warmup Iteration  13: 2833315.356 ops/ms
# Warmup Iteration  14: 2983614.648 ops/ms
# Warmup Iteration  15: 3018407.488 ops/ms
Iteration   1: 2979381.318 ops/ms
Iteration   2: 3022398.449 ops/ms
Iteration   3: 3033572.513 ops/ms
Iteration   4: 3014864.811 ops/ms
Iteration   5: 3015994.060 ops/ms
Iteration   6: 3003315.483 ops/ms
Iteration   7: 3020717.472 ops/ms
Iteration   8: 3018468.763 ops/ms
Iteration   9: 3018251.607 ops/ms
Iteration  10: 3021822.366 ops/ms
Iteration  11: 3058447.917 ops/ms
Iteration  12: 2899463.877 ops/ms
Iteration  13: 3050741.337 ops/ms
Iteration  14: 3015265.464 ops/ms
Iteration  15: 3033927.091 ops/ms


Result "com.github.chrisgleissner.benchmarks.ArrayAddBenchmark.longWrapperArrayCopyOf":
  3013775.502 ±(99.9%) 39131.244 ops/ms [Average]
  (min, avg, max) = (2899463.877, 3013775.502, 3058447.917), stdev = 36603.390
  CI (99.9%): [2974644.258, 3052906.746] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.ArrayDeque

# Run progress: 14.12% complete, ETA 00:40:25
# Fork: 1 of 1
# Warmup Iteration   1: 37203.025 ops/ms
# Warmup Iteration   2: 43095.550 ops/ms
# Warmup Iteration   3: 44824.917 ops/ms
# Warmup Iteration   4: 40070.845 ops/ms
# Warmup Iteration   5: 42581.441 ops/ms
# Warmup Iteration   6: 42647.937 ops/ms
# Warmup Iteration   7: 42651.872 ops/ms
# Warmup Iteration   8: 42690.418 ops/ms
# Warmup Iteration   9: 43714.272 ops/ms
# Warmup Iteration  10: 44352.013 ops/ms
# Warmup Iteration  11: 44708.470 ops/ms
# Warmup Iteration  12: 44617.149 ops/ms
# Warmup Iteration  13: 44660.650 ops/ms
# Warmup Iteration  14: 44707.807 ops/ms
# Warmup Iteration  15: 44803.548 ops/ms
Iteration   1: 44757.852 ops/ms
Iteration   2: 44837.763 ops/ms
Iteration   3: 44840.939 ops/ms
Iteration   4: 44616.678 ops/ms
Iteration   5: 44689.818 ops/ms
Iteration   6: 44716.202 ops/ms
Iteration   7: 43201.817 ops/ms
Iteration   8: 44755.368 ops/ms
Iteration   9: 44938.205 ops/ms
Iteration  10: 44851.674 ops/ms
Iteration  11: 44849.849 ops/ms
Iteration  12: 44836.146 ops/ms
Iteration  13: 44820.978 ops/ms
Iteration  14: 44723.856 ops/ms
Iteration  15: 44677.868 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.ArrayDeque":
  44674.334 ±(99.9%) 444.810 ops/ms [Average]
  (min, avg, max) = (43201.817, 44674.334, 44938.205), stdev = 416.076
  CI (99.9%): [44229.524, 45119.145] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.ArrayList

# Run progress: 15.29% complete, ETA 00:44:56
# Fork: 1 of 1
# Warmup Iteration   1: 36293.047 ops/ms
# Warmup Iteration   2: 41707.969 ops/ms
# Warmup Iteration   3: 43759.395 ops/ms
# Warmup Iteration   4: 42360.470 ops/ms
# Warmup Iteration   5: 42143.879 ops/ms
# Warmup Iteration   6: 41990.215 ops/ms
# Warmup Iteration   7: 41193.520 ops/ms
# Warmup Iteration   8: 45155.502 ops/ms
# Warmup Iteration   9: 42385.554 ops/ms
# Warmup Iteration  10: 45811.361 ops/ms
# Warmup Iteration  11: 42411.024 ops/ms
# Warmup Iteration  12: 45513.613 ops/ms
# Warmup Iteration  13: 42295.447 ops/ms
# Warmup Iteration  14: 42300.317 ops/ms
# Warmup Iteration  15: 42322.105 ops/ms
Iteration   1: 42032.717 ops/ms
Iteration   2: 42042.877 ops/ms
Iteration   3: 41836.157 ops/ms
Iteration   4: 41919.857 ops/ms
Iteration   5: 42231.284 ops/ms
Iteration   6: 42164.561 ops/ms
Iteration   7: 42061.360 ops/ms
Iteration   8: 42165.551 ops/ms
Iteration   9: 41899.757 ops/ms
Iteration  10: 42236.543 ops/ms
Iteration  11: 42084.979 ops/ms
Iteration  12: 42277.895 ops/ms
Iteration  13: 42153.309 ops/ms
Iteration  14: 42280.025 ops/ms
Iteration  15: 42144.706 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.ArrayList":
  42102.105 ±(99.9%) 147.039 ops/ms [Average]
  (min, avg, max) = (41836.157, 42102.105, 42280.025), stdev = 137.541
  CI (99.9%): [41955.066, 42249.145] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.ArrayListNoResize

# Run progress: 16.47% complete, ETA 00:48:38
# Fork: 1 of 1
# Warmup Iteration   1: 65898.077 ops/ms
# Warmup Iteration   2: 71145.558 ops/ms
# Warmup Iteration   3: 71089.344 ops/ms
# Warmup Iteration   4: 71175.134 ops/ms
# Warmup Iteration   5: 71204.903 ops/ms
# Warmup Iteration   6: 69926.756 ops/ms
# Warmup Iteration   7: 66145.385 ops/ms
# Warmup Iteration   8: 70853.355 ops/ms
# Warmup Iteration   9: 70523.353 ops/ms
# Warmup Iteration  10: 70970.957 ops/ms
# Warmup Iteration  11: 70789.517 ops/ms
# Warmup Iteration  12: 70823.594 ops/ms
# Warmup Iteration  13: 63880.063 ops/ms
# Warmup Iteration  14: 70494.469 ops/ms
# Warmup Iteration  15: 70724.103 ops/ms
Iteration   1: 70804.457 ops/ms
Iteration   2: 70240.588 ops/ms
Iteration   3: 69882.002 ops/ms
Iteration   4: 70460.215 ops/ms
Iteration   5: 70729.930 ops/ms
Iteration   6: 70592.097 ops/ms
Iteration   7: 70621.926 ops/ms
Iteration   8: 70078.931 ops/ms
Iteration   9: 70959.640 ops/ms
Iteration  10: 66945.575 ops/ms
Iteration  11: 70855.110 ops/ms
Iteration  12: 70344.313 ops/ms
Iteration  13: 70753.329 ops/ms
Iteration  14: 70757.609 ops/ms
Iteration  15: 61996.190 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.ArrayListNoResize":
  69734.794 ±(99.9%) 2514.563 ops/ms [Average]
  (min, avg, max) = (61996.190, 69734.794, 70959.640), stdev = 2352.123
  CI (99.9%): [67220.232, 72249.357] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.ConcurrentHashMap

# Run progress: 17.65% complete, ETA 00:51:53
# Fork: 1 of 1
# Warmup Iteration   1: 4979.090 ops/ms
# Warmup Iteration   2: 5676.321 ops/ms
# Warmup Iteration   3: 7178.097 ops/ms
# Warmup Iteration   4: 7048.514 ops/ms
# Warmup Iteration   5: 7287.366 ops/ms
# Warmup Iteration   6: 7237.660 ops/ms
# Warmup Iteration   7: 7148.881 ops/ms
# Warmup Iteration   8: 7388.837 ops/ms
# Warmup Iteration   9: 7609.307 ops/ms
# Warmup Iteration  10: 6968.474 ops/ms
# Warmup Iteration  11: 6271.642 ops/ms
# Warmup Iteration  12: 7197.781 ops/ms
# Warmup Iteration  13: 7042.367 ops/ms
# Warmup Iteration  14: 7192.957 ops/ms
# Warmup Iteration  15: 7306.405 ops/ms
Iteration   1: 6533.868 ops/ms
Iteration   2: 7673.310 ops/ms
Iteration   3: 7247.756 ops/ms
Iteration   4: 7033.729 ops/ms
Iteration   5: 6754.373 ops/ms
Iteration   6: 6055.304 ops/ms
Iteration   7: 6413.198 ops/ms
Iteration   8: 7326.236 ops/ms
Iteration   9: 7441.222 ops/ms
Iteration  10: 7528.480 ops/ms
Iteration  11: 7077.120 ops/ms
Iteration  12: 7226.157 ops/ms
Iteration  13: 7124.595 ops/ms
Iteration  14: 7139.170 ops/ms
Iteration  15: 7171.685 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.ConcurrentHashMap":
  7049.747 ±(99.9%) 469.049 ops/ms [Average]
  (min, avg, max) = (6055.304, 7049.747, 7673.310), stdev = 438.749
  CI (99.9%): [6580.698, 7518.796] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.ConcurrentLinkedDeque

# Run progress: 18.82% complete, ETA 00:54:39
# Fork: 1 of 1
# Warmup Iteration   1: 6371.874 ops/ms
# Warmup Iteration   2: 6694.656 ops/ms
# Warmup Iteration   3: 7430.860 ops/ms
# Warmup Iteration   4: 7423.987 ops/ms
# Warmup Iteration   5: 7403.267 ops/ms
# Warmup Iteration   6: 7453.175 ops/ms
# Warmup Iteration   7: 7573.456 ops/ms
# Warmup Iteration   8: 7394.051 ops/ms
# Warmup Iteration   9: 7493.431 ops/ms
# Warmup Iteration  10: 7489.957 ops/ms
# Warmup Iteration  11: 7494.574 ops/ms
# Warmup Iteration  12: 7467.654 ops/ms
# Warmup Iteration  13: 7513.674 ops/ms
# Warmup Iteration  14: 7517.853 ops/ms
# Warmup Iteration  15: 7510.203 ops/ms
Iteration   1: 7490.058 ops/ms
Iteration   2: 7528.695 ops/ms
Iteration   3: 7499.583 ops/ms
Iteration   4: 7469.081 ops/ms
Iteration   5: 7339.639 ops/ms
Iteration   6: 7492.942 ops/ms
Iteration   7: 7496.875 ops/ms
Iteration   8: 7114.420 ops/ms
Iteration   9: 6930.454 ops/ms
Iteration  10: 6951.998 ops/ms
Iteration  11: 7112.289 ops/ms
Iteration  12: 7429.309 ops/ms
Iteration  13: 7378.908 ops/ms
Iteration  14: 7444.246 ops/ms
Iteration  15: 7471.768 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.ConcurrentLinkedDeque":
  7343.351 ±(99.9%) 222.570 ops/ms [Average]
  (min, avg, max) = (6930.454, 7343.351, 7528.695), stdev = 208.192
  CI (99.9%): [7120.781, 7565.921] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.ConcurrentSkipListSet

# Run progress: 20.00% complete, ETA 00:57:18
# Fork: 1 of 1
# Warmup Iteration   1: 1558.402 ops/ms
# Warmup Iteration   2: 1946.268 ops/ms
# Warmup Iteration   3: 2053.654 ops/ms
# Warmup Iteration   4: 2012.851 ops/ms
# Warmup Iteration   5: 1881.951 ops/ms
# Warmup Iteration   6: 2039.641 ops/ms
# Warmup Iteration   7: 2041.678 ops/ms
# Warmup Iteration   8: 2029.006 ops/ms
# Warmup Iteration   9: 1933.878 ops/ms
# Warmup Iteration  10: 1939.087 ops/ms
# Warmup Iteration  11: 2034.855 ops/ms
# Warmup Iteration  12: 1942.998 ops/ms
# Warmup Iteration  13: 2066.334 ops/ms
# Warmup Iteration  14: 2049.160 ops/ms
# Warmup Iteration  15: 2044.608 ops/ms
Iteration   1: 1733.984 ops/ms
Iteration   2: 1933.966 ops/ms
Iteration   3: 1947.669 ops/ms
Iteration   4: 2024.913 ops/ms
Iteration   5: 1768.340 ops/ms
Iteration   6: 2022.377 ops/ms
Iteration   7: 2054.797 ops/ms
Iteration   8: 2034.743 ops/ms
Iteration   9: 2039.211 ops/ms
Iteration  10: 2061.754 ops/ms
Iteration  11: 1994.939 ops/ms
Iteration  12: 1922.463 ops/ms
Iteration  13: 1918.090 ops/ms
Iteration  14: 1958.991 ops/ms
Iteration  15: 2012.310 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.ConcurrentSkipListSet":
  1961.903 ±(99.9%) 104.988 ops/ms [Average]
  (min, avg, max) = (1733.984, 1961.903, 2061.754), stdev = 98.206
  CI (99.9%): [1856.915, 2066.891] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.CopyOnWriteArrayList

# Run progress: 21.18% complete, ETA 00:59:11
# Fork: 1 of 1
# Warmup Iteration   1: 79.172 ops/ms
# Warmup Iteration   2: 81.747 ops/ms
# Warmup Iteration   3: 84.595 ops/ms
# Warmup Iteration   4: 92.213 ops/ms
# Warmup Iteration   5: 92.057 ops/ms
# Warmup Iteration   6: 87.542 ops/ms
# Warmup Iteration   7: 100.491 ops/ms
# Warmup Iteration   8: 101.157 ops/ms
# Warmup Iteration   9: 98.984 ops/ms
# Warmup Iteration  10: 102.497 ops/ms
# Warmup Iteration  11: 101.567 ops/ms
# Warmup Iteration  12: 97.667 ops/ms
# Warmup Iteration  13: 100.221 ops/ms
# Warmup Iteration  14: 102.948 ops/ms
# Warmup Iteration  15: 101.323 ops/ms
Iteration   1: 100.337 ops/ms
Iteration   2: 101.535 ops/ms
Iteration   3: 100.171 ops/ms
Iteration   4: 100.818 ops/ms
Iteration   5: 101.207 ops/ms
Iteration   6: 99.535 ops/ms
Iteration   7: 97.724 ops/ms
Iteration   8: 100.306 ops/ms
Iteration   9: 99.864 ops/ms
Iteration  10: 100.705 ops/ms
Iteration  11: 98.168 ops/ms
Iteration  12: 99.218 ops/ms
Iteration  13: 99.758 ops/ms
Iteration  14: 99.471 ops/ms
Iteration  15: 98.580 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.CopyOnWriteArrayList":
  99.826 ±(99.9%) 1.161 ops/ms [Average]
  (min, avg, max) = (97.724, 99.826, 101.535), stdev = 1.086
  CI (99.9%): [98.666, 100.987] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.CopyOnWriteArraySet

# Run progress: 22.35% complete, ETA 01:00:36
# Fork: 1 of 1
# Warmup Iteration   1: 48.856 ops/ms
# Warmup Iteration   2: 66.696 ops/ms
# Warmup Iteration   3: 64.133 ops/ms
# Warmup Iteration   4: 62.113 ops/ms
# Warmup Iteration   5: 65.378 ops/ms
# Warmup Iteration   6: 65.546 ops/ms
# Warmup Iteration   7: 68.548 ops/ms
# Warmup Iteration   8: 69.273 ops/ms
# Warmup Iteration   9: 68.870 ops/ms
# Warmup Iteration  10: 67.773 ops/ms
# Warmup Iteration  11: 68.928 ops/ms
# Warmup Iteration  12: 67.545 ops/ms
# Warmup Iteration  13: 66.823 ops/ms
# Warmup Iteration  14: 68.775 ops/ms
# Warmup Iteration  15: 65.218 ops/ms
Iteration   1: 67.294 ops/ms
Iteration   2: 67.745 ops/ms
Iteration   3: 68.265 ops/ms
Iteration   4: 68.322 ops/ms
Iteration   5: 67.674 ops/ms
Iteration   6: 68.308 ops/ms
Iteration   7: 67.739 ops/ms
Iteration   8: 67.982 ops/ms
Iteration   9: 68.053 ops/ms
Iteration  10: 67.502 ops/ms
Iteration  11: 65.888 ops/ms
Iteration  12: 68.144 ops/ms
Iteration  13: 67.767 ops/ms
Iteration  14: 68.017 ops/ms
Iteration  15: 68.286 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.CopyOnWriteArraySet":
  67.799 ±(99.9%) 0.656 ops/ms [Average]
  (min, avg, max) = (65.888, 67.799, 68.322), stdev = 0.613
  CI (99.9%): [67.143, 68.455] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.HashMap

# Run progress: 23.53% complete, ETA 01:01:45
# Fork: 1 of 1
# Warmup Iteration   1: 12716.792 ops/ms
# Warmup Iteration   2: 12443.030 ops/ms
# Warmup Iteration   3: 13402.650 ops/ms
# Warmup Iteration   4: 13358.426 ops/ms
# Warmup Iteration   5: 13981.030 ops/ms
# Warmup Iteration   6: 13785.033 ops/ms
# Warmup Iteration   7: 13492.790 ops/ms
# Warmup Iteration   8: 13508.914 ops/ms
# Warmup Iteration   9: 14313.748 ops/ms
# Warmup Iteration  10: 13488.966 ops/ms
# Warmup Iteration  11: 13863.907 ops/ms
# Warmup Iteration  12: 13489.340 ops/ms
# Warmup Iteration  13: 14230.274 ops/ms
# Warmup Iteration  14: 13494.999 ops/ms
# Warmup Iteration  15: 13107.502 ops/ms
Iteration   1: 13481.027 ops/ms
Iteration   2: 13678.586 ops/ms
Iteration   3: 14665.838 ops/ms
Iteration   4: 14479.734 ops/ms
Iteration   5: 14386.685 ops/ms
Iteration   6: 15187.199 ops/ms
Iteration   7: 13973.970 ops/ms
Iteration   8: 14233.133 ops/ms
Iteration   9: 14333.768 ops/ms
Iteration  10: 15088.909 ops/ms
Iteration  11: 14846.921 ops/ms
Iteration  12: 14845.689 ops/ms
Iteration  13: 14828.586 ops/ms
Iteration  14: 14937.855 ops/ms
Iteration  15: 14724.036 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.HashMap":
  14512.796 ±(99.9%) 537.247 ops/ms [Average]
  (min, avg, max) = (13481.027, 14512.796, 15187.199), stdev = 502.542
  CI (99.9%): [13975.548, 15050.043] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.HashSet

# Run progress: 24.71% complete, ETA 01:02:30
# Fork: 1 of 1
# Warmup Iteration   1: 11020.441 ops/ms
# Warmup Iteration   2: 18690.629 ops/ms
# Warmup Iteration   3: 19185.702 ops/ms
# Warmup Iteration   4: 19713.233 ops/ms
# Warmup Iteration   5: 19214.496 ops/ms
# Warmup Iteration   6: 18730.087 ops/ms
# Warmup Iteration   7: 19600.441 ops/ms
# Warmup Iteration   8: 19304.059 ops/ms
# Warmup Iteration   9: 19101.529 ops/ms
# Warmup Iteration  10: 19781.772 ops/ms
# Warmup Iteration  11: 18810.244 ops/ms
# Warmup Iteration  12: 18543.147 ops/ms
# Warmup Iteration  13: 19181.131 ops/ms
# Warmup Iteration  14: 18846.910 ops/ms
# Warmup Iteration  15: 19326.742 ops/ms
Iteration   1: 19164.037 ops/ms
Iteration   2: 19102.821 ops/ms
Iteration   3: 18670.891 ops/ms
Iteration   4: 19174.993 ops/ms
Iteration   5: 19826.725 ops/ms
Iteration   6: 19231.085 ops/ms
Iteration   7: 18963.806 ops/ms
Iteration   8: 19018.071 ops/ms
Iteration   9: 19641.720 ops/ms
Iteration  10: 18910.459 ops/ms
Iteration  11: 19054.538 ops/ms
Iteration  12: 19705.739 ops/ms
Iteration  13: 18762.835 ops/ms
Iteration  14: 18993.583 ops/ms
Iteration  15: 19342.938 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.HashSet":
  19170.949 ±(99.9%) 358.156 ops/ms [Average]
  (min, avg, max) = (18670.891, 19170.949, 19826.725), stdev = 335.019
  CI (99.9%): [18812.793, 19529.105] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.LinkedBlockingDeque

# Run progress: 25.88% complete, ETA 01:02:56
# Fork: 1 of 1
# Warmup Iteration   1: 9429.799 ops/ms
# Warmup Iteration   2: 11041.475 ops/ms
# Warmup Iteration   3: 11430.092 ops/ms
# Warmup Iteration   4: 11530.790 ops/ms
# Warmup Iteration   5: 11327.353 ops/ms
# Warmup Iteration   6: 11535.669 ops/ms
# Warmup Iteration   7: 10701.039 ops/ms
# Warmup Iteration   8: 11532.146 ops/ms
# Warmup Iteration   9: 11550.666 ops/ms
# Warmup Iteration  10: 11533.639 ops/ms
# Warmup Iteration  11: 11539.835 ops/ms
# Warmup Iteration  12: 11451.400 ops/ms
# Warmup Iteration  13: 11538.866 ops/ms
# Warmup Iteration  14: 11547.072 ops/ms
# Warmup Iteration  15: 11522.447 ops/ms
Iteration   1: 11540.318 ops/ms
Iteration   2: 11558.515 ops/ms
Iteration   3: 11561.433 ops/ms
Iteration   4: 11538.799 ops/ms
Iteration   5: 11542.887 ops/ms
Iteration   6: 11540.626 ops/ms
Iteration   7: 11533.114 ops/ms
Iteration   8: 11520.980 ops/ms
Iteration   9: 11532.070 ops/ms
Iteration  10: 11541.744 ops/ms
Iteration  11: 11538.728 ops/ms
Iteration  12: 11225.440 ops/ms
Iteration  13: 11520.665 ops/ms
Iteration  14: 11535.362 ops/ms
Iteration  15: 11528.412 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.LinkedBlockingDeque":
  11517.273 ±(99.9%) 87.141 ops/ms [Average]
  (min, avg, max) = (11225.440, 11517.273, 11561.433), stdev = 81.512
  CI (99.9%): [11430.132, 11604.414] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.LinkedBlockingQueue

# Run progress: 27.06% complete, ETA 01:03:11
# Fork: 1 of 1
# Warmup Iteration   1: 11897.339 ops/ms
# Warmup Iteration   2: 13397.277 ops/ms
# Warmup Iteration   3: 13653.821 ops/ms
# Warmup Iteration   4: 13728.843 ops/ms
# Warmup Iteration   5: 13757.737 ops/ms
# Warmup Iteration   6: 13747.249 ops/ms
# Warmup Iteration   7: 13760.081 ops/ms
# Warmup Iteration   8: 13639.703 ops/ms
# Warmup Iteration   9: 13605.061 ops/ms
# Warmup Iteration  10: 13628.955 ops/ms
# Warmup Iteration  11: 13759.081 ops/ms
# Warmup Iteration  12: 13508.845 ops/ms
# Warmup Iteration  13: 13766.955 ops/ms
# Warmup Iteration  14: 13637.681 ops/ms
# Warmup Iteration  15: 13728.747 ops/ms
Iteration   1: 12804.809 ops/ms
Iteration   2: 12909.681 ops/ms
Iteration   3: 13744.599 ops/ms
Iteration   4: 13759.197 ops/ms
Iteration   5: 13740.250 ops/ms
Iteration   6: 13577.575 ops/ms
Iteration   7: 13763.551 ops/ms
Iteration   8: 13702.177 ops/ms
Iteration   9: 13733.335 ops/ms
Iteration  10: 13690.735 ops/ms
Iteration  11: 13736.840 ops/ms
Iteration  12: 13530.302 ops/ms
Iteration  13: 13724.786 ops/ms
Iteration  14: 13744.751 ops/ms
Iteration  15: 13744.436 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.LinkedBlockingQueue":
  13593.802 ±(99.9%) 328.127 ops/ms [Average]
  (min, avg, max) = (12804.809, 13593.802, 13763.551), stdev = 306.930
  CI (99.9%): [13265.674, 13921.929] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.LinkedHashMap

# Run progress: 28.24% complete, ETA 01:03:17
# Fork: 1 of 1
# Warmup Iteration   1: 9420.606 ops/ms
# Warmup Iteration   2: 9781.180 ops/ms
# Warmup Iteration   3: 10158.614 ops/ms
# Warmup Iteration   4: 10196.941 ops/ms
# Warmup Iteration   5: 10097.803 ops/ms
# Warmup Iteration   6: 10239.087 ops/ms
# Warmup Iteration   7: 10330.977 ops/ms
# Warmup Iteration   8: 10153.138 ops/ms
# Warmup Iteration   9: 10281.915 ops/ms
# Warmup Iteration  10: 10231.224 ops/ms
# Warmup Iteration  11: 9386.058 ops/ms
# Warmup Iteration  12: 9804.410 ops/ms
# Warmup Iteration  13: 10161.389 ops/ms
# Warmup Iteration  14: 10177.348 ops/ms
# Warmup Iteration  15: 10309.993 ops/ms
Iteration   1: 9906.385 ops/ms
Iteration   2: 10209.741 ops/ms
Iteration   3: 9911.774 ops/ms
Iteration   4: 10209.556 ops/ms
Iteration   5: 10116.101 ops/ms
Iteration   6: 10144.917 ops/ms
Iteration   7: 10225.641 ops/ms
Iteration   8: 10452.829 ops/ms
Iteration   9: 10174.783 ops/ms
Iteration  10: 10120.897 ops/ms
Iteration  11: 10122.303 ops/ms
Iteration  12: 10184.759 ops/ms
Iteration  13: 10284.536 ops/ms
Iteration  14: 10293.115 ops/ms
Iteration  15: 10152.875 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.LinkedHashMap":
  10167.347 ±(99.9%) 145.501 ops/ms [Average]
  (min, avg, max) = (9906.385, 10167.347, 10452.829), stdev = 136.101
  CI (99.9%): [10021.847, 10312.848] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.LinkedHashSet

# Run progress: 29.41% complete, ETA 01:03:18
# Fork: 1 of 1
# Warmup Iteration   1: 10071.137 ops/ms
# Warmup Iteration   2: 11742.115 ops/ms
# Warmup Iteration   3: 11911.144 ops/ms
# Warmup Iteration   4: 12102.035 ops/ms
# Warmup Iteration   5: 12163.634 ops/ms
# Warmup Iteration   6: 12182.349 ops/ms
# Warmup Iteration   7: 11974.438 ops/ms
# Warmup Iteration   8: 12103.783 ops/ms
# Warmup Iteration   9: 10790.387 ops/ms
# Warmup Iteration  10: 12265.951 ops/ms
# Warmup Iteration  11: 12122.889 ops/ms
# Warmup Iteration  12: 11948.692 ops/ms
# Warmup Iteration  13: 12092.829 ops/ms
# Warmup Iteration  14: 11731.076 ops/ms
# Warmup Iteration  15: 12431.567 ops/ms
Iteration   1: 11800.563 ops/ms
Iteration   2: 11821.838 ops/ms
Iteration   3: 12094.434 ops/ms
Iteration   4: 10696.118 ops/ms
Iteration   5: 10664.689 ops/ms
Iteration   6: 11555.778 ops/ms
Iteration   7: 11768.967 ops/ms
Iteration   8: 11979.487 ops/ms
Iteration   9: 12455.936 ops/ms
Iteration  10: 12224.036 ops/ms
Iteration  11: 11905.619 ops/ms
Iteration  12: 12185.156 ops/ms
Iteration  13: 12243.137 ops/ms
Iteration  14: 12261.756 ops/ms
Iteration  15: 11959.719 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.LinkedHashSet":
  11841.149 ±(99.9%) 561.838 ops/ms [Average]
  (min, avg, max) = (10664.689, 11841.149, 12455.936), stdev = 525.543
  CI (99.9%): [11279.311, 12402.987] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.LinkedList

# Run progress: 30.59% complete, ETA 01:03:10
# Fork: 1 of 1
# Warmup Iteration   1: 12151.182 ops/ms
# Warmup Iteration   2: 13972.666 ops/ms
# Warmup Iteration   3: 13737.557 ops/ms
# Warmup Iteration   4: 13844.463 ops/ms
# Warmup Iteration   5: 13879.193 ops/ms
# Warmup Iteration   6: 13889.735 ops/ms
# Warmup Iteration   7: 14024.928 ops/ms
# Warmup Iteration   8: 13806.991 ops/ms
# Warmup Iteration   9: 13864.209 ops/ms
# Warmup Iteration  10: 13664.750 ops/ms
# Warmup Iteration  11: 13773.102 ops/ms
# Warmup Iteration  12: 13895.611 ops/ms
# Warmup Iteration  13: 13980.259 ops/ms
# Warmup Iteration  14: 13855.972 ops/ms
# Warmup Iteration  15: 14091.563 ops/ms
Iteration   1: 13627.816 ops/ms
Iteration   2: 13885.616 ops/ms
Iteration   3: 14128.024 ops/ms
Iteration   4: 13907.561 ops/ms
Iteration   5: 14058.841 ops/ms
Iteration   6: 13863.686 ops/ms
Iteration   7: 14085.716 ops/ms
Iteration   8: 13859.941 ops/ms
Iteration   9: 13918.597 ops/ms
Iteration  10: 13990.113 ops/ms
Iteration  11: 13975.803 ops/ms
Iteration  12: 14018.798 ops/ms
Iteration  13: 13981.693 ops/ms
Iteration  14: 13990.327 ops/ms
Iteration  15: 13983.491 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.LinkedList":
  13951.735 ±(99.9%) 127.447 ops/ms [Average]
  (min, avg, max) = (13627.816, 13951.735, 14128.024), stdev = 119.214
  CI (99.9%): [13824.288, 14079.182] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.LinkedTransferQueue

# Run progress: 31.76% complete, ETA 01:03:19
# Fork: 1 of 1
# Warmup Iteration   1: 8556.594 ops/ms
# Warmup Iteration   2: 9211.587 ops/ms
# Warmup Iteration   3: 9702.274 ops/ms
# Warmup Iteration   4: 9615.606 ops/ms
# Warmup Iteration   5: 9682.356 ops/ms
# Warmup Iteration   6: 9733.803 ops/ms
# Warmup Iteration   7: 9733.317 ops/ms
# Warmup Iteration   8: 9530.911 ops/ms
# Warmup Iteration   9: 8981.486 ops/ms
# Warmup Iteration  10: 8629.040 ops/ms
# Warmup Iteration  11: 9198.692 ops/ms
# Warmup Iteration  12: 9574.934 ops/ms
# Warmup Iteration  13: 9368.035 ops/ms
# Warmup Iteration  14: 9537.852 ops/ms
# Warmup Iteration  15: 8881.542 ops/ms
Iteration   1: 9255.652 ops/ms
Iteration   2: 9247.967 ops/ms
Iteration   3: 9506.588 ops/ms
Iteration   4: 9200.731 ops/ms
Iteration   5: 9497.832 ops/ms
Iteration   6: 8857.719 ops/ms
Iteration   7: 9251.949 ops/ms
Iteration   8: 8976.383 ops/ms
Iteration   9: 9271.684 ops/ms
Iteration  10: 9310.972 ops/ms
Iteration  11: 9222.265 ops/ms
Iteration  12: 9600.875 ops/ms
Iteration  13: 9558.969 ops/ms
Iteration  14: 9619.034 ops/ms
Iteration  15: 9208.619 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.LinkedTransferQueue":
  9305.816 ±(99.9%) 234.424 ops/ms [Average]
  (min, avg, max) = (8857.719, 9305.816, 9619.034), stdev = 219.281
  CI (99.9%): [9071.392, 9540.240] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.PriorityBlockingQueue

# Run progress: 32.94% complete, ETA 01:03:21
# Fork: 1 of 1
# Warmup Iteration   1: 9425.018 ops/ms
# Warmup Iteration   2: 10430.923 ops/ms
# Warmup Iteration   3: 10880.171 ops/ms
# Warmup Iteration   4: 10688.168 ops/ms
# Warmup Iteration   5: 11185.803 ops/ms
# Warmup Iteration   6: 10815.752 ops/ms
# Warmup Iteration   7: 10881.559 ops/ms
# Warmup Iteration   8: 10928.003 ops/ms
# Warmup Iteration   9: 10248.450 ops/ms
# Warmup Iteration  10: 10809.589 ops/ms
# Warmup Iteration  11: 11104.803 ops/ms
# Warmup Iteration  12: 10828.757 ops/ms
# Warmup Iteration  13: 11309.310 ops/ms
# Warmup Iteration  14: 11263.666 ops/ms
# Warmup Iteration  15: 11107.610 ops/ms
Iteration   1: 9909.303 ops/ms
Iteration   2: 10889.207 ops/ms
Iteration   3: 10430.731 ops/ms
Iteration   4: 10966.321 ops/ms
Iteration   5: 10978.240 ops/ms
Iteration   6: 11116.020 ops/ms
Iteration   7: 11182.337 ops/ms
Iteration   8: 11206.993 ops/ms
Iteration   9: 11014.546 ops/ms
Iteration  10: 10915.437 ops/ms
Iteration  11: 10942.221 ops/ms
Iteration  12: 11061.011 ops/ms
Iteration  13: 11193.819 ops/ms
Iteration  14: 10430.468 ops/ms
Iteration  15: 11084.632 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.PriorityBlockingQueue":
  10888.086 ±(99.9%) 384.689 ops/ms [Average]
  (min, avg, max) = (9909.303, 10888.086, 11206.993), stdev = 359.838
  CI (99.9%): [10503.397, 11272.775] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.PriorityQueue

# Run progress: 34.12% complete, ETA 01:03:14
# Fork: 1 of 1
# Warmup Iteration   1: 20997.955 ops/ms
# Warmup Iteration   2: 25979.532 ops/ms
# Warmup Iteration   3: 27153.782 ops/ms
# Warmup Iteration   4: 27250.310 ops/ms
# Warmup Iteration   5: 25380.523 ops/ms
# Warmup Iteration   6: 27127.270 ops/ms
# Warmup Iteration   7: 20179.899 ops/ms
# Warmup Iteration   8: 25662.773 ops/ms
# Warmup Iteration   9: 23685.035 ops/ms
# Warmup Iteration  10: 26118.963 ops/ms
# Warmup Iteration  11: 26669.528 ops/ms
# Warmup Iteration  12: 26581.872 ops/ms
# Warmup Iteration  13: 24596.185 ops/ms
# Warmup Iteration  14: 21202.264 ops/ms
# Warmup Iteration  15: 25691.836 ops/ms
Iteration   1: 26028.040 ops/ms
Iteration   2: 25909.741 ops/ms
Iteration   3: 26758.407 ops/ms
Iteration   4: 27161.349 ops/ms
Iteration   5: 21789.832 ops/ms
Iteration   6: 26895.962 ops/ms
Iteration   7: 27128.688 ops/ms
Iteration   8: 27609.699 ops/ms
Iteration   9: 27445.897 ops/ms
Iteration  10: 26603.184 ops/ms
Iteration  11: 26392.516 ops/ms
Iteration  12: 24348.323 ops/ms
Iteration  13: 26823.153 ops/ms
Iteration  14: 26398.816 ops/ms
Iteration  15: 25766.919 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.PriorityQueue":
  26204.035 ±(99.9%) 1563.098 ops/ms [Average]
  (min, avg, max) = (21789.832, 26204.035, 27609.699), stdev = 1462.123
  CI (99.9%): [24640.937, 27767.133] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.Stack

# Run progress: 35.29% complete, ETA 01:03:01
# Fork: 1 of 1
# Warmup Iteration   1: 43595.087 ops/ms
# Warmup Iteration   2: 50479.116 ops/ms
# Warmup Iteration   3: 52115.443 ops/ms
# Warmup Iteration   4: 51275.505 ops/ms
# Warmup Iteration   5: 51392.698 ops/ms
# Warmup Iteration   6: 50978.286 ops/ms
# Warmup Iteration   7: 46627.597 ops/ms
# Warmup Iteration   8: 48333.036 ops/ms
# Warmup Iteration   9: 51551.295 ops/ms
# Warmup Iteration  10: 50766.689 ops/ms
# Warmup Iteration  11: 50161.922 ops/ms
# Warmup Iteration  12: 51722.467 ops/ms
# Warmup Iteration  13: 52485.463 ops/ms
# Warmup Iteration  14: 51074.560 ops/ms
# Warmup Iteration  15: 48754.239 ops/ms
Iteration   1: 49983.188 ops/ms
Iteration   2: 49801.804 ops/ms
Iteration   3: 50743.374 ops/ms
Iteration   4: 48995.107 ops/ms
Iteration   5: 49719.418 ops/ms
Iteration   6: 50749.019 ops/ms
Iteration   7: 49253.796 ops/ms
Iteration   8: 49303.487 ops/ms
Iteration   9: 47510.696 ops/ms
Iteration  10: 51280.245 ops/ms
Iteration  11: 50614.125 ops/ms
Iteration  12: 51149.372 ops/ms
Iteration  13: 47859.755 ops/ms
Iteration  14: 46528.803 ops/ms
Iteration  15: 51743.300 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.Stack":
  49682.366 ±(99.9%) 1590.124 ops/ms [Average]
  (min, avg, max) = (46528.803, 49682.366, 51743.300), stdev = 1487.403
  CI (99.9%): [48092.242, 51272.490] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.TreeSet

# Run progress: 36.47% complete, ETA 01:02:42
# Fork: 1 of 1
# Warmup Iteration   1: 1585.541 ops/ms
# Warmup Iteration   2: 1897.223 ops/ms
# Warmup Iteration   3: 1954.410 ops/ms
# Warmup Iteration   4: 1985.446 ops/ms
# Warmup Iteration   5: 2017.545 ops/ms
# Warmup Iteration   6: 2166.971 ops/ms
# Warmup Iteration   7: 2253.798 ops/ms
# Warmup Iteration   8: 2117.888 ops/ms
# Warmup Iteration   9: 2228.234 ops/ms
# Warmup Iteration  10: 2263.109 ops/ms
# Warmup Iteration  11: 2242.148 ops/ms
# Warmup Iteration  12: 2267.953 ops/ms
# Warmup Iteration  13: 2141.984 ops/ms
# Warmup Iteration  14: 2242.965 ops/ms
# Warmup Iteration  15: 2261.624 ops/ms
Iteration   1: 2222.903 ops/ms
Iteration   2: 2237.599 ops/ms
Iteration   3: 2113.421 ops/ms
Iteration   4: 2239.155 ops/ms
Iteration   5: 2232.498 ops/ms
Iteration   6: 2239.491 ops/ms
Iteration   7: 2119.724 ops/ms
Iteration   8: 2077.115 ops/ms
Iteration   9: 2183.847 ops/ms
Iteration  10: 2127.457 ops/ms
Iteration  11: 2239.377 ops/ms
Iteration  12: 2040.950 ops/ms
Iteration  13: 2234.523 ops/ms
Iteration  14: 2258.135 ops/ms
Iteration  15: 2186.983 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.TreeSet":
  2183.545 ±(99.9%) 74.604 ops/ms [Average]
  (min, avg, max) = (2040.950, 2183.545, 2258.135), stdev = 69.784
  CI (99.9%): [2108.941, 2258.149] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.Vector

# Run progress: 37.65% complete, ETA 01:02:18
# Fork: 1 of 1
# Warmup Iteration   1: 46674.629 ops/ms
# Warmup Iteration   2: 46383.067 ops/ms
# Warmup Iteration   3: 51162.586 ops/ms
# Warmup Iteration   4: 52007.779 ops/ms
# Warmup Iteration   5: 49759.328 ops/ms
# Warmup Iteration   6: 50183.600 ops/ms
# Warmup Iteration   7: 47595.371 ops/ms
# Warmup Iteration   8: 50964.050 ops/ms
# Warmup Iteration   9: 50918.414 ops/ms
# Warmup Iteration  10: 46740.264 ops/ms
# Warmup Iteration  11: 51763.520 ops/ms
# Warmup Iteration  12: 47818.680 ops/ms
# Warmup Iteration  13: 49607.462 ops/ms
# Warmup Iteration  14: 51181.600 ops/ms
# Warmup Iteration  15: 52644.435 ops/ms
Iteration   1: 49583.738 ops/ms
Iteration   2: 48207.487 ops/ms
Iteration   3: 52649.737 ops/ms
Iteration   4: 52257.593 ops/ms
Iteration   5: 48217.060 ops/ms
Iteration   6: 49824.840 ops/ms
Iteration   7: 48375.753 ops/ms
Iteration   8: 53580.730 ops/ms
Iteration   9: 50656.433 ops/ms
Iteration  10: 51004.734 ops/ms
Iteration  11: 52488.979 ops/ms
Iteration  12: 51015.721 ops/ms
Iteration  13: 51952.556 ops/ms
Iteration  14: 53421.111 ops/ms
Iteration  15: 50408.819 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.Vector":
  50909.686 ±(99.9%) 1940.181 ops/ms [Average]
  (min, avg, max) = (48207.487, 50909.686, 53580.730), stdev = 1814.846
  CI (99.9%): [48969.505, 52849.867] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.VectorNoResize

# Run progress: 38.82% complete, ETA 01:01:50
# Fork: 1 of 1
# Warmup Iteration   1: 57849.196 ops/ms
# Warmup Iteration   2: 65275.323 ops/ms
# Warmup Iteration   3: 65273.770 ops/ms
# Warmup Iteration   4: 64469.747 ops/ms
# Warmup Iteration   5: 65127.039 ops/ms
# Warmup Iteration   6: 65354.891 ops/ms
# Warmup Iteration   7: 63852.106 ops/ms
# Warmup Iteration   8: 65565.208 ops/ms
# Warmup Iteration   9: 65548.115 ops/ms
# Warmup Iteration  10: 65217.309 ops/ms
# Warmup Iteration  11: 65450.137 ops/ms
# Warmup Iteration  12: 65582.389 ops/ms
# Warmup Iteration  13: 64576.867 ops/ms
# Warmup Iteration  14: 65721.717 ops/ms
# Warmup Iteration  15: 65315.698 ops/ms
Iteration   1: 65644.147 ops/ms
Iteration   2: 65666.556 ops/ms
Iteration   3: 65332.882 ops/ms
Iteration   4: 65485.096 ops/ms
Iteration   5: 65664.840 ops/ms
Iteration   6: 65466.221 ops/ms
Iteration   7: 65369.304 ops/ms
Iteration   8: 65302.694 ops/ms
Iteration   9: 65418.056 ops/ms
Iteration  10: 65661.629 ops/ms
Iteration  11: 65367.831 ops/ms
Iteration  12: 64539.245 ops/ms
Iteration  13: 65614.683 ops/ms
Iteration  14: 65411.348 ops/ms
Iteration  15: 65812.398 ops/ms


Result "com.github.chrisgleissner.benchmarks.CollectionAddBenchmark.VectorNoResize":
  65450.462 ±(99.9%) 315.087 ops/ms [Average]
  (min, avg, max) = (64539.245, 65450.462, 65812.398), stdev = 294.733
  CI (99.9%): [65135.374, 65765.549] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.ArrayBlockingQueue

# Run progress: 40.00% complete, ETA 01:01:09
# Fork: 1 of 1
# Warmup Iteration   1: 11205.901 ops/ms
# Warmup Iteration   2: 12513.027 ops/ms
# Warmup Iteration   3: 11103.290 ops/ms
# Warmup Iteration   4: 11088.805 ops/ms
# Warmup Iteration   5: 11019.213 ops/ms
# Warmup Iteration   6: 11123.894 ops/ms
# Warmup Iteration   7: 11125.269 ops/ms
# Warmup Iteration   8: 11128.969 ops/ms
# Warmup Iteration   9: 11112.034 ops/ms
# Warmup Iteration  10: 10902.939 ops/ms
# Warmup Iteration  11: 11133.549 ops/ms
# Warmup Iteration  12: 11140.255 ops/ms
# Warmup Iteration  13: 11126.235 ops/ms
# Warmup Iteration  14: 11110.987 ops/ms
# Warmup Iteration  15: 11104.629 ops/ms
Iteration   1: 11064.005 ops/ms
Iteration   2: 11356.602 ops/ms
Iteration   3: 11282.956 ops/ms
Iteration   4: 11335.751 ops/ms
Iteration   5: 11325.700 ops/ms
Iteration   6: 11322.843 ops/ms
Iteration   7: 11348.518 ops/ms
Iteration   8: 10870.214 ops/ms
Iteration   9: 11358.627 ops/ms
Iteration  10: 11410.100 ops/ms
Iteration  11: 11407.757 ops/ms
Iteration  12: 11423.855 ops/ms
Iteration  13: 11419.406 ops/ms
Iteration  14: 11367.996 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_ArrayBlockingQueue_jmhTest.ArrayBlockingQueue_Throughput(CollectionIterateBenchmark_ArrayBlockingQueue_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.ArrayBlockingQueue":
  11306.738 ±(99.9%) 174.050 ops/ms [Average]
  (min, avg, max) = (10870.214, 11306.738, 11423.855), stdev = 154.291
  CI (99.9%): [11132.688, 11480.788] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.ArrayDeque

# Run progress: 41.18% complete, ETA 00:59:07
# Fork: 1 of 1
# Warmup Iteration   1: 56628.544 ops/ms
# Warmup Iteration   2: 49275.389 ops/ms
# Warmup Iteration   3: 50931.001 ops/ms
# Warmup Iteration   4: 50999.208 ops/ms
# Warmup Iteration   5: 51035.123 ops/ms
# Warmup Iteration   6: 50937.065 ops/ms
# Warmup Iteration   7: 50931.697 ops/ms
# Warmup Iteration   8: 50867.846 ops/ms
# Warmup Iteration   9: 50935.016 ops/ms
# Warmup Iteration  10: 50927.813 ops/ms
# Warmup Iteration  11: 50921.159 ops/ms
# Warmup Iteration  12: 50978.780 ops/ms
# Warmup Iteration  13: 50922.668 ops/ms
# Warmup Iteration  14: 50875.298 ops/ms
# Warmup Iteration  15: 51001.543 ops/ms
Iteration   1: 50388.785 ops/ms
Iteration   2: 50491.898 ops/ms
Iteration   3: 50194.368 ops/ms
Iteration   4: 50978.309 ops/ms
Iteration   5: 53587.567 ops/ms
Iteration   6: 50843.731 ops/ms
Iteration   7: 50993.929 ops/ms
Iteration   8: 51032.286 ops/ms
Iteration   9: 50940.587 ops/ms
Iteration  10: 53029.792 ops/ms
Iteration  11: 53524.067 ops/ms
Iteration  12: 52864.986 ops/ms
Iteration  13: 53340.901 ops/ms
Iteration  14: 51521.771 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_ArrayDeque_jmhTest.ArrayDeque_Throughput(CollectionIterateBenchmark_ArrayDeque_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.ArrayDeque":
  51695.213 ±(99.9%) 1432.397 ops/ms [Average]
  (min, avg, max) = (50194.368, 51695.213, 53587.567), stdev = 1269.782
  CI (99.9%): [50262.816, 53127.609] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.ArrayList

# Run progress: 42.35% complete, ETA 00:57:10
# Fork: 1 of 1
# Warmup Iteration   1: 69908.287 ops/ms
# Warmup Iteration   2: 63264.799 ops/ms
# Warmup Iteration   3: 70959.810 ops/ms
# Warmup Iteration   4: 61535.030 ops/ms
# Warmup Iteration   5: 62488.303 ops/ms
# Warmup Iteration   6: 63151.554 ops/ms
# Warmup Iteration   7: 63077.861 ops/ms
# Warmup Iteration   8: 62917.963 ops/ms
# Warmup Iteration   9: 62968.780 ops/ms
# Warmup Iteration  10: 63378.911 ops/ms
# Warmup Iteration  11: 63452.057 ops/ms
# Warmup Iteration  12: 63087.486 ops/ms
# Warmup Iteration  13: 63102.101 ops/ms
# Warmup Iteration  14: 63252.924 ops/ms
# Warmup Iteration  15: 63263.860 ops/ms
Iteration   1: 63447.157 ops/ms
Iteration   2: 61063.330 ops/ms
Iteration   3: 63594.273 ops/ms
Iteration   4: 62625.887 ops/ms
Iteration   5: 62865.710 ops/ms
Iteration   6: 63603.240 ops/ms
Iteration   7: 63210.369 ops/ms
Iteration   8: 63641.783 ops/ms
Iteration   9: 63563.084 ops/ms
Iteration  10: 63589.064 ops/ms
Iteration  11: 63624.589 ops/ms
Iteration  12: 63561.479 ops/ms
Iteration  13: 63589.057 ops/ms
Iteration  14: 62656.319 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_ArrayList_jmhTest.ArrayList_Throughput(CollectionIterateBenchmark_ArrayList_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.ArrayList":
  63188.239 ±(99.9%) 805.010 ops/ms [Average]
  (min, avg, max) = (61063.330, 63188.239, 63641.783), stdev = 713.620
  CI (99.9%): [62383.229, 63993.248] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.ArrayListNoResize

# Run progress: 43.53% complete, ETA 00:55:18
# Fork: 1 of 1
# Warmup Iteration   1: 67700.689 ops/ms
# Warmup Iteration   2: 59249.729 ops/ms
# Warmup Iteration   3: 61355.577 ops/ms
# Warmup Iteration   4: 61226.740 ops/ms
# Warmup Iteration   5: 61339.063 ops/ms
# Warmup Iteration   6: 61337.210 ops/ms
# Warmup Iteration   7: 61388.390 ops/ms
# Warmup Iteration   8: 61412.371 ops/ms
# Warmup Iteration   9: 61427.646 ops/ms
# Warmup Iteration  10: 61418.502 ops/ms
# Warmup Iteration  11: 61402.395 ops/ms
# Warmup Iteration  12: 61411.879 ops/ms
# Warmup Iteration  13: 61356.091 ops/ms
# Warmup Iteration  14: 61397.875 ops/ms
# Warmup Iteration  15: 57564.048 ops/ms
Iteration   1: 58334.143 ops/ms
Iteration   2: 56191.449 ops/ms
Iteration   3: 61500.878 ops/ms
Iteration   4: 60864.596 ops/ms
Iteration   5: 61067.278 ops/ms
Iteration   6: 61387.173 ops/ms
Iteration   7: 61379.055 ops/ms
Iteration   8: 61484.524 ops/ms
Iteration   9: 61493.419 ops/ms
Iteration  10: 61411.468 ops/ms
Iteration  11: 61123.246 ops/ms
Iteration  12: 61255.611 ops/ms
Iteration  13: 61306.070 ops/ms
Iteration  14: 61394.097 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_ArrayListNoResize_jmhTest.ArrayListNoResize_Throughput(CollectionIterateBenchmark_ArrayListNoResize_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.ArrayListNoResize":
  60728.072 ±(99.9%) 1734.606 ops/ms [Average]
  (min, avg, max) = (56191.449, 60728.072, 61500.878), stdev = 1537.683
  CI (99.9%): [58993.466, 62462.678] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.ConcurrentHashMap

# Run progress: 44.71% complete, ETA 00:53:28
# Fork: 1 of 1
# Warmup Iteration   1: 17455.453 ops/ms
# Warmup Iteration   2: 17366.327 ops/ms
# Warmup Iteration   3: 18698.659 ops/ms
# Warmup Iteration   4: 18609.637 ops/ms
# Warmup Iteration   5: 18622.009 ops/ms
# Warmup Iteration   6: 18526.071 ops/ms
# Warmup Iteration   7: 18696.342 ops/ms
# Warmup Iteration   8: 18614.764 ops/ms
# Warmup Iteration   9: 18594.950 ops/ms
# Warmup Iteration  10: 18605.504 ops/ms
# Warmup Iteration  11: 18614.380 ops/ms
# Warmup Iteration  12: 18384.675 ops/ms
# Warmup Iteration  13: 18607.253 ops/ms
# Warmup Iteration  14: 18684.976 ops/ms
# Warmup Iteration  15: 18592.142 ops/ms
Iteration   1: 17491.585 ops/ms
Iteration   2: 18528.405 ops/ms
Iteration   3: 18638.563 ops/ms
Iteration   4: 18468.820 ops/ms
Iteration   5: 18505.300 ops/ms
Iteration   6: 18611.401 ops/ms
Iteration   7: 18631.395 ops/ms
Iteration   8: 18522.281 ops/ms
Iteration   9: 18368.844 ops/ms
Iteration  10: 18322.482 ops/ms
Iteration  11: 18625.420 ops/ms
Iteration  12: 18671.384 ops/ms
Iteration  13: 18695.476 ops/ms
Iteration  14: 18510.915 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_ConcurrentHashMap_jmhTest.ConcurrentHashMap_Throughput(CollectionIterateBenchmark_ConcurrentHashMap_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.ConcurrentHashMap":
  18470.877 ±(99.9%) 341.063 ops/ms [Average]
  (min, avg, max) = (17491.585, 18470.877, 18695.476), stdev = 302.344
  CI (99.9%): [18129.813, 18811.940] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.ConcurrentLinkedDeque

# Run progress: 45.88% complete, ETA 00:51:43
# Fork: 1 of 1
# Warmup Iteration   1: 41177.682 ops/ms
# Warmup Iteration   2: 39816.729 ops/ms
# Warmup Iteration   3: 43206.236 ops/ms
# Warmup Iteration   4: 39990.547 ops/ms
# Warmup Iteration   5: 40077.249 ops/ms
# Warmup Iteration   6: 40250.636 ops/ms
# Warmup Iteration   7: 39948.411 ops/ms
# Warmup Iteration   8: 40065.189 ops/ms
# Warmup Iteration   9: 40067.416 ops/ms
# Warmup Iteration  10: 38300.252 ops/ms
# Warmup Iteration  11: 39861.514 ops/ms
# Warmup Iteration  12: 40268.285 ops/ms
# Warmup Iteration  13: 40192.177 ops/ms
# Warmup Iteration  14: 39366.144 ops/ms
# Warmup Iteration  15: 39837.396 ops/ms
Iteration   1: 39856.958 ops/ms
Iteration   2: 40286.921 ops/ms
Iteration   3: 39079.496 ops/ms
Iteration   4: 40026.042 ops/ms
Iteration   5: 39781.473 ops/ms
Iteration   6: 39663.973 ops/ms
Iteration   7: 40240.752 ops/ms
Iteration   8: 40128.964 ops/ms
Iteration   9: 40181.889 ops/ms
Iteration  10: 40258.449 ops/ms
Iteration  11: 40250.144 ops/ms
Iteration  12: 40243.597 ops/ms
Iteration  13: 40157.517 ops/ms
Iteration  14: 40272.225 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_ConcurrentLinkedDeque_jmhTest.ConcurrentLinkedDeque_Throughput(CollectionIterateBenchmark_ConcurrentLinkedDeque_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.ConcurrentLinkedDeque":
  40030.600 ±(99.9%) 382.373 ops/ms [Average]
  (min, avg, max) = (39079.496, 40030.600, 40286.921), stdev = 338.964
  CI (99.9%): [39648.227, 40412.973] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.ConcurrentSkipListSet

# Run progress: 47.06% complete, ETA 00:50:02
# Fork: 1 of 1
# Warmup Iteration   1: 55540.305 ops/ms
# Warmup Iteration   2: 53011.561 ops/ms
# Warmup Iteration   3: 51895.171 ops/ms
# Warmup Iteration   4: 50350.144 ops/ms
# Warmup Iteration   5: 51925.786 ops/ms
# Warmup Iteration   6: 51782.331 ops/ms
# Warmup Iteration   7: 51753.935 ops/ms
# Warmup Iteration   8: 51846.874 ops/ms
# Warmup Iteration   9: 51995.575 ops/ms
# Warmup Iteration  10: 51772.181 ops/ms
# Warmup Iteration  11: 52010.813 ops/ms
# Warmup Iteration  12: 51902.416 ops/ms
# Warmup Iteration  13: 51983.448 ops/ms
# Warmup Iteration  14: 52037.431 ops/ms
# Warmup Iteration  15: 47693.723 ops/ms
Iteration   1: 51636.795 ops/ms
Iteration   2: 51100.573 ops/ms
Iteration   3: 51158.970 ops/ms
Iteration   4: 51287.937 ops/ms
Iteration   5: 53703.037 ops/ms
Iteration   6: 51694.950 ops/ms
Iteration   7: 51846.351 ops/ms
Iteration   8: 51695.705 ops/ms
Iteration   9: 51693.928 ops/ms
Iteration  10: 51782.204 ops/ms
Iteration  11: 51651.424 ops/ms
Iteration  12: 51681.623 ops/ms
Iteration  13: 51661.378 ops/ms
Iteration  14: 51649.809 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_ConcurrentSkipListSet_jmhTest.ConcurrentSkipListSet_Throughput(CollectionIterateBenchmark_ConcurrentSkipListSet_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.ConcurrentSkipListSet":
  51731.763 ±(99.9%) 689.648 ops/ms [Average]
  (min, avg, max) = (51100.573, 51731.763, 53703.037), stdev = 611.355
  CI (99.9%): [51042.115, 52421.411] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.CopyOnWriteArrayList

# Run progress: 48.24% complete, ETA 00:48:24
# Fork: 1 of 1
# Warmup Iteration   1: 66655.998 ops/ms
# Warmup Iteration   2: 60091.883 ops/ms
# Warmup Iteration   3: 58657.066 ops/ms
# Warmup Iteration   4: 59612.111 ops/ms
# Warmup Iteration   5: 59578.682 ops/ms
# Warmup Iteration   6: 59351.379 ops/ms
# Warmup Iteration   7: 59358.886 ops/ms
# Warmup Iteration   8: 59452.576 ops/ms
# Warmup Iteration   9: 59554.992 ops/ms
# Warmup Iteration  10: 59544.280 ops/ms
# Warmup Iteration  11: 59606.791 ops/ms
# Warmup Iteration  12: 59543.712 ops/ms
# Warmup Iteration  13: 59519.864 ops/ms
# Warmup Iteration  14: 59522.344 ops/ms
# Warmup Iteration  15: 59644.963 ops/ms
Iteration   1: 55062.974 ops/ms
Iteration   2: 58568.928 ops/ms
Iteration   3: 59392.920 ops/ms
Iteration   4: 59500.473 ops/ms
Iteration   5: 59288.069 ops/ms
Iteration   6: 59666.596 ops/ms
Iteration   7: 59587.766 ops/ms
Iteration   8: 59673.168 ops/ms
Iteration   9: 59592.796 ops/ms
Iteration  10: 59545.081 ops/ms
Iteration  11: 59603.642 ops/ms
Iteration  12: 59574.621 ops/ms
Iteration  13: 59055.295 ops/ms
Iteration  14: 68258.708 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_CopyOnWriteArrayList_jmhTest.CopyOnWriteArrayList_Throughput(CollectionIterateBenchmark_CopyOnWriteArrayList_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.CopyOnWriteArrayList":
  59740.788 ±(99.9%) 3078.284 ops/ms [Average]
  (min, avg, max) = (55062.974, 59740.788, 68258.708), stdev = 2728.819
  CI (99.9%): [56662.504, 62819.073] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.CopyOnWriteArraySet

# Run progress: 49.41% complete, ETA 00:46:49
# Fork: 1 of 1
# Warmup Iteration   1: 67209.185 ops/ms
# Warmup Iteration   2: 64483.272 ops/ms
# Warmup Iteration   3: 61686.514 ops/ms
# Warmup Iteration   4: 61729.530 ops/ms
# Warmup Iteration   5: 61177.714 ops/ms
# Warmup Iteration   6: 61657.726 ops/ms
# Warmup Iteration   7: 61650.175 ops/ms
# Warmup Iteration   8: 61669.249 ops/ms
# Warmup Iteration   9: 61545.731 ops/ms
# Warmup Iteration  10: 61651.617 ops/ms
# Warmup Iteration  11: 61642.005 ops/ms
# Warmup Iteration  12: 61711.194 ops/ms
# Warmup Iteration  13: 61696.712 ops/ms
# Warmup Iteration  14: 61711.646 ops/ms
# Warmup Iteration  15: 61736.068 ops/ms
Iteration   1: 61739.315 ops/ms
Iteration   2: 61619.420 ops/ms
Iteration   3: 61634.084 ops/ms
Iteration   4: 69276.114 ops/ms
Iteration   5: 61639.205 ops/ms
Iteration   6: 61577.723 ops/ms
Iteration   7: 61597.733 ops/ms
Iteration   8: 61618.835 ops/ms
Iteration   9: 61717.422 ops/ms
Iteration  10: 61625.931 ops/ms
Iteration  11: 61535.156 ops/ms
Iteration  12: 61361.069 ops/ms
Iteration  13: 61631.434 ops/ms
Iteration  14: 61327.817 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_CopyOnWriteArraySet_jmhTest.CopyOnWriteArraySet_Throughput(CollectionIterateBenchmark_CopyOnWriteArraySet_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.CopyOnWriteArraySet":
  62135.804 ±(99.9%) 2321.936 ops/ms [Average]
  (min, avg, max) = (61327.817, 62135.804, 69276.114), stdev = 2058.335
  CI (99.9%): [59813.869, 64457.740] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.HashMap

# Run progress: 50.59% complete, ETA 00:45:16
# Fork: 1 of 1
# Warmup Iteration   1: 48777.094 ops/ms
# Warmup Iteration   2: 42800.336 ops/ms
# Warmup Iteration   3: 43208.596 ops/ms
# Warmup Iteration   4: 43039.856 ops/ms
# Warmup Iteration   5: 40809.651 ops/ms
# Warmup Iteration   6: 43190.035 ops/ms
# Warmup Iteration   7: 43211.974 ops/ms
# Warmup Iteration   8: 43270.659 ops/ms
# Warmup Iteration   9: 43148.763 ops/ms
# Warmup Iteration  10: 43156.641 ops/ms
# Warmup Iteration  11: 42702.625 ops/ms
# Warmup Iteration  12: 43196.829 ops/ms
# Warmup Iteration  13: 39652.101 ops/ms
# Warmup Iteration  14: 42351.787 ops/ms
# Warmup Iteration  15: 43187.642 ops/ms
Iteration   1: 43142.964 ops/ms
Iteration   2: 43233.698 ops/ms
Iteration   3: 40277.475 ops/ms
Iteration   4: 43262.299 ops/ms
Iteration   5: 43429.825 ops/ms
Iteration   6: 43207.606 ops/ms
Iteration   7: 43247.536 ops/ms
Iteration   8: 43269.328 ops/ms
Iteration   9: 43288.257 ops/ms
Iteration  10: 43251.963 ops/ms
Iteration  11: 43220.949 ops/ms
Iteration  12: 43358.465 ops/ms
Iteration  13: 45928.740 ops/ms
Iteration  14: 43279.220 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_HashMap_jmhTest.HashMap_Throughput(CollectionIterateBenchmark_HashMap_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.HashMap":
  43242.737 ±(99.9%) 1254.293 ops/ms [Average]
  (min, avg, max) = (40277.475, 43242.737, 45928.740), stdev = 1111.898
  CI (99.9%): [41988.444, 44497.031] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.HashSet

# Run progress: 51.76% complete, ETA 00:43:45
# Fork: 1 of 1
# Warmup Iteration   1: 64725.600 ops/ms
# Warmup Iteration   2: 59955.281 ops/ms
# Warmup Iteration   3: 59706.675 ops/ms
# Warmup Iteration   4: 57313.765 ops/ms
# Warmup Iteration   5: 60836.025 ops/ms
# Warmup Iteration   6: 60596.522 ops/ms
# Warmup Iteration   7: 60538.986 ops/ms
# Warmup Iteration   8: 60694.391 ops/ms
# Warmup Iteration   9: 61105.163 ops/ms
# Warmup Iteration  10: 61157.412 ops/ms
# Warmup Iteration  11: 61084.860 ops/ms
# Warmup Iteration  12: 57068.183 ops/ms
# Warmup Iteration  13: 57359.086 ops/ms
# Warmup Iteration  14: 58801.321 ops/ms
# Warmup Iteration  15: 61088.374 ops/ms
Iteration   1: 57862.330 ops/ms
Iteration   2: 56933.651 ops/ms
Iteration   3: 59399.794 ops/ms
Iteration   4: 56463.332 ops/ms
Iteration   5: 59413.289 ops/ms
Iteration   6: 60992.229 ops/ms
Iteration   7: 60848.808 ops/ms
Iteration   8: 60862.042 ops/ms
Iteration   9: 60794.220 ops/ms
Iteration  10: 60730.541 ops/ms
Iteration  11: 60998.473 ops/ms
Iteration  12: 60887.210 ops/ms
Iteration  13: 60862.971 ops/ms
Iteration  14: 60368.435 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_HashSet_jmhTest.HashSet_Throughput(CollectionIterateBenchmark_HashSet_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.HashSet":
  59815.523 ±(99.9%) 1796.895 ops/ms [Average]
  (min, avg, max) = (56463.332, 59815.523, 60998.473), stdev = 1592.901
  CI (99.9%): [58018.628, 61612.418] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.LinkedBlockingDeque

# Run progress: 52.94% complete, ETA 00:42:17
# Fork: 1 of 1
# Warmup Iteration   1: 14736.958 ops/ms
# Warmup Iteration   2: 16511.485 ops/ms
# Warmup Iteration   3: 15908.124 ops/ms
# Warmup Iteration   4: 16710.754 ops/ms
# Warmup Iteration   5: 14452.480 ops/ms
# Warmup Iteration   6: 16693.360 ops/ms
# Warmup Iteration   7: 16709.013 ops/ms
# Warmup Iteration   8: 16702.421 ops/ms
# Warmup Iteration   9: 16711.756 ops/ms
# Warmup Iteration  10: 16695.858 ops/ms
# Warmup Iteration  11: 16685.138 ops/ms
# Warmup Iteration  12: 16705.157 ops/ms
# Warmup Iteration  13: 16679.691 ops/ms
# Warmup Iteration  14: 16698.327 ops/ms
# Warmup Iteration  15: 16690.975 ops/ms
Iteration   1: 16703.168 ops/ms
Iteration   2: 16696.980 ops/ms
Iteration   3: 16700.623 ops/ms
Iteration   4: 16647.653 ops/ms
Iteration   5: 16704.547 ops/ms
Iteration   6: 16710.687 ops/ms
Iteration   7: 16713.754 ops/ms
Iteration   8: 16714.633 ops/ms
Iteration   9: 16709.939 ops/ms
Iteration  10: 16707.366 ops/ms
Iteration  11: 16573.654 ops/ms
Iteration  12: 16453.455 ops/ms
Iteration  13: 16656.382 ops/ms
Iteration  14: 16499.991 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_LinkedBlockingDeque_jmhTest.LinkedBlockingDeque_Throughput(CollectionIterateBenchmark_LinkedBlockingDeque_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.LinkedBlockingDeque":
  16656.631 ±(99.9%) 96.824 ops/ms [Average]
  (min, avg, max) = (16453.455, 16656.631, 16714.633), stdev = 85.832
  CI (99.9%): [16559.807, 16753.455] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.LinkedBlockingQueue

# Run progress: 54.12% complete, ETA 00:40:51
# Fork: 1 of 1
# Warmup Iteration   1: 8770.152 ops/ms
# Warmup Iteration   2: 9309.340 ops/ms
# Warmup Iteration   3: 10003.104 ops/ms
# Warmup Iteration   4: 9991.826 ops/ms
# Warmup Iteration   5: 10003.636 ops/ms
# Warmup Iteration   6: 10012.079 ops/ms
# Warmup Iteration   7: 10013.119 ops/ms
# Warmup Iteration   8: 9984.230 ops/ms
# Warmup Iteration   9: 10013.322 ops/ms
# Warmup Iteration  10: 10018.042 ops/ms
# Warmup Iteration  11: 10016.717 ops/ms
# Warmup Iteration  12: 10008.511 ops/ms
# Warmup Iteration  13: 10021.248 ops/ms
# Warmup Iteration  14: 10007.963 ops/ms
# Warmup Iteration  15: 10008.198 ops/ms
Iteration   1: 10011.038 ops/ms
Iteration   2: 9916.351 ops/ms
Iteration   3: 10005.873 ops/ms
Iteration   4: 9919.799 ops/ms
Iteration   5: 9923.134 ops/ms
Iteration   6: 9982.813 ops/ms
Iteration   7: 9998.482 ops/ms
Iteration   8: 10004.143 ops/ms
Iteration   9: 10011.774 ops/ms
Iteration  10: 9996.878 ops/ms
Iteration  11: 10009.247 ops/ms
Iteration  12: 10005.200 ops/ms
Iteration  13: 9992.139 ops/ms
Iteration  14: 9728.432 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_LinkedBlockingQueue_jmhTest.LinkedBlockingQueue_Throughput(CollectionIterateBenchmark_LinkedBlockingQueue_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.LinkedBlockingQueue":
  9964.664 ±(99.9%) 86.479 ops/ms [Average]
  (min, avg, max) = (9728.432, 9964.664, 10011.774), stdev = 76.661
  CI (99.9%): [9878.186, 10051.143] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.LinkedHashMap

# Run progress: 55.29% complete, ETA 00:39:27
# Fork: 1 of 1
# Warmup Iteration   1: 59145.746 ops/ms
# Warmup Iteration   2: 51397.587 ops/ms
# Warmup Iteration   3: 52740.018 ops/ms
# Warmup Iteration   4: 53338.807 ops/ms
# Warmup Iteration   5: 53310.490 ops/ms
# Warmup Iteration   6: 53301.447 ops/ms
# Warmup Iteration   7: 53282.186 ops/ms
# Warmup Iteration   8: 53310.837 ops/ms
# Warmup Iteration   9: 53279.144 ops/ms
# Warmup Iteration  10: 52749.732 ops/ms
# Warmup Iteration  11: 51652.476 ops/ms
# Warmup Iteration  12: 53136.099 ops/ms
# Warmup Iteration  13: 53276.484 ops/ms
# Warmup Iteration  14: 53230.575 ops/ms
# Warmup Iteration  15: 53325.468 ops/ms
Iteration   1: 53236.429 ops/ms
Iteration   2: 53272.059 ops/ms
Iteration   3: 53245.855 ops/ms
Iteration   4: 53350.328 ops/ms
Iteration   5: 53261.277 ops/ms
Iteration   6: 53258.110 ops/ms
Iteration   7: 53091.601 ops/ms
Iteration   8: 53225.950 ops/ms
Iteration   9: 53252.522 ops/ms
Iteration  10: 53250.862 ops/ms
Iteration  11: 55048.205 ops/ms
Iteration  12: 59633.644 ops/ms
Iteration  13: 54172.666 ops/ms
Iteration  14: 55581.402 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_LinkedHashMap_jmhTest.LinkedHashMap_Throughput(CollectionIterateBenchmark_LinkedHashMap_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.LinkedHashMap":
  54062.922 ±(99.9%) 2004.707 ops/ms [Average]
  (min, avg, max) = (53091.601, 54062.922, 59633.644), stdev = 1777.120
  CI (99.9%): [52058.215, 56067.629] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.LinkedHashSet

# Run progress: 56.47% complete, ETA 00:38:05
# Fork: 1 of 1
# Warmup Iteration   1: 51614.767 ops/ms
# Warmup Iteration   2: 47693.990 ops/ms
# Warmup Iteration   3: 47537.496 ops/ms
# Warmup Iteration   4: 48327.320 ops/ms
# Warmup Iteration   5: 46742.300 ops/ms
# Warmup Iteration   6: 48370.921 ops/ms
# Warmup Iteration   7: 48438.327 ops/ms
# Warmup Iteration   8: 48402.776 ops/ms
# Warmup Iteration   9: 48435.952 ops/ms
# Warmup Iteration  10: 45050.938 ops/ms
# Warmup Iteration  11: 48381.260 ops/ms
# Warmup Iteration  12: 48346.100 ops/ms
# Warmup Iteration  13: 48442.939 ops/ms
# Warmup Iteration  14: 48389.316 ops/ms
# Warmup Iteration  15: 48461.290 ops/ms
Iteration   1: 48303.035 ops/ms
Iteration   2: 48456.568 ops/ms
Iteration   3: 47281.404 ops/ms
Iteration   4: 47121.845 ops/ms
Iteration   5: 53132.084 ops/ms
Iteration   6: 48321.373 ops/ms
Iteration   7: 48017.494 ops/ms
Iteration   8: 48312.437 ops/ms
Iteration   9: 48336.114 ops/ms
Iteration  10: 48341.465 ops/ms
Iteration  11: 48451.940 ops/ms
Iteration  12: 48406.518 ops/ms
Iteration  13: 48348.406 ops/ms
Iteration  14: 48348.017 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_LinkedHashSet_jmhTest.LinkedHashSet_Throughput(CollectionIterateBenchmark_LinkedHashSet_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.LinkedHashSet":
  48512.764 ±(99.9%) 1573.326 ops/ms [Average]
  (min, avg, max) = (47121.845, 48512.764, 53132.084), stdev = 1394.713
  CI (99.9%): [46939.438, 50086.091] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.LinkedList

# Run progress: 57.65% complete, ETA 00:36:45
# Fork: 1 of 1
# Warmup Iteration   1: 46846.986 ops/ms
# Warmup Iteration   2: 47731.197 ops/ms
# Warmup Iteration   3: 44367.770 ops/ms
# Warmup Iteration   4: 44430.556 ops/ms
# Warmup Iteration   5: 44720.597 ops/ms
# Warmup Iteration   6: 44673.754 ops/ms
# Warmup Iteration   7: 44753.818 ops/ms
# Warmup Iteration   8: 44745.399 ops/ms
# Warmup Iteration   9: 44773.884 ops/ms
# Warmup Iteration  10: 44474.766 ops/ms
# Warmup Iteration  11: 43863.263 ops/ms
# Warmup Iteration  12: 44791.768 ops/ms
# Warmup Iteration  13: 44265.104 ops/ms
# Warmup Iteration  14: 44726.605 ops/ms
# Warmup Iteration  15: 44733.851 ops/ms
Iteration   1: 43714.340 ops/ms
Iteration   2: 44012.541 ops/ms
Iteration   3: 44767.459 ops/ms
Iteration   4: 44148.235 ops/ms
Iteration   5: 39538.603 ops/ms
Iteration   6: 44449.923 ops/ms
Iteration   7: 44476.405 ops/ms
Iteration   8: 44726.758 ops/ms
Iteration   9: 44671.668 ops/ms
Iteration  10: 44700.342 ops/ms
Iteration  11: 44491.662 ops/ms
Iteration  12: 44552.804 ops/ms
Iteration  13: 44655.269 ops/ms
Iteration  14: 44783.114 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_LinkedList_jmhTest.LinkedList_Throughput(CollectionIterateBenchmark_LinkedList_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.LinkedList":
  44120.652 ±(99.9%) 1528.970 ops/ms [Average]
  (min, avg, max) = (39538.603, 44120.652, 44783.114), stdev = 1355.392
  CI (99.9%): [42591.681, 45649.622] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.LinkedTransferQueue

# Run progress: 58.82% complete, ETA 00:35:27
# Fork: 1 of 1
# Warmup Iteration   1: 53056.501 ops/ms
# Warmup Iteration   2: 49259.289 ops/ms
# Warmup Iteration   3: 50298.874 ops/ms
# Warmup Iteration   4: 50284.616 ops/ms
# Warmup Iteration   5: 50313.684 ops/ms
# Warmup Iteration   6: 49503.097 ops/ms
# Warmup Iteration   7: 50274.478 ops/ms
# Warmup Iteration   8: 50289.613 ops/ms
# Warmup Iteration   9: 49600.610 ops/ms
# Warmup Iteration  10: 50310.019 ops/ms
# Warmup Iteration  11: 50316.317 ops/ms
# Warmup Iteration  12: 50287.778 ops/ms
# Warmup Iteration  13: 50324.406 ops/ms
# Warmup Iteration  14: 49713.147 ops/ms
# Warmup Iteration  15: 50321.249 ops/ms
Iteration   1: 48480.066 ops/ms
Iteration   2: 50371.030 ops/ms
Iteration   3: 50349.679 ops/ms
Iteration   4: 56034.224 ops/ms
Iteration   5: 53404.882 ops/ms
Iteration   6: 50397.024 ops/ms
Iteration   7: 50358.356 ops/ms
Iteration   8: 50398.198 ops/ms
Iteration   9: 50360.739 ops/ms
Iteration  10: 50443.424 ops/ms
Iteration  11: 50719.878 ops/ms
Iteration  12: 50648.961 ops/ms
Iteration  13: 50349.459 ops/ms
Iteration  14: 50518.299 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_LinkedTransferQueue_jmhTest.LinkedTransferQueue_Throughput(CollectionIterateBenchmark_LinkedTransferQueue_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.LinkedTransferQueue":
  50916.730 ±(99.9%) 2001.168 ops/ms [Average]
  (min, avg, max) = (48480.066, 50916.730, 56034.224), stdev = 1773.983
  CI (99.9%): [48915.562, 52917.897] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.PriorityBlockingQueue

# Run progress: 60.00% complete, ETA 00:34:10
# Fork: 1 of 1
# Warmup Iteration   1: 77803.392 ops/ms
# Warmup Iteration   2: 75956.835 ops/ms
# Warmup Iteration   3: 78878.982 ops/ms
# Warmup Iteration   4: 79221.917 ops/ms
# Warmup Iteration   5: 79573.715 ops/ms
# Warmup Iteration   6: 73574.801 ops/ms
# Warmup Iteration   7: 79133.049 ops/ms
# Warmup Iteration   8: 78846.880 ops/ms
# Warmup Iteration   9: 78947.189 ops/ms
# Warmup Iteration  10: 76833.240 ops/ms
# Warmup Iteration  11: 79557.075 ops/ms
# Warmup Iteration  12: 79464.692 ops/ms
# Warmup Iteration  13: 79537.537 ops/ms
# Warmup Iteration  14: 79179.867 ops/ms
# Warmup Iteration  15: 79403.776 ops/ms
Iteration   1: 78509.747 ops/ms
Iteration   2: 79362.633 ops/ms
Iteration   3: 71695.740 ops/ms
Iteration   4: 79123.517 ops/ms
Iteration   5: 79390.997 ops/ms
Iteration   6: 79609.163 ops/ms
Iteration   7: 78159.703 ops/ms
Iteration   8: 79498.959 ops/ms
Iteration   9: 79443.776 ops/ms
Iteration  10: 79363.033 ops/ms
Iteration  11: 79409.881 ops/ms
Iteration  12: 79271.329 ops/ms
Iteration  13: 79567.824 ops/ms
Iteration  14: 79180.942 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_PriorityBlockingQueue_jmhTest.PriorityBlockingQueue_Throughput(CollectionIterateBenchmark_PriorityBlockingQueue_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.PriorityBlockingQueue":
  78684.803 ±(99.9%) 2315.081 ops/ms [Average]
  (min, avg, max) = (71695.740, 78684.803, 79609.163), stdev = 2052.259
  CI (99.9%): [76369.722, 80999.884] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.PriorityQueue

# Run progress: 61.18% complete, ETA 00:32:55
# Fork: 1 of 1
# Warmup Iteration   1: 82539.097 ops/ms
# Warmup Iteration   2: 73525.624 ops/ms
# Warmup Iteration   3: 76012.026 ops/ms
# Warmup Iteration   4: 76781.904 ops/ms
# Warmup Iteration   5: 76794.667 ops/ms
# Warmup Iteration   6: 76609.304 ops/ms
# Warmup Iteration   7: 76771.897 ops/ms
# Warmup Iteration   8: 76735.030 ops/ms
# Warmup Iteration   9: 76738.077 ops/ms
# Warmup Iteration  10: 75788.234 ops/ms
# Warmup Iteration  11: 74606.584 ops/ms
# Warmup Iteration  12: 76689.569 ops/ms
# Warmup Iteration  13: 75709.982 ops/ms
# Warmup Iteration  14: 76780.838 ops/ms
# Warmup Iteration  15: 76582.281 ops/ms
Iteration   1: 73451.133 ops/ms
Iteration   2: 76840.922 ops/ms
Iteration   3: 76707.115 ops/ms
Iteration   4: 76561.887 ops/ms
Iteration   5: 76743.636 ops/ms
Iteration   6: 76817.816 ops/ms
Iteration   7: 76794.952 ops/ms
Iteration   8: 76727.057 ops/ms
Iteration   9: 76580.253 ops/ms
Iteration  10: 76785.893 ops/ms
Iteration  11: 76819.218 ops/ms
Iteration  12: 76774.055 ops/ms
Iteration  13: 76196.158 ops/ms
Iteration  14: 76743.328 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_PriorityQueue_jmhTest.PriorityQueue_Throughput(CollectionIterateBenchmark_PriorityQueue_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.PriorityQueue":
  76467.387 ±(99.9%) 997.227 ops/ms [Average]
  (min, avg, max) = (73451.133, 76467.387, 76840.922), stdev = 884.015
  CI (99.9%): [75470.161, 77464.614] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.Stack

# Run progress: 62.35% complete, ETA 00:31:41
# Fork: 1 of 1
# Warmup Iteration   1: 49120.234 ops/ms
# Warmup Iteration   2: 47108.390 ops/ms
# Warmup Iteration   3: 45053.636 ops/ms
# Warmup Iteration   4: 42919.048 ops/ms
# Warmup Iteration   5: 44554.260 ops/ms
# Warmup Iteration   6: 45409.909 ops/ms
# Warmup Iteration   7: 43538.540 ops/ms
# Warmup Iteration   8: 45010.946 ops/ms
# Warmup Iteration   9: 45472.548 ops/ms
# Warmup Iteration  10: 45489.723 ops/ms
# Warmup Iteration  11: 45492.785 ops/ms
# Warmup Iteration  12: 45450.489 ops/ms
# Warmup Iteration  13: 45456.452 ops/ms
# Warmup Iteration  14: 45450.751 ops/ms
# Warmup Iteration  15: 42329.319 ops/ms
Iteration   1: 45530.937 ops/ms
Iteration   2: 45489.149 ops/ms
Iteration   3: 45353.504 ops/ms
Iteration   4: 45355.850 ops/ms
Iteration   5: 52540.941 ops/ms
Iteration   6: 45452.410 ops/ms
Iteration   7: 45382.482 ops/ms
Iteration   8: 45449.664 ops/ms
Iteration   9: 45337.476 ops/ms
Iteration  10: 45520.355 ops/ms
Iteration  11: 45502.610 ops/ms
Iteration  12: 45523.656 ops/ms
Iteration  13: 45543.275 ops/ms
Iteration  14: 45452.257 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_Stack_jmhTest.Stack_Throughput(CollectionIterateBenchmark_Stack_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.Stack":
  45959.612 ±(99.9%) 2138.314 ops/ms [Average]
  (min, avg, max) = (45337.476, 45959.612, 52540.941), stdev = 1895.560
  CI (99.9%): [43821.298, 48097.926] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.TreeSet

# Run progress: 63.53% complete, ETA 00:30:29
# Fork: 1 of 1
# Warmup Iteration   1: 45600.823 ops/ms
# Warmup Iteration   2: 46005.530 ops/ms
# Warmup Iteration   3: 43366.852 ops/ms
# Warmup Iteration   4: 42721.650 ops/ms
# Warmup Iteration   5: 41456.797 ops/ms
# Warmup Iteration   6: 40830.911 ops/ms
# Warmup Iteration   7: 43126.801 ops/ms
# Warmup Iteration   8: 42159.420 ops/ms
# Warmup Iteration   9: 42964.417 ops/ms
# Warmup Iteration  10: 41261.996 ops/ms
# Warmup Iteration  11: 42183.664 ops/ms
# Warmup Iteration  12: 43348.909 ops/ms
# Warmup Iteration  13: 43235.849 ops/ms
# Warmup Iteration  14: 42876.921 ops/ms
# Warmup Iteration  15: 43528.933 ops/ms
Iteration   1: 43314.893 ops/ms
Iteration   2: 43381.820 ops/ms
Iteration   3: 42834.913 ops/ms
Iteration   4: 43181.186 ops/ms
Iteration   5: 50478.684 ops/ms
Iteration   6: 43470.437 ops/ms
Iteration   7: 43152.544 ops/ms
Iteration   8: 43541.466 ops/ms
Iteration   9: 40528.162 ops/ms
Iteration  10: 42465.396 ops/ms
Iteration  11: 43523.934 ops/ms
Iteration  12: 43521.910 ops/ms
Iteration  13: 43119.377 ops/ms
Iteration  14: 43386.966 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_TreeSet_jmhTest.TreeSet_Throughput(CollectionIterateBenchmark_TreeSet_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.TreeSet":
  43564.406 ±(99.9%) 2411.738 ops/ms [Average]
  (min, avg, max) = (40528.162, 43564.406, 50478.684), stdev = 2137.943
  CI (99.9%): [41152.668, 45976.145] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.Vector

# Run progress: 64.71% complete, ETA 00:29:18
# Fork: 1 of 1
# Warmup Iteration   1: 50340.850 ops/ms
# Warmup Iteration   2: 45827.728 ops/ms
# Warmup Iteration   3: 46618.468 ops/ms
# Warmup Iteration   4: 46589.923 ops/ms
# Warmup Iteration   5: 46596.954 ops/ms
# Warmup Iteration   6: 46581.007 ops/ms
# Warmup Iteration   7: 46484.004 ops/ms
# Warmup Iteration   8: 46451.642 ops/ms
# Warmup Iteration   9: 46649.556 ops/ms
# Warmup Iteration  10: 46638.330 ops/ms
# Warmup Iteration  11: 46656.781 ops/ms
# Warmup Iteration  12: 46637.987 ops/ms
# Warmup Iteration  13: 46602.059 ops/ms
# Warmup Iteration  14: 46639.050 ops/ms
# Warmup Iteration  15: 46640.786 ops/ms
Iteration   1: 46594.486 ops/ms
Iteration   2: 46639.470 ops/ms
Iteration   3: 46658.581 ops/ms
Iteration   4: 47628.627 ops/ms
Iteration   5: 46481.106 ops/ms
Iteration   6: 43342.730 ops/ms
Iteration   7: 46542.022 ops/ms
Iteration   8: 46387.099 ops/ms
Iteration   9: 46644.963 ops/ms
Iteration  10: 46583.989 ops/ms
Iteration  11: 46563.837 ops/ms
Iteration  12: 46684.542 ops/ms
Iteration  13: 46564.894 ops/ms
Iteration  14: 46597.991 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_Vector_jmhTest.Vector_Throughput(CollectionIterateBenchmark_Vector_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.Vector":
  46422.453 ±(99.9%) 1052.020 ops/ms [Average]
  (min, avg, max) = (43342.730, 46422.453, 47628.627), stdev = 932.588
  CI (99.9%): [45370.433, 47474.473] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.VectorNoResize

# Run progress: 65.88% complete, ETA 00:28:08
# Fork: 1 of 1
# Warmup Iteration   1: 50064.624 ops/ms
# Warmup Iteration   2: 43206.265 ops/ms
# Warmup Iteration   3: 46551.212 ops/ms
# Warmup Iteration   4: 45948.156 ops/ms
# Warmup Iteration   5: 45960.902 ops/ms
# Warmup Iteration   6: 46547.945 ops/ms
# Warmup Iteration   7: 46598.602 ops/ms
# Warmup Iteration   8: 46629.841 ops/ms
# Warmup Iteration   9: 46812.557 ops/ms
# Warmup Iteration  10: 46231.916 ops/ms
# Warmup Iteration  11: 45734.560 ops/ms
# Warmup Iteration  12: 43705.663 ops/ms
# Warmup Iteration  13: 46084.777 ops/ms
# Warmup Iteration  14: 46794.636 ops/ms
# Warmup Iteration  15: 46081.864 ops/ms
Iteration   1: 43705.588 ops/ms
Iteration   2: 42503.947 ops/ms
Iteration   3: 45594.755 ops/ms
Iteration   4: 45686.494 ops/ms
Iteration   5: 46787.606 ops/ms
Iteration   6: 46935.252 ops/ms
Iteration   7: 46894.790 ops/ms
Iteration   8: 45231.756 ops/ms
Iteration   9: 46861.307 ops/ms
Iteration  10: 46881.720 ops/ms
Iteration  11: 46834.229 ops/ms
Iteration  12: 46810.946 ops/ms
Iteration  13: 46762.453 ops/ms
Iteration  14: 46823.648 ops/ms
Iteration  15: <failure>

java.lang.NullPointerException
	at com.github.chrisgleissner.benchmarks.AbstractCollectionBenchmarkState.doTearDown(AbstractCollectionBenchmarkState.java:88)
	at com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark$MyState.doTearDown(CollectionIterateBenchmark.java:56)
	at com.github.chrisgleissner.benchmarks.generated.CollectionIterateBenchmark_VectorNoResize_jmhTest.VectorNoResize_Throughput(CollectionIterateBenchmark_VectorNoResize_jmhTest.java:141)
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




Result "com.github.chrisgleissner.benchmarks.CollectionIterateBenchmark.VectorNoResize":
  46022.464 ±(99.9%) 1556.837 ops/ms [Average]
  (min, avg, max) = (42503.947, 46022.464, 46935.252), stdev = 1380.095
  CI (99.9%): [44465.627, 47579.300] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 13 threads (1 group; 2x "ArrayBlockingQueueAdd", 10x "ArrayBlockingQueueGet", 1x "ArrayBlockingQueueRemove" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ArrayBlockingQueue

# Run progress: 67.06% complete, ETA 00:26:59
# Fork: 1 of 1
# Warmup Iteration   1: 19626.409 ops/ms
# Warmup Iteration   2: 19926.849 ops/ms
# Warmup Iteration   3: 19059.114 ops/ms
# Warmup Iteration   4: 19516.162 ops/ms
# Warmup Iteration   5: 19682.256 ops/ms
# Warmup Iteration   6: 20537.045 ops/ms
# Warmup Iteration   7: 19534.522 ops/ms
# Warmup Iteration   8: 19592.196 ops/ms
# Warmup Iteration   9: 19294.290 ops/ms
# Warmup Iteration  10: 20500.110 ops/ms
# Warmup Iteration  11: 19355.282 ops/ms
# Warmup Iteration  12: 19450.842 ops/ms
# Warmup Iteration  13: 19383.913 ops/ms
# Warmup Iteration  14: 20594.894 ops/ms
# Warmup Iteration  15: 19995.698 ops/ms
Iteration   1: 20238.502 ops/ms
                 ArrayBlockingQueueAdd:    1421.406 ops/ms
                 ArrayBlockingQueueGet:    17569.516 ops/ms
                 ArrayBlockingQueueRemove: 1247.580 ops/ms

Iteration   2: 20034.117 ops/ms
                 ArrayBlockingQueueAdd:    1399.164 ops/ms
                 ArrayBlockingQueueGet:    18334.079 ops/ms
                 ArrayBlockingQueueRemove: 300.875 ops/ms

Iteration   3: 19910.525 ops/ms
                 ArrayBlockingQueueAdd:    1564.211 ops/ms
                 ArrayBlockingQueueGet:    17214.625 ops/ms
                 ArrayBlockingQueueRemove: 1131.690 ops/ms

Iteration   4: 20024.672 ops/ms
                 ArrayBlockingQueueAdd:    2016.790 ops/ms
                 ArrayBlockingQueueGet:    16931.469 ops/ms
                 ArrayBlockingQueueRemove: 1076.413 ops/ms

Iteration   5: 19683.219 ops/ms
                 ArrayBlockingQueueAdd:    2074.162 ops/ms
                 ArrayBlockingQueueGet:    17481.485 ops/ms
                 ArrayBlockingQueueRemove: 127.572 ops/ms

Iteration   6: 19083.242 ops/ms
                 ArrayBlockingQueueAdd:    1965.102 ops/ms
                 ArrayBlockingQueueGet:    15920.591 ops/ms
                 ArrayBlockingQueueRemove: 1197.548 ops/ms

Iteration   7: 19165.254 ops/ms
                 ArrayBlockingQueueAdd:    2769.182 ops/ms
                 ArrayBlockingQueueGet:    14243.729 ops/ms
                 ArrayBlockingQueueRemove: 2152.343 ops/ms

Iteration   8: 19594.048 ops/ms
                 ArrayBlockingQueueAdd:    1993.077 ops/ms
                 ArrayBlockingQueueGet:    15648.577 ops/ms
                 ArrayBlockingQueueRemove: 1952.394 ops/ms

Iteration   9: 19219.676 ops/ms
                 ArrayBlockingQueueAdd:    2413.943 ops/ms
                 ArrayBlockingQueueGet:    14597.721 ops/ms
                 ArrayBlockingQueueRemove: 2208.012 ops/ms

Iteration  10: 19323.357 ops/ms
                 ArrayBlockingQueueAdd:    1549.512 ops/ms
                 ArrayBlockingQueueGet:    15167.787 ops/ms
                 ArrayBlockingQueueRemove: 2606.059 ops/ms

Iteration  11: 19541.049 ops/ms
                 ArrayBlockingQueueAdd:    2223.171 ops/ms
                 ArrayBlockingQueueGet:    15871.025 ops/ms
                 ArrayBlockingQueueRemove: 1446.853 ops/ms

Iteration  12: 18512.352 ops/ms
                 ArrayBlockingQueueAdd:    3609.999 ops/ms
                 ArrayBlockingQueueGet:    13966.603 ops/ms
                 ArrayBlockingQueueRemove: 935.750 ops/ms

Iteration  13: 19784.822 ops/ms
                 ArrayBlockingQueueAdd:    1061.771 ops/ms
                 ArrayBlockingQueueGet:    16754.872 ops/ms
                 ArrayBlockingQueueRemove: 1968.179 ops/ms

Iteration  14: 20429.874 ops/ms
                 ArrayBlockingQueueAdd:    606.359 ops/ms
                 ArrayBlockingQueueGet:    18345.135 ops/ms
                 ArrayBlockingQueueRemove: 1478.381 ops/ms

Iteration  15: 19809.520 ops/ms
                 ArrayBlockingQueueAdd:    2033.582 ops/ms
                 ArrayBlockingQueueGet:    15973.997 ops/ms
                 ArrayBlockingQueueRemove: 1801.941 ops/ms



Result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ArrayBlockingQueue":
  19623.615 ±(99.9%) 534.678 ops/ms [Average]
  (min, avg, max) = (18512.352, 19623.615, 20429.874), stdev = 500.138
  CI (99.9%): [19088.937, 20158.293] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ArrayBlockingQueue:ArrayBlockingQueueAdd":
  1913.429 ±(99.9%) 767.290 ops/ms [Average]
  (min, avg, max) = (606.359, 1913.429, 3609.999), stdev = 717.724
  CI (99.9%): [1146.138, 2680.719] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ArrayBlockingQueue:ArrayBlockingQueueGet":
  16268.081 ±(99.9%) 1497.388 ops/ms [Average]
  (min, avg, max) = (13966.603, 16268.081, 18345.135), stdev = 1400.658
  CI (99.9%): [14770.692, 17765.469] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ArrayBlockingQueue:ArrayBlockingQueueRemove":
  1442.106 ±(99.9%) 741.127 ops/ms [Average]
  (min, avg, max) = (127.572, 1442.106, 2606.059), stdev = 693.250
  CI (99.9%): [700.979, 2183.233] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 13 threads (1 group; 2x "ArrayListAdd", 10x "ArrayListGet", 1x "ArrayListRemove" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ArrayList

# Run progress: 68.24% complete, ETA 00:25:51
# Fork: 1 of 1
# Warmup Iteration   1: 24260.906 ops/ms
# Warmup Iteration   2: 824.788 ops/ms
# Warmup Iteration   3: 566.634 ops/ms
# Warmup Iteration   4: 4644.832 ops/ms
# Warmup Iteration   5: 1370.434 ops/ms
# Warmup Iteration   6: 878.756 ops/ms
# Warmup Iteration   7: 196.385 ops/ms
# Warmup Iteration   8: 977.392 ops/ms
# Warmup Iteration   9: 644.524 ops/ms
# Warmup Iteration  10: 6194.872 ops/ms
# Warmup Iteration  11: 548.757 ops/ms
# Warmup Iteration  12: 3741.103 ops/ms
# Warmup Iteration  13: 11135.341 ops/ms
# Warmup Iteration  14: 711.436 ops/ms
# Warmup Iteration  15: 4593.103 ops/ms
Iteration   1: 1297.444 ops/ms
                 ArrayListAdd:    32.338 ops/ms
                 ArrayListGet:    1241.186 ops/ms
                 ArrayListRemove: 23.920 ops/ms

Iteration   2: 439.087 ops/ms
                 ArrayListAdd:    157.669 ops/ms
                 ArrayListGet:    264.710 ops/ms
                 ArrayListRemove: 16.708 ops/ms

Iteration   3: 75.704 ops/ms
                 ArrayListAdd:    0.981 ops/ms
                 ArrayListGet:    3.840 ops/ms
                 ArrayListRemove: 70.883 ops/ms

Iteration   4: 87.815 ops/ms
                 ArrayListAdd:    1.078 ops/ms
                 ArrayListGet:    13.964 ops/ms
                 ArrayListRemove: 72.773 ops/ms

Iteration   5: 1799.405 ops/ms
                 ArrayListAdd:    341.510 ops/ms
                 ArrayListGet:    1417.807 ops/ms
                 ArrayListRemove: 40.088 ops/ms

Iteration   6: 253.785 ops/ms
                 ArrayListAdd:    220.761 ops/ms
                 ArrayListGet:    14.614 ops/ms
                 ArrayListRemove: 18.410 ops/ms

Iteration   7: 10998.561 ops/ms
                 ArrayListAdd:    332.284 ops/ms
                 ArrayListGet:    10625.363 ops/ms
                 ArrayListRemove: 40.914 ops/ms

Iteration   8: 510.428 ops/ms
                 ArrayListAdd:    49.973 ops/ms
                 ArrayListGet:    434.788 ops/ms
                 ArrayListRemove: 25.667 ops/ms

Iteration   9: 396.543 ops/ms
                 ArrayListAdd:    54.232 ops/ms
                 ArrayListGet:    316.211 ops/ms
                 ArrayListRemove: 26.100 ops/ms

Iteration  10: 556.678 ops/ms
                 ArrayListAdd:    404.838 ops/ms
                 ArrayListGet:    126.546 ops/ms
                 ArrayListRemove: 25.294 ops/ms

Iteration  11: 1336.185 ops/ms
                 ArrayListAdd:    230.827 ops/ms
                 ArrayListGet:    1085.739 ops/ms
                 ArrayListRemove: 19.618 ops/ms

Iteration  12: 1055.346 ops/ms
                 ArrayListAdd:    90.330 ops/ms
                 ArrayListGet:    947.874 ops/ms
                 ArrayListRemove: 17.142 ops/ms

Iteration  13: 126.041 ops/ms
                 ArrayListAdd:    89.426 ops/ms
                 ArrayListGet:    8.119 ops/ms
                 ArrayListRemove: 28.496 ops/ms

Iteration  14: 1754.375 ops/ms
                 ArrayListAdd:    208.274 ops/ms
                 ArrayListGet:    1517.226 ops/ms
                 ArrayListRemove: 28.876 ops/ms

Iteration  15: 6825.845 ops/ms
                 ArrayListAdd:    363.481 ops/ms
                 ArrayListGet:    6444.205 ops/ms
                 ArrayListRemove: 18.160 ops/ms



Result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ArrayList":
  1834.216 ±(99.9%) 3245.235 ops/ms [Average]
  (min, avg, max) = (75.704, 1834.216, 10998.561), stdev = 3035.595
  CI (99.9%): [≈ 0, 5079.451] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ArrayList:ArrayListAdd":
  171.867 ±(99.9%) 149.253 ops/ms [Average]
  (min, avg, max) = (0.981, 171.867, 404.838), stdev = 139.611
  CI (99.9%): [22.614, 321.120] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ArrayList:ArrayListGet":
  1630.813 ±(99.9%) 3166.690 ops/ms [Average]
  (min, avg, max) = (3.840, 1630.813, 10625.363), stdev = 2962.123
  CI (99.9%): [≈ 0, 4797.503] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ArrayList:ArrayListRemove":
  31.537 ±(99.9%) 19.182 ops/ms [Average]
  (min, avg, max) = (16.708, 31.537, 72.773), stdev = 17.943
  CI (99.9%): [12.354, 50.719] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 13 threads (1 group; 2x "ConcurrentHashMapAdd", 10x "ConcurrentHashMapGet", 1x "ConcurrentHashMapRemove" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentHashMap

# Run progress: 69.41% complete, ETA 00:25:16
# Fork: 1 of 1
# Warmup Iteration   1: 68315.150 ops/ms
# Warmup Iteration   2: 75562.022 ops/ms
# Warmup Iteration   3: 60573.064 ops/ms
# Warmup Iteration   4: 73206.112 ops/ms
# Warmup Iteration   5: 80935.402 ops/ms
# Warmup Iteration   6: 78725.713 ops/ms
# Warmup Iteration   7: 90889.978 ops/ms
# Warmup Iteration   8: 86691.859 ops/ms
# Warmup Iteration   9: 79064.326 ops/ms
# Warmup Iteration  10: 80817.824 ops/ms
# Warmup Iteration  11: 93215.247 ops/ms
# Warmup Iteration  12: 76840.854 ops/ms
# Warmup Iteration  13: 81395.525 ops/ms
# Warmup Iteration  14: 91187.263 ops/ms
# Warmup Iteration  15: 78084.743 ops/ms
Iteration   1: 76609.923 ops/ms
                 ConcurrentHashMapAdd:    4095.284 ops/ms
                 ConcurrentHashMapGet:    68014.588 ops/ms
                 ConcurrentHashMapRemove: 4500.051 ops/ms

Iteration   2: 87383.024 ops/ms
                 ConcurrentHashMapAdd:    3963.925 ops/ms
                 ConcurrentHashMapGet:    76669.492 ops/ms
                 ConcurrentHashMapRemove: 6749.607 ops/ms

Iteration   3: 74014.765 ops/ms
                 ConcurrentHashMapAdd:    4145.977 ops/ms
                 ConcurrentHashMapGet:    65630.863 ops/ms
                 ConcurrentHashMapRemove: 4237.925 ops/ms

Iteration   4: 78558.375 ops/ms
                 ConcurrentHashMapAdd:    5011.401 ops/ms
                 ConcurrentHashMapGet:    69913.681 ops/ms
                 ConcurrentHashMapRemove: 3633.294 ops/ms

Iteration   5: 76182.189 ops/ms
                 ConcurrentHashMapAdd:    3903.318 ops/ms
                 ConcurrentHashMapGet:    68852.650 ops/ms
                 ConcurrentHashMapRemove: 3426.221 ops/ms

Iteration   6: 90030.349 ops/ms
                 ConcurrentHashMapAdd:    5382.153 ops/ms
                 ConcurrentHashMapGet:    77737.791 ops/ms
                 ConcurrentHashMapRemove: 6910.405 ops/ms

Iteration   7: 76809.807 ops/ms
                 ConcurrentHashMapAdd:    4179.496 ops/ms
                 ConcurrentHashMapGet:    69530.936 ops/ms
                 ConcurrentHashMapRemove: 3099.376 ops/ms

Iteration   8: 68497.782 ops/ms
                 ConcurrentHashMapAdd:    6558.426 ops/ms
                 ConcurrentHashMapGet:    57992.156 ops/ms
                 ConcurrentHashMapRemove: 3947.200 ops/ms

Iteration   9: 76142.286 ops/ms
                 ConcurrentHashMapAdd:    3572.822 ops/ms
                 ConcurrentHashMapGet:    70631.609 ops/ms
                 ConcurrentHashMapRemove: 1937.855 ops/ms

Iteration  10: 77732.428 ops/ms
                 ConcurrentHashMapAdd:    3961.352 ops/ms
                 ConcurrentHashMapGet:    69928.505 ops/ms
                 ConcurrentHashMapRemove: 3842.571 ops/ms

Iteration  11: 81132.096 ops/ms
                 ConcurrentHashMapAdd:    5036.634 ops/ms
                 ConcurrentHashMapGet:    70708.899 ops/ms
                 ConcurrentHashMapRemove: 5386.562 ops/ms

Iteration  12: 84404.031 ops/ms
                 ConcurrentHashMapAdd:    5354.751 ops/ms
                 ConcurrentHashMapGet:    74163.047 ops/ms
                 ConcurrentHashMapRemove: 4886.234 ops/ms

Iteration  13: 76099.721 ops/ms
                 ConcurrentHashMapAdd:    4452.893 ops/ms
                 ConcurrentHashMapGet:    67605.978 ops/ms
                 ConcurrentHashMapRemove: 4040.850 ops/ms

Iteration  14: 78281.096 ops/ms
                 ConcurrentHashMapAdd:    4442.886 ops/ms
                 ConcurrentHashMapGet:    68964.365 ops/ms
                 ConcurrentHashMapRemove: 4873.846 ops/ms

Iteration  15: 79852.288 ops/ms
                 ConcurrentHashMapAdd:    4602.720 ops/ms
                 ConcurrentHashMapGet:    70094.718 ops/ms
                 ConcurrentHashMapRemove: 5154.850 ops/ms



Result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentHashMap":
  78782.011 ±(99.9%) 5701.512 ops/ms [Average]
  (min, avg, max) = (68497.782, 78782.011, 90030.349), stdev = 5333.198
  CI (99.9%): [73080.498, 84483.523] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentHashMap:ConcurrentHashMapAdd":
  4577.602 ±(99.9%) 828.395 ops/ms [Average]
  (min, avg, max) = (3572.822, 4577.602, 6558.426), stdev = 774.881
  CI (99.9%): [3749.207, 5405.997] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentHashMap:ConcurrentHashMapGet":
  69762.618 ±(99.9%) 4926.669 ops/ms [Average]
  (min, avg, max) = (57992.156, 69762.618, 77737.791), stdev = 4608.409
  CI (99.9%): [64835.949, 74689.287] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentHashMap:ConcurrentHashMapRemove":
  4441.790 ±(99.9%) 1393.051 ops/ms [Average]
  (min, avg, max) = (1937.855, 4441.790, 6910.405), stdev = 1303.061
  CI (99.9%): [3048.739, 5834.840] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 13 threads (1 group; 2x "ConcurrentLinkedDequeAdd", 10x "ConcurrentLinkedDequeGet", 1x "ConcurrentLinkedDequeRemove" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentLinkedDeque

# Run progress: 70.59% complete, ETA 00:24:09
# Fork: 1 of 1
# Warmup Iteration   1: 276064.300 ops/ms
# Warmup Iteration   2: 292322.735 ops/ms
# Warmup Iteration   3: 268355.176 ops/ms
# Warmup Iteration   4: 327661.343 ops/ms
# Warmup Iteration   5: 297933.564 ops/ms
# Warmup Iteration   6: 275778.137 ops/ms
# Warmup Iteration   7: 265108.469 ops/ms
# Warmup Iteration   8: 231357.586 ops/ms
# Warmup Iteration   9: 269400.438 ops/ms
# Warmup Iteration  10: 279221.312 ops/ms
# Warmup Iteration  11: 239552.233 ops/ms
# Warmup Iteration  12: 246191.400 ops/ms
# Warmup Iteration  13: 277062.748 ops/ms
# Warmup Iteration  14: 248290.600 ops/ms
# Warmup Iteration  15: 262433.149 ops/ms
Iteration   1: 277226.026 ops/ms
                 ConcurrentLinkedDequeAdd:    6319.893 ops/ms
                 ConcurrentLinkedDequeGet:    268401.071 ops/ms
                 ConcurrentLinkedDequeRemove: 2505.061 ops/ms

Iteration   2: 259670.791 ops/ms
                 ConcurrentLinkedDequeAdd:    4695.311 ops/ms
                 ConcurrentLinkedDequeGet:    252111.897 ops/ms
                 ConcurrentLinkedDequeRemove: 2863.583 ops/ms

Iteration   3: 275203.018 ops/ms
                 ConcurrentLinkedDequeAdd:    4691.176 ops/ms
                 ConcurrentLinkedDequeGet:    267957.883 ops/ms
                 ConcurrentLinkedDequeRemove: 2553.959 ops/ms

Iteration   4: 284608.098 ops/ms
                 ConcurrentLinkedDequeAdd:    6013.494 ops/ms
                 ConcurrentLinkedDequeGet:    275924.669 ops/ms
                 ConcurrentLinkedDequeRemove: 2669.936 ops/ms

Iteration   5: 270466.413 ops/ms
                 ConcurrentLinkedDequeAdd:    5651.550 ops/ms
                 ConcurrentLinkedDequeGet:    261587.155 ops/ms
                 ConcurrentLinkedDequeRemove: 3227.707 ops/ms

Iteration   6: 238691.805 ops/ms
                 ConcurrentLinkedDequeAdd:    6621.059 ops/ms
                 ConcurrentLinkedDequeGet:    229059.536 ops/ms
                 ConcurrentLinkedDequeRemove: 3011.211 ops/ms

Iteration   7: 275265.280 ops/ms
                 ConcurrentLinkedDequeAdd:    8223.110 ops/ms
                 ConcurrentLinkedDequeGet:    264806.024 ops/ms
                 ConcurrentLinkedDequeRemove: 2236.146 ops/ms

Iteration   8: 283157.788 ops/ms
                 ConcurrentLinkedDequeAdd:    6571.731 ops/ms
                 ConcurrentLinkedDequeGet:    274141.916 ops/ms
                 ConcurrentLinkedDequeRemove: 2444.141 ops/ms

Iteration   9: 269629.809 ops/ms
                 ConcurrentLinkedDequeAdd:    5664.232 ops/ms
                 ConcurrentLinkedDequeGet:    261282.728 ops/ms
                 ConcurrentLinkedDequeRemove: 2682.849 ops/ms

Iteration  10: 282770.148 ops/ms
                 ConcurrentLinkedDequeAdd:    6267.377 ops/ms
                 ConcurrentLinkedDequeGet:    274573.015 ops/ms
                 ConcurrentLinkedDequeRemove: 1929.755 ops/ms

Iteration  11: 281089.426 ops/ms
                 ConcurrentLinkedDequeAdd:    5529.808 ops/ms
                 ConcurrentLinkedDequeGet:    273022.985 ops/ms
                 ConcurrentLinkedDequeRemove: 2536.633 ops/ms

Iteration  12: 228651.109 ops/ms
                 ConcurrentLinkedDequeAdd:    4868.854 ops/ms
                 ConcurrentLinkedDequeGet:    202869.055 ops/ms
                 ConcurrentLinkedDequeRemove: 20913.200 ops/ms

Iteration  13: 240074.280 ops/ms
                 ConcurrentLinkedDequeAdd:    4998.586 ops/ms
                 ConcurrentLinkedDequeGet:    230646.489 ops/ms
                 ConcurrentLinkedDequeRemove: 4429.204 ops/ms

Iteration  14: 274051.096 ops/ms
                 ConcurrentLinkedDequeAdd:    5470.159 ops/ms
                 ConcurrentLinkedDequeGet:    265603.835 ops/ms
                 ConcurrentLinkedDequeRemove: 2977.102 ops/ms

Iteration  15: 280570.761 ops/ms
                 ConcurrentLinkedDequeAdd:    4549.066 ops/ms
                 ConcurrentLinkedDequeGet:    273348.066 ops/ms
                 ConcurrentLinkedDequeRemove: 2673.629 ops/ms



Result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentLinkedDeque":
  268075.057 ±(99.9%) 19261.509 ops/ms [Average]
  (min, avg, max) = (228651.109, 268075.057, 284608.098), stdev = 18017.228
  CI (99.9%): [248813.547, 287336.566] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentLinkedDeque:ConcurrentLinkedDequeAdd":
  5742.360 ±(99.9%) 1044.803 ops/ms [Average]
  (min, avg, max) = (4549.066, 5742.360, 8223.110), stdev = 977.309
  CI (99.9%): [4697.557, 6787.163] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentLinkedDeque:ConcurrentLinkedDequeGet":
  258355.755 ±(99.9%) 22697.733 ops/ms [Average]
  (min, avg, max) = (202869.055, 258355.755, 275924.669), stdev = 21231.474
  CI (99.9%): [235658.022, 281053.488] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentLinkedDeque:ConcurrentLinkedDequeRemove":
  3976.941 ±(99.9%) 5044.309 ops/ms [Average]
  (min, avg, max) = (1929.755, 3976.941, 20913.200), stdev = 4718.450
  CI (99.9%): [≈ 0, 9021.251] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 13 threads (1 group; 2x "ConcurrentSkipListSetAdd", 10x "ConcurrentSkipListSetGet", 1x "ConcurrentSkipListSetRemove" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentSkipListSet

# Run progress: 71.76% complete, ETA 00:23:05
# Fork: 1 of 1
# Warmup Iteration   1: 173898.359 ops/ms
# Warmup Iteration   2: 182284.820 ops/ms
# Warmup Iteration   3: 193198.066 ops/ms
# Warmup Iteration   4: 188460.009 ops/ms
# Warmup Iteration   5: 178644.680 ops/ms
# Warmup Iteration   6: 187070.875 ops/ms
# Warmup Iteration   7: 188093.617 ops/ms
# Warmup Iteration   8: 187609.972 ops/ms
# Warmup Iteration   9: 179452.766 ops/ms
# Warmup Iteration  10: 184559.252 ops/ms
# Warmup Iteration  11: 191759.770 ops/ms
# Warmup Iteration  12: 186201.567 ops/ms
# Warmup Iteration  13: 185410.874 ops/ms
# Warmup Iteration  14: 178487.511 ops/ms
# Warmup Iteration  15: 181014.520 ops/ms
Iteration   1: 187955.189 ops/ms
                 ConcurrentSkipListSetAdd:    2911.134 ops/ms
                 ConcurrentSkipListSetGet:    183858.043 ops/ms
                 ConcurrentSkipListSetRemove: 1186.011 ops/ms

Iteration   2: 182791.727 ops/ms
                 ConcurrentSkipListSetAdd:    2721.173 ops/ms
                 ConcurrentSkipListSetGet:    178677.033 ops/ms
                 ConcurrentSkipListSetRemove: 1393.522 ops/ms

Iteration   3: 185540.541 ops/ms
                 ConcurrentSkipListSetAdd:    1981.510 ops/ms
                 ConcurrentSkipListSetGet:    182539.508 ops/ms
                 ConcurrentSkipListSetRemove: 1019.523 ops/ms

Iteration   4: 194594.231 ops/ms
                 ConcurrentSkipListSetAdd:    1751.560 ops/ms
                 ConcurrentSkipListSetGet:    192198.956 ops/ms
                 ConcurrentSkipListSetRemove: 643.715 ops/ms

Iteration   5: 185148.145 ops/ms
                 ConcurrentSkipListSetAdd:    2996.492 ops/ms
                 ConcurrentSkipListSetGet:    180980.287 ops/ms
                 ConcurrentSkipListSetRemove: 1171.366 ops/ms

Iteration   6: 184580.561 ops/ms
                 ConcurrentSkipListSetAdd:    2584.497 ops/ms
                 ConcurrentSkipListSetGet:    180853.592 ops/ms
                 ConcurrentSkipListSetRemove: 1142.472 ops/ms

Iteration   7: 173063.289 ops/ms
                 ConcurrentSkipListSetAdd:    2928.946 ops/ms
                 ConcurrentSkipListSetGet:    169466.263 ops/ms
                 ConcurrentSkipListSetRemove: 668.080 ops/ms

Iteration   8: 192249.732 ops/ms
                 ConcurrentSkipListSetAdd:    2098.956 ops/ms
                 ConcurrentSkipListSetGet:    189057.815 ops/ms
                 ConcurrentSkipListSetRemove: 1092.961 ops/ms

Iteration   9: 180034.310 ops/ms
                 ConcurrentSkipListSetAdd:    2487.444 ops/ms
                 ConcurrentSkipListSetGet:    176388.800 ops/ms
                 ConcurrentSkipListSetRemove: 1158.066 ops/ms

Iteration  10: 183854.850 ops/ms
                 ConcurrentSkipListSetAdd:    2808.783 ops/ms
                 ConcurrentSkipListSetGet:    180259.521 ops/ms
                 ConcurrentSkipListSetRemove: 786.546 ops/ms

Iteration  11: 173546.722 ops/ms
                 ConcurrentSkipListSetAdd:    3412.548 ops/ms
                 ConcurrentSkipListSetGet:    169228.416 ops/ms
                 ConcurrentSkipListSetRemove: 905.758 ops/ms

Iteration  12: 178189.248 ops/ms
                 ConcurrentSkipListSetAdd:    2513.946 ops/ms
                 ConcurrentSkipListSetGet:    174516.440 ops/ms
                 ConcurrentSkipListSetRemove: 1158.862 ops/ms

Iteration  13: 191303.866 ops/ms
                 ConcurrentSkipListSetAdd:    1871.061 ops/ms
                 ConcurrentSkipListSetGet:    188650.365 ops/ms
                 ConcurrentSkipListSetRemove: 782.440 ops/ms

Iteration  14: 178868.703 ops/ms
                 ConcurrentSkipListSetAdd:    3071.261 ops/ms
                 ConcurrentSkipListSetGet:    174330.619 ops/ms
                 ConcurrentSkipListSetRemove: 1466.823 ops/ms

Iteration  15: 182257.352 ops/ms
                 ConcurrentSkipListSetAdd:    2476.743 ops/ms
                 ConcurrentSkipListSetGet:    178688.671 ops/ms
                 ConcurrentSkipListSetRemove: 1091.938 ops/ms



Result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentSkipListSet":
  183598.564 ±(99.9%) 6762.054 ops/ms [Average]
  (min, avg, max) = (173063.289, 183598.564, 194594.231), stdev = 6325.229
  CI (99.9%): [176836.511, 190360.618] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentSkipListSet:ConcurrentSkipListSetAdd":
  2574.404 ±(99.9%) 512.167 ops/ms [Average]
  (min, avg, max) = (1751.560, 2574.404, 3412.548), stdev = 479.081
  CI (99.9%): [2062.237, 3086.571] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentSkipListSet:ConcurrentSkipListSetGet":
  179979.622 ±(99.9%) 7196.931 ops/ms [Average]
  (min, avg, max) = (169228.416, 179979.622, 192198.956), stdev = 6732.014
  CI (99.9%): [172782.690, 187176.553] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.ConcurrentSkipListSet:ConcurrentSkipListSetRemove":
  1044.539 ±(99.9%) 260.909 ops/ms [Average]
  (min, avg, max) = (643.715, 1044.539, 1466.823), stdev = 244.055
  CI (99.9%): [783.630, 1305.448] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 14 threads (1 group; 2x "CopyOnWriteArrayAdd", 10x "CopyOnWriteArrayListGet", 2x "CopyOnWriteArrayRemove" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.CopyOnWriteArrayList

# Run progress: 72.94% complete, ETA 00:22:00
# Fork: 1 of 1
# Warmup Iteration   1: 364342.840 ops/ms
# Warmup Iteration   2: 421752.742 ops/ms
# Warmup Iteration   3: 429904.518 ops/ms
# Warmup Iteration   4: 444102.212 ops/ms
# Warmup Iteration   5: 427319.952 ops/ms
# Warmup Iteration   6: 419584.111 ops/ms
# Warmup Iteration   7: 440633.670 ops/ms
# Warmup Iteration   8: 422407.629 ops/ms
# Warmup Iteration   9: 434868.787 ops/ms
# Warmup Iteration  10: 430384.332 ops/ms
# Warmup Iteration  11: 439044.618 ops/ms
# Warmup Iteration  12: 405971.111 ops/ms
# Warmup Iteration  13: 411405.068 ops/ms
# Warmup Iteration  14: 437131.787 ops/ms
# Warmup Iteration  15: 455738.251 ops/ms
Iteration   1: 441178.287 ops/ms
                 CopyOnWriteArrayAdd:     3.165 ops/ms
                 CopyOnWriteArrayListGet: 441171.468 ops/ms
                 CopyOnWriteArrayRemove:  3.653 ops/ms

Iteration   2: 428921.094 ops/ms
                 CopyOnWriteArrayAdd:     7.700 ops/ms
                 CopyOnWriteArrayListGet: 428910.801 ops/ms
                 CopyOnWriteArrayRemove:  2.593 ops/ms

Iteration   3: 427523.787 ops/ms
                 CopyOnWriteArrayAdd:     3.965 ops/ms
                 CopyOnWriteArrayListGet: 427513.945 ops/ms
                 CopyOnWriteArrayRemove:  5.878 ops/ms

Iteration   4: 418084.268 ops/ms
                 CopyOnWriteArrayAdd:     6.416 ops/ms
                 CopyOnWriteArrayListGet: 418074.556 ops/ms
                 CopyOnWriteArrayRemove:  3.296 ops/ms

Iteration   5: 424051.924 ops/ms
                 CopyOnWriteArrayAdd:     6.937 ops/ms
                 CopyOnWriteArrayListGet: 424042.398 ops/ms
                 CopyOnWriteArrayRemove:  2.589 ops/ms

Iteration   6: 422078.091 ops/ms
                 CopyOnWriteArrayAdd:     4.618 ops/ms
                 CopyOnWriteArrayListGet: 422069.149 ops/ms
                 CopyOnWriteArrayRemove:  4.324 ops/ms

Iteration   7: 425489.830 ops/ms
                 CopyOnWriteArrayAdd:     4.728 ops/ms
                 CopyOnWriteArrayListGet: 425480.376 ops/ms
                 CopyOnWriteArrayRemove:  4.726 ops/ms

Iteration   8: 422418.455 ops/ms
                 CopyOnWriteArrayAdd:     4.834 ops/ms
                 CopyOnWriteArrayListGet: 422409.187 ops/ms
                 CopyOnWriteArrayRemove:  4.435 ops/ms

Iteration   9: 428631.130 ops/ms
                 CopyOnWriteArrayAdd:     5.073 ops/ms
                 CopyOnWriteArrayListGet: 428622.682 ops/ms
                 CopyOnWriteArrayRemove:  3.375 ops/ms

Iteration  10: 420590.853 ops/ms
                 CopyOnWriteArrayAdd:     4.873 ops/ms
                 CopyOnWriteArrayListGet: 420581.037 ops/ms
                 CopyOnWriteArrayRemove:  4.942 ops/ms

Iteration  11: 414538.866 ops/ms
                 CopyOnWriteArrayAdd:     8.566 ops/ms
                 CopyOnWriteArrayListGet: 414527.275 ops/ms
                 CopyOnWriteArrayRemove:  3.025 ops/ms

Iteration  12: 413854.118 ops/ms
                 CopyOnWriteArrayAdd:     1.725 ops/ms
                 CopyOnWriteArrayListGet: 413846.310 ops/ms
                 CopyOnWriteArrayRemove:  6.083 ops/ms

Iteration  13: 422183.237 ops/ms
                 CopyOnWriteArrayAdd:     4.184 ops/ms
                 CopyOnWriteArrayListGet: 422172.735 ops/ms
                 CopyOnWriteArrayRemove:  6.318 ops/ms

Iteration  14: 412177.689 ops/ms
                 CopyOnWriteArrayAdd:     4.200 ops/ms
                 CopyOnWriteArrayListGet: 412166.956 ops/ms
                 CopyOnWriteArrayRemove:  6.534 ops/ms

Iteration  15: 410784.614 ops/ms
                 CopyOnWriteArrayAdd:     5.920 ops/ms
                 CopyOnWriteArrayListGet: 410774.452 ops/ms
                 CopyOnWriteArrayRemove:  4.243 ops/ms



Result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.CopyOnWriteArrayList":
  422167.083 ±(99.9%) 8417.709 ops/ms [Average]
  (min, avg, max) = (410784.614, 422167.083, 441178.287), stdev = 7873.930
  CI (99.9%): [413749.374, 430584.792] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.CopyOnWriteArrayList:CopyOnWriteArrayAdd":
  5.127 ±(99.9%) 1.876 ops/ms [Average]
  (min, avg, max) = (1.725, 5.127, 8.566), stdev = 1.755
  CI (99.9%): [3.251, 7.003] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.CopyOnWriteArrayList:CopyOnWriteArrayListGet":
  422157.555 ±(99.9%) 8418.425 ops/ms [Average]
  (min, avg, max) = (410774.452, 422157.555, 441171.468), stdev = 7874.600
  CI (99.9%): [413739.130, 430575.980] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.CopyOnWriteArrayList:CopyOnWriteArrayRemove":
  4.401 ±(99.9%) 1.427 ops/ms [Average]
  (min, avg, max) = (2.589, 4.401, 6.534), stdev = 1.335
  CI (99.9%): [2.974, 5.828] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 14 threads (1 group; 2x "CopyOnWriteArraySetAdd", 10x "CopyOnWriteArraySetGet", 2x "CopyOnWriteArraySetRemove" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.CopyOnWriteArraySet

# Run progress: 74.12% complete, ETA 00:20:56
# Fork: 1 of 1
# Warmup Iteration   1: 113201.986 ops/ms
# Warmup Iteration   2: 138577.322 ops/ms
# Warmup Iteration   3: 160835.116 ops/ms
# Warmup Iteration   4: 166048.330 ops/ms
# Warmup Iteration   5: 174523.025 ops/ms
# Warmup Iteration   6: 163723.529 ops/ms
# Warmup Iteration   7: 147474.159 ops/ms
# Warmup Iteration   8: 136821.050 ops/ms
# Warmup Iteration   9: 162371.909 ops/ms
# Warmup Iteration  10: 144337.192 ops/ms
# Warmup Iteration  11: 156411.383 ops/ms
# Warmup Iteration  12: 143611.736 ops/ms
# Warmup Iteration  13: 146840.536 ops/ms
# Warmup Iteration  14: 169739.215 ops/ms
# Warmup Iteration  15: 163413.833 ops/ms
Iteration   1: 171712.689 ops/ms
                 CopyOnWriteArraySetAdd:    1.140 ops/ms
                 CopyOnWriteArraySetGet:    171710.204 ops/ms
                 CopyOnWriteArraySetRemove: 1.344 ops/ms

Iteration   2: 171251.794 ops/ms
                 CopyOnWriteArraySetAdd:    1.134 ops/ms
                 CopyOnWriteArraySetGet:    171249.487 ops/ms
                 CopyOnWriteArraySetRemove: 1.173 ops/ms

Iteration   3: 169055.532 ops/ms
                 CopyOnWriteArraySetAdd:    1.237 ops/ms
                 CopyOnWriteArraySetGet:    169053.109 ops/ms
                 CopyOnWriteArraySetRemove: 1.186 ops/ms

Iteration   4: 171328.032 ops/ms
                 CopyOnWriteArraySetAdd:    1.220 ops/ms
                 CopyOnWriteArraySetGet:    171325.665 ops/ms
                 CopyOnWriteArraySetRemove: 1.147 ops/ms

Iteration   5: 173131.269 ops/ms
                 CopyOnWriteArraySetAdd:    1.194 ops/ms
                 CopyOnWriteArraySetGet:    173128.865 ops/ms
                 CopyOnWriteArraySetRemove: 1.210 ops/ms

Iteration   6: 152007.902 ops/ms
                 CopyOnWriteArraySetAdd:    1.308 ops/ms
                 CopyOnWriteArraySetGet:    152005.713 ops/ms
                 CopyOnWriteArraySetRemove: 0.881 ops/ms

Iteration   7: 150311.302 ops/ms
                 CopyOnWriteArraySetAdd:    1.880 ops/ms
                 CopyOnWriteArraySetGet:    150308.581 ops/ms
                 CopyOnWriteArraySetRemove: 0.841 ops/ms

Iteration   8: 146902.288 ops/ms
                 CopyOnWriteArraySetAdd:    0.867 ops/ms
                 CopyOnWriteArraySetGet:    146899.980 ops/ms
                 CopyOnWriteArraySetRemove: 1.441 ops/ms

Iteration   9: 165210.126 ops/ms
                 CopyOnWriteArraySetAdd:    1.093 ops/ms
                 CopyOnWriteArraySetGet:    165208.026 ops/ms
                 CopyOnWriteArraySetRemove: 1.006 ops/ms

Iteration  10: 155907.129 ops/ms
                 CopyOnWriteArraySetAdd:    1.068 ops/ms
                 CopyOnWriteArraySetGet:    155905.039 ops/ms
                 CopyOnWriteArraySetRemove: 1.022 ops/ms

Iteration  11: 151359.040 ops/ms
                 CopyOnWriteArraySetAdd:    1.146 ops/ms
                 CopyOnWriteArraySetGet:    151356.869 ops/ms
                 CopyOnWriteArraySetRemove: 1.024 ops/ms

Iteration  12: 151906.925 ops/ms
                 CopyOnWriteArraySetAdd:    1.168 ops/ms
                 CopyOnWriteArraySetGet:    151904.517 ops/ms
                 CopyOnWriteArraySetRemove: 1.240 ops/ms

Iteration  13: 165166.931 ops/ms
                 CopyOnWriteArraySetAdd:    1.172 ops/ms
                 CopyOnWriteArraySetGet:    165164.622 ops/ms
                 CopyOnWriteArraySetRemove: 1.137 ops/ms

Iteration  14: 157323.531 ops/ms
                 CopyOnWriteArraySetAdd:    1.521 ops/ms
                 CopyOnWriteArraySetGet:    157320.978 ops/ms
                 CopyOnWriteArraySetRemove: 1.033 ops/ms

Iteration  15: 169978.620 ops/ms
                 CopyOnWriteArraySetAdd:    1.189 ops/ms
                 CopyOnWriteArraySetGet:    169976.284 ops/ms
                 CopyOnWriteArraySetRemove: 1.147 ops/ms



Result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.CopyOnWriteArraySet":
  161503.541 ±(99.9%) 10139.693 ops/ms [Average]
  (min, avg, max) = (146902.288, 161503.541, 173131.269), stdev = 9484.675
  CI (99.9%): [151363.848, 171643.233] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.CopyOnWriteArraySet:CopyOnWriteArraySetAdd":
  1.222 ±(99.9%) 0.243 ops/ms [Average]
  (min, avg, max) = (0.867, 1.222, 1.880), stdev = 0.227
  CI (99.9%): [0.979, 1.465] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.CopyOnWriteArraySet:CopyOnWriteArraySetGet":
  161501.196 ±(99.9%) 10139.685 ops/ms [Average]
  (min, avg, max) = (146899.980, 161501.196, 173128.865), stdev = 9484.668
  CI (99.9%): [151361.511, 171640.881] (assumes normal distribution)

Secondary result "com.github.chrisgleissner.benchmarks.ConcCollectionBenchmark.CopyOnWriteArraySet:CopyOnWriteArraySetRemove":
  1.122 ±(99.9%) 0.171 ops/ms [Average]
  (min, avg, max) = (0.841, 1.122, 1.441), stdev = 0.160
  CI (99.9%): [0.951, 1.293] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CounterBenchmark.atomicInteger

# Run progress: 75.29% complete, ETA 00:34:03
# Fork: 1 of 1
# Warmup Iteration   1: 165709.540 ops/ms
# Warmup Iteration   2: 133856.161 ops/ms
# Warmup Iteration   3: 131901.588 ops/ms
# Warmup Iteration   4: 126003.080 ops/ms
# Warmup Iteration   5: 132229.424 ops/ms
# Warmup Iteration   6: 132732.977 ops/ms
# Warmup Iteration   7: 131058.607 ops/ms
# Warmup Iteration   8: 128034.050 ops/ms
# Warmup Iteration   9: 132360.035 ops/ms
# Warmup Iteration  10: 133504.816 ops/ms
# Warmup Iteration  11: 127446.978 ops/ms
# Warmup Iteration  12: 131437.470 ops/ms
# Warmup Iteration  13: 133934.549 ops/ms
# Warmup Iteration  14: 133630.411 ops/ms
# Warmup Iteration  15: 133332.013 ops/ms
Iteration   1: 133811.303 ops/ms
Iteration   2: 128884.631 ops/ms
Iteration   3: 131977.697 ops/ms
Iteration   4: 132434.255 ops/ms
Iteration   5: 132728.053 ops/ms
Iteration   6: 132094.853 ops/ms
Iteration   7: 132727.352 ops/ms
Iteration   8: 132417.619 ops/ms
Iteration   9: 133694.385 ops/ms
Iteration  10: 133798.953 ops/ms
Iteration  11: 132549.174 ops/ms
Iteration  12: 131668.447 ops/ms
Iteration  13: 132691.138 ops/ms
Iteration  14: 124219.376 ops/ms
Iteration  15: 133489.767 ops/ms


Result "com.github.chrisgleissner.benchmarks.CounterBenchmark.atomicInteger":
  131945.800 ±(99.9%) 2620.643 ops/ms [Average]
  (min, avg, max) = (124219.376, 131945.800, 133811.303), stdev = 2451.351
  CI (99.9%): [129325.157, 134566.444] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CounterBenchmark.atomicLong

# Run progress: 76.47% complete, ETA 00:32:06
# Fork: 1 of 1
# Warmup Iteration   1: 165758.634 ops/ms
# Warmup Iteration   2: 145972.297 ops/ms
# Warmup Iteration   3: 145882.183 ops/ms
# Warmup Iteration   4: 145363.434 ops/ms
# Warmup Iteration   5: 133769.660 ops/ms
# Warmup Iteration   6: 145145.006 ops/ms
# Warmup Iteration   7: 146409.318 ops/ms
# Warmup Iteration   8: 145214.785 ops/ms
# Warmup Iteration   9: 144317.612 ops/ms
# Warmup Iteration  10: 145932.232 ops/ms
# Warmup Iteration  11: 144205.948 ops/ms
# Warmup Iteration  12: 145132.549 ops/ms
# Warmup Iteration  13: 128732.635 ops/ms
# Warmup Iteration  14: 144671.878 ops/ms
# Warmup Iteration  15: 144829.818 ops/ms
Iteration   1: 145997.789 ops/ms
Iteration   2: 145318.998 ops/ms
Iteration   3: 142046.080 ops/ms
Iteration   4: 145303.539 ops/ms
Iteration   5: 146383.487 ops/ms
Iteration   6: 139083.531 ops/ms
Iteration   7: 143406.335 ops/ms
Iteration   8: 136092.799 ops/ms
Iteration   9: 142418.176 ops/ms
Iteration  10: 146241.645 ops/ms
Iteration  11: 137793.450 ops/ms
Iteration  12: 146304.023 ops/ms
Iteration  13: 145188.161 ops/ms
Iteration  14: 145999.301 ops/ms
Iteration  15: 143484.759 ops/ms


Result "com.github.chrisgleissner.benchmarks.CounterBenchmark.atomicLong":
  143404.138 ±(99.9%) 3564.989 ops/ms [Average]
  (min, avg, max) = (136092.799, 143404.138, 146383.487), stdev = 3334.693
  CI (99.9%): [139839.150, 146969.127] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CounterBenchmark.mutableInt

# Run progress: 77.65% complete, ETA 00:30:12
# Fork: 1 of 1
# Warmup Iteration   1: 229817.355 ops/ms
# Warmup Iteration   2: 132040.573 ops/ms
# Warmup Iteration   3: 130902.234 ops/ms
# Warmup Iteration   4: 130766.784 ops/ms
# Warmup Iteration   5: 131747.861 ops/ms
# Warmup Iteration   6: 131585.533 ops/ms
# Warmup Iteration   7: 131256.262 ops/ms
# Warmup Iteration   8: 132259.321 ops/ms
# Warmup Iteration   9: 130884.887 ops/ms
# Warmup Iteration  10: 131108.686 ops/ms
# Warmup Iteration  11: 132112.237 ops/ms
# Warmup Iteration  12: 131743.313 ops/ms
# Warmup Iteration  13: 132414.678 ops/ms
# Warmup Iteration  14: 130658.648 ops/ms
# Warmup Iteration  15: 132202.978 ops/ms
Iteration   1: 131321.195 ops/ms
Iteration   2: 131942.404 ops/ms
Iteration   3: 132409.155 ops/ms
Iteration   4: 132232.053 ops/ms
Iteration   5: 131645.755 ops/ms
Iteration   6: 131820.353 ops/ms
Iteration   7: 132168.308 ops/ms
Iteration   8: 130995.043 ops/ms
Iteration   9: 132133.464 ops/ms
Iteration  10: 132035.186 ops/ms
Iteration  11: 132261.553 ops/ms
Iteration  12: 131682.066 ops/ms
Iteration  13: 132371.232 ops/ms
Iteration  14: 131590.012 ops/ms
Iteration  15: 128927.956 ops/ms


Result "com.github.chrisgleissner.benchmarks.CounterBenchmark.mutableInt":
  131702.382 ±(99.9%) 925.156 ops/ms [Average]
  (min, avg, max) = (128927.956, 131702.382, 132409.155), stdev = 865.391
  CI (99.9%): [130777.226, 132627.538] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CounterBenchmark.mutableLong

# Run progress: 78.82% complete, ETA 00:28:20
# Fork: 1 of 1
# Warmup Iteration   1: 218546.305 ops/ms
# Warmup Iteration   2: 145949.849 ops/ms
# Warmup Iteration   3: 146351.595 ops/ms
# Warmup Iteration   4: 145722.731 ops/ms
# Warmup Iteration   5: 145495.564 ops/ms
# Warmup Iteration   6: 145879.447 ops/ms
# Warmup Iteration   7: 144600.848 ops/ms
# Warmup Iteration   8: 145596.455 ops/ms
# Warmup Iteration   9: 145575.227 ops/ms
# Warmup Iteration  10: 145388.447 ops/ms
# Warmup Iteration  11: 145335.043 ops/ms
# Warmup Iteration  12: 144265.102 ops/ms
# Warmup Iteration  13: 145522.408 ops/ms
# Warmup Iteration  14: 145311.440 ops/ms
# Warmup Iteration  15: 146182.244 ops/ms
Iteration   1: 144955.800 ops/ms
Iteration   2: 145623.386 ops/ms
Iteration   3: 141339.315 ops/ms
Iteration   4: 145990.756 ops/ms
Iteration   5: 146168.042 ops/ms
Iteration   6: 146369.101 ops/ms
Iteration   7: 146502.250 ops/ms
Iteration   8: 146248.011 ops/ms
Iteration   9: 144728.261 ops/ms
Iteration  10: 145445.893 ops/ms
Iteration  11: 145969.229 ops/ms
Iteration  12: 144237.023 ops/ms
Iteration  13: 144765.706 ops/ms
Iteration  14: 145019.980 ops/ms
Iteration  15: 144173.155 ops/ms


Result "com.github.chrisgleissner.benchmarks.CounterBenchmark.mutableLong":
  145169.061 ±(99.9%) 1397.694 ops/ms [Average]
  (min, avg, max) = (141339.315, 145169.061, 146502.250), stdev = 1307.404
  CI (99.9%): [143771.367, 146566.755] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CounterBenchmark.primitiveInt

# Run progress: 80.00% complete, ETA 00:26:30
# Fork: 1 of 1
# Warmup Iteration   1: 224926.066 ops/ms
# Warmup Iteration   2: 256689.372 ops/ms
# Warmup Iteration   3: 264830.813 ops/ms
# Warmup Iteration   4: 264914.545 ops/ms
# Warmup Iteration   5: 255704.891 ops/ms
# Warmup Iteration   6: 264843.056 ops/ms
# Warmup Iteration   7: 264428.094 ops/ms
# Warmup Iteration   8: 257569.162 ops/ms
# Warmup Iteration   9: 266358.839 ops/ms
# Warmup Iteration  10: 261366.840 ops/ms
# Warmup Iteration  11: 264615.489 ops/ms
# Warmup Iteration  12: 259452.612 ops/ms
# Warmup Iteration  13: 265835.099 ops/ms
# Warmup Iteration  14: 263440.831 ops/ms
# Warmup Iteration  15: 266069.253 ops/ms
Iteration   1: 266710.677 ops/ms
Iteration   2: 247960.688 ops/ms
Iteration   3: 261670.720 ops/ms
Iteration   4: 266592.374 ops/ms
Iteration   5: 266630.414 ops/ms
Iteration   6: 252433.838 ops/ms
Iteration   7: 245366.095 ops/ms
Iteration   8: 250052.912 ops/ms
Iteration   9: 258869.451 ops/ms
Iteration  10: 266355.479 ops/ms
Iteration  11: 264510.502 ops/ms
Iteration  12: 266564.945 ops/ms
Iteration  13: 263043.418 ops/ms
Iteration  14: 265971.458 ops/ms
Iteration  15: 262965.675 ops/ms


Result "com.github.chrisgleissner.benchmarks.CounterBenchmark.primitiveInt":
  260379.910 ±(99.9%) 8117.615 ops/ms [Average]
  (min, avg, max) = (245366.095, 260379.910, 266710.677), stdev = 7593.222
  CI (99.9%): [252262.295, 268497.524] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.CounterBenchmark.primitiveLong

# Run progress: 81.18% complete, ETA 00:24:43
# Fork: 1 of 1
# Warmup Iteration   1: 228534.128 ops/ms
# Warmup Iteration   2: 250479.837 ops/ms
# Warmup Iteration   3: 250373.413 ops/ms
# Warmup Iteration   4: 246303.005 ops/ms
# Warmup Iteration   5: 239333.518 ops/ms
# Warmup Iteration   6: 247867.800 ops/ms
# Warmup Iteration   7: 245905.828 ops/ms
# Warmup Iteration   8: 235808.164 ops/ms
# Warmup Iteration   9: 245821.608 ops/ms
# Warmup Iteration  10: 248783.579 ops/ms
# Warmup Iteration  11: 240091.408 ops/ms
# Warmup Iteration  12: 247045.190 ops/ms
# Warmup Iteration  13: 248020.958 ops/ms
# Warmup Iteration  14: 248586.729 ops/ms
# Warmup Iteration  15: 249014.087 ops/ms
Iteration   1: 250527.612 ops/ms
Iteration   2: 247470.794 ops/ms
Iteration   3: 249955.540 ops/ms
Iteration   4: 249808.303 ops/ms
Iteration   5: 233828.166 ops/ms
Iteration   6: 238885.851 ops/ms
Iteration   7: 250325.462 ops/ms
Iteration   8: 239655.319 ops/ms
Iteration   9: 250430.217 ops/ms
Iteration  10: 232471.682 ops/ms
Iteration  11: 234486.310 ops/ms
Iteration  12: 250288.235 ops/ms
Iteration  13: 239797.339 ops/ms
Iteration  14: 248593.439 ops/ms
Iteration  15: 236043.976 ops/ms


Result "com.github.chrisgleissner.benchmarks.CounterBenchmark.primitiveLong":
  243504.550 ±(99.9%) 7640.230 ops/ms [Average]
  (min, avg, max) = (232471.682, 243504.550, 250527.612), stdev = 7146.676
  CI (99.9%): [235864.319, 251144.780] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.GetterBenchmark.direct

# Run progress: 82.35% complete, ETA 00:22:57
# Fork: 1 of 1
# Warmup Iteration   1: 110360.542 ops/ms
# Warmup Iteration   2: 137537.857 ops/ms
# Warmup Iteration   3: 136025.380 ops/ms
# Warmup Iteration   4: 137410.417 ops/ms
# Warmup Iteration   5: 136614.254 ops/ms
# Warmup Iteration   6: 135596.537 ops/ms
# Warmup Iteration   7: 131159.260 ops/ms
# Warmup Iteration   8: 137151.665 ops/ms
# Warmup Iteration   9: 130387.557 ops/ms
# Warmup Iteration  10: 135028.415 ops/ms
# Warmup Iteration  11: 135645.743 ops/ms
# Warmup Iteration  12: 133589.280 ops/ms
# Warmup Iteration  13: 137212.406 ops/ms
# Warmup Iteration  14: 136425.546 ops/ms
# Warmup Iteration  15: 136915.441 ops/ms
Iteration   1: 136460.125 ops/ms
Iteration   2: 135656.795 ops/ms
Iteration   3: 137220.083 ops/ms
Iteration   4: 135561.509 ops/ms
Iteration   5: 136665.574 ops/ms
Iteration   6: 136798.275 ops/ms
Iteration   7: 135931.519 ops/ms
Iteration   8: 135973.784 ops/ms
Iteration   9: 131672.257 ops/ms
Iteration  10: 137779.929 ops/ms
Iteration  11: 136295.337 ops/ms
Iteration  12: 135964.232 ops/ms
Iteration  13: 136443.611 ops/ms
Iteration  14: 135727.013 ops/ms
Iteration  15: 136526.988 ops/ms


Result "com.github.chrisgleissner.benchmarks.GetterBenchmark.direct":
  136045.135 ±(99.9%) 1445.647 ops/ms [Average]
  (min, avg, max) = (131672.257, 136045.135, 137779.929), stdev = 1352.259
  CI (99.9%): [134599.488, 137490.783] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.GetterBenchmark.lambdaMetaFactoryForGetter

# Run progress: 83.53% complete, ETA 00:21:14
# Fork: 1 of 1
# Warmup Iteration   1: 84681.354 ops/ms
# Warmup Iteration   2: 94652.681 ops/ms
# Warmup Iteration   3: 88915.035 ops/ms
# Warmup Iteration   4: 93705.211 ops/ms
# Warmup Iteration   5: 94004.480 ops/ms
# Warmup Iteration   6: 94149.613 ops/ms
# Warmup Iteration   7: 93240.075 ops/ms
# Warmup Iteration   8: 93856.868 ops/ms
# Warmup Iteration   9: 93013.667 ops/ms
# Warmup Iteration  10: 90587.106 ops/ms
# Warmup Iteration  11: 90785.711 ops/ms
# Warmup Iteration  12: 92216.816 ops/ms
# Warmup Iteration  13: 90353.914 ops/ms
# Warmup Iteration  14: 92188.335 ops/ms
# Warmup Iteration  15: 95086.089 ops/ms
Iteration   1: 93082.419 ops/ms
Iteration   2: 95162.784 ops/ms
Iteration   3: 94181.673 ops/ms
Iteration   4: 94642.208 ops/ms
Iteration   5: 95032.664 ops/ms
Iteration   6: 93654.647 ops/ms
Iteration   7: 94784.667 ops/ms
Iteration   8: 94873.568 ops/ms
Iteration   9: 94462.764 ops/ms
Iteration  10: 88277.955 ops/ms
Iteration  11: 94491.018 ops/ms
Iteration  12: 94201.706 ops/ms
Iteration  13: 94305.134 ops/ms
Iteration  14: 95060.927 ops/ms
Iteration  15: 94158.822 ops/ms


Result "com.github.chrisgleissner.benchmarks.GetterBenchmark.lambdaMetaFactoryForGetter":
  94024.864 ±(99.9%) 1799.716 ops/ms [Average]
  (min, avg, max) = (88277.955, 94024.864, 95162.784), stdev = 1683.455
  CI (99.9%): [92225.148, 95824.579] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.GetterBenchmark.methodHandleForField

# Run progress: 84.71% complete, ETA 00:19:32
# Fork: 1 of 1
# Warmup Iteration   1: 18827.816 ops/ms
# Warmup Iteration   2: 20744.221 ops/ms
# Warmup Iteration   3: 20801.068 ops/ms
# Warmup Iteration   4: 20735.927 ops/ms
# Warmup Iteration   5: 20801.429 ops/ms
# Warmup Iteration   6: 20369.615 ops/ms
# Warmup Iteration   7: 20528.678 ops/ms
# Warmup Iteration   8: 20774.806 ops/ms
# Warmup Iteration   9: 20995.209 ops/ms
# Warmup Iteration  10: 20782.257 ops/ms
# Warmup Iteration  11: 20926.867 ops/ms
# Warmup Iteration  12: 20896.052 ops/ms
# Warmup Iteration  13: 20900.113 ops/ms
# Warmup Iteration  14: 20901.084 ops/ms
# Warmup Iteration  15: 20914.917 ops/ms
Iteration   1: 20185.628 ops/ms
Iteration   2: 20499.270 ops/ms
Iteration   3: 20808.133 ops/ms
Iteration   4: 20866.526 ops/ms
Iteration   5: 21107.213 ops/ms
Iteration   6: 20685.380 ops/ms
Iteration   7: 20202.004 ops/ms
Iteration   8: 20933.884 ops/ms
Iteration   9: 20801.513 ops/ms
Iteration  10: 21011.188 ops/ms
Iteration  11: 20508.914 ops/ms
Iteration  12: 20845.324 ops/ms
Iteration  13: 21111.329 ops/ms
Iteration  14: 20426.173 ops/ms
Iteration  15: 20251.375 ops/ms


Result "com.github.chrisgleissner.benchmarks.GetterBenchmark.methodHandleForField":
  20682.924 ±(99.9%) 340.338 ops/ms [Average]
  (min, avg, max) = (20185.628, 20682.924, 21111.329), stdev = 318.352
  CI (99.9%): [20342.586, 21023.261] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.GetterBenchmark.methodHandleForGetter

# Run progress: 85.88% complete, ETA 00:17:53
# Fork: 1 of 1
# Warmup Iteration   1: 19736.936 ops/ms
# Warmup Iteration   2: 20977.702 ops/ms
# Warmup Iteration   3: 21697.392 ops/ms
# Warmup Iteration   4: 21802.726 ops/ms
# Warmup Iteration   5: 21581.308 ops/ms
# Warmup Iteration   6: 21694.394 ops/ms
# Warmup Iteration   7: 21625.527 ops/ms
# Warmup Iteration   8: 21530.985 ops/ms
# Warmup Iteration   9: 21551.561 ops/ms
# Warmup Iteration  10: 21680.161 ops/ms
# Warmup Iteration  11: 21689.182 ops/ms
# Warmup Iteration  12: 21741.650 ops/ms
# Warmup Iteration  13: 21499.589 ops/ms
# Warmup Iteration  14: 21575.678 ops/ms
# Warmup Iteration  15: 21476.341 ops/ms
Iteration   1: 21684.122 ops/ms
Iteration   2: 21547.627 ops/ms
Iteration   3: 21330.158 ops/ms
Iteration   4: 21677.161 ops/ms
Iteration   5: 21615.779 ops/ms
Iteration   6: 21601.035 ops/ms
Iteration   7: 21671.698 ops/ms
Iteration   8: 21680.407 ops/ms
Iteration   9: 21602.572 ops/ms
Iteration  10: 21747.411 ops/ms
Iteration  11: 21105.855 ops/ms
Iteration  12: 21765.199 ops/ms
Iteration  13: 17366.035 ops/ms
Iteration  14: 21322.599 ops/ms
Iteration  15: 21674.681 ops/ms


Result "com.github.chrisgleissner.benchmarks.GetterBenchmark.methodHandleForGetter":
  21292.823 ±(99.9%) 1177.606 ops/ms [Average]
  (min, avg, max) = (17366.035, 21292.823, 21765.199), stdev = 1101.534
  CI (99.9%): [20115.216, 22470.429] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.GetterBenchmark.reflection

# Run progress: 87.06% complete, ETA 00:16:15
# Fork: 1 of 1
# Warmup Iteration   1: 26768.931 ops/ms
# Warmup Iteration   2: 31441.278 ops/ms
# Warmup Iteration   3: 32124.411 ops/ms
# Warmup Iteration   4: 31012.717 ops/ms
# Warmup Iteration   5: 32562.898 ops/ms
# Warmup Iteration   6: 32483.725 ops/ms
# Warmup Iteration   7: 32332.042 ops/ms
# Warmup Iteration   8: 32083.693 ops/ms
# Warmup Iteration   9: 32175.165 ops/ms
# Warmup Iteration  10: 32087.919 ops/ms
# Warmup Iteration  11: 31200.303 ops/ms
# Warmup Iteration  12: 32289.951 ops/ms
# Warmup Iteration  13: 32429.317 ops/ms
# Warmup Iteration  14: 32160.822 ops/ms
# Warmup Iteration  15: 29731.603 ops/ms
Iteration   1: 32290.269 ops/ms
Iteration   2: 32487.541 ops/ms
Iteration   3: 32351.238 ops/ms
Iteration   4: 32374.631 ops/ms
Iteration   5: 32530.529 ops/ms
Iteration   6: 31983.183 ops/ms
Iteration   7: 30664.523 ops/ms
Iteration   8: 32318.365 ops/ms
Iteration   9: 31863.167 ops/ms
Iteration  10: 30710.256 ops/ms
Iteration  11: 32108.916 ops/ms
Iteration  12: 32655.622 ops/ms
Iteration  13: 32612.029 ops/ms
Iteration  14: 31926.977 ops/ms
Iteration  15: 32430.498 ops/ms


Result "com.github.chrisgleissner.benchmarks.GetterBenchmark.reflection":
  32087.183 ±(99.9%) 659.469 ops/ms [Average]
  (min, avg, max) = (30664.523, 32087.183, 32655.622), stdev = 616.868
  CI (99.9%): [31427.714, 32746.652] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.GetterBenchmark.varHandle

# Run progress: 88.24% complete, ETA 00:14:39
# Fork: 1 of 1
# Warmup Iteration   1: 30398.929 ops/ms
# Warmup Iteration   2: 31499.181 ops/ms
# Warmup Iteration   3: 34665.695 ops/ms
# Warmup Iteration   4: 34212.405 ops/ms
# Warmup Iteration   5: 31581.970 ops/ms
# Warmup Iteration   6: 33040.417 ops/ms
# Warmup Iteration   7: 34422.412 ops/ms
# Warmup Iteration   8: 34823.928 ops/ms
# Warmup Iteration   9: 34364.547 ops/ms
# Warmup Iteration  10: 32203.123 ops/ms
# Warmup Iteration  11: 33613.945 ops/ms
# Warmup Iteration  12: 32561.997 ops/ms
# Warmup Iteration  13: 32301.300 ops/ms
# Warmup Iteration  14: 34414.626 ops/ms
# Warmup Iteration  15: 34642.563 ops/ms
Iteration   1: 34442.002 ops/ms
Iteration   2: 34322.069 ops/ms
Iteration   3: 32584.479 ops/ms
Iteration   4: 33015.478 ops/ms
Iteration   5: 29848.613 ops/ms
Iteration   6: 33050.839 ops/ms
Iteration   7: 30374.036 ops/ms
Iteration   8: 30373.302 ops/ms
Iteration   9: 32738.191 ops/ms
Iteration  10: 30172.505 ops/ms
Iteration  11: 32684.097 ops/ms
Iteration  12: 29493.047 ops/ms
Iteration  13: 33043.429 ops/ms
Iteration  14: 32617.448 ops/ms
Iteration  15: 33060.532 ops/ms


Result "com.github.chrisgleissner.benchmarks.GetterBenchmark.varHandle":
  32121.338 ±(99.9%) 1732.363 ops/ms [Average]
  (min, avg, max) = (29493.047, 32121.338, 34442.002), stdev = 1620.453
  CI (99.9%): [30388.975, 33853.700] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ObjectCacheBenchmark.cache

# Run progress: 89.41% complete, ETA 00:13:04
# Fork: 1 of 1
# Warmup Iteration   1: 408144.079 ops/ms
# Warmup Iteration   2: 438130.532 ops/ms
# Warmup Iteration   3: 522671.638 ops/ms
# Warmup Iteration   4: 544276.713 ops/ms
# Warmup Iteration   5: 536836.864 ops/ms
# Warmup Iteration   6: 559566.619 ops/ms
# Warmup Iteration   7: 560053.689 ops/ms
# Warmup Iteration   8: 500201.615 ops/ms
# Warmup Iteration   9: 556463.698 ops/ms
# Warmup Iteration  10: 507851.575 ops/ms
# Warmup Iteration  11: 561725.629 ops/ms
# Warmup Iteration  12: 555110.046 ops/ms
# Warmup Iteration  13: 513719.886 ops/ms
# Warmup Iteration  14: 511494.219 ops/ms
# Warmup Iteration  15: 562533.495 ops/ms
Iteration   1: 562695.215 ops/ms
Iteration   2: 558142.855 ops/ms
Iteration   3: 558036.477 ops/ms
Iteration   4: 537104.209 ops/ms
Iteration   5: 559980.158 ops/ms
Iteration   6: 510066.277 ops/ms
Iteration   7: 533813.703 ops/ms
Iteration   8: 561798.092 ops/ms
Iteration   9: 558761.162 ops/ms
Iteration  10: 551391.473 ops/ms
Iteration  11: 551565.221 ops/ms
Iteration  12: 511820.903 ops/ms
Iteration  13: 557915.255 ops/ms
Iteration  14: 551966.508 ops/ms
Iteration  15: 546079.573 ops/ms


Result "com.github.chrisgleissner.benchmarks.ObjectCacheBenchmark.cache":
  547409.139 ±(99.9%) 18236.462 ops/ms [Average]
  (min, avg, max) = (510066.277, 547409.139, 562695.215), stdev = 17058.398
  CI (99.9%): [529172.677, 565645.601] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ObjectCacheBenchmark.constructor

# Run progress: 90.59% complete, ETA 00:11:32
# Fork: 1 of 1
# Warmup Iteration   1: 159129.837 ops/ms
# Warmup Iteration   2: 239512.708 ops/ms
# Warmup Iteration   3: 303576.869 ops/ms
# Warmup Iteration   4: 415192.873 ops/ms
# Warmup Iteration   5: 352951.127 ops/ms
# Warmup Iteration   6: 382410.396 ops/ms
# Warmup Iteration   7: 404275.957 ops/ms
# Warmup Iteration   8: 417931.275 ops/ms
# Warmup Iteration   9: 422364.137 ops/ms
# Warmup Iteration  10: 425416.438 ops/ms
# Warmup Iteration  11: 435950.298 ops/ms
# Warmup Iteration  12: 437406.186 ops/ms
# Warmup Iteration  13: 425019.697 ops/ms
# Warmup Iteration  14: 442402.213 ops/ms
# Warmup Iteration  15: 450660.881 ops/ms
Iteration   1: 455014.264 ops/ms
Iteration   2: 470760.781 ops/ms
Iteration   3: 452796.795 ops/ms
Iteration   4: 462259.961 ops/ms
Iteration   5: 461664.766 ops/ms
Iteration   6: 461067.905 ops/ms
Iteration   7: 458791.313 ops/ms
Iteration   8: 461886.200 ops/ms
Iteration   9: 454527.923 ops/ms
Iteration  10: 457639.325 ops/ms
Iteration  11: 454497.845 ops/ms
Iteration  12: 423165.828 ops/ms
Iteration  13: 452063.575 ops/ms
Iteration  14: 423565.780 ops/ms
Iteration  15: 457342.664 ops/ms


Result "com.github.chrisgleissner.benchmarks.ObjectCacheBenchmark.constructor":
  453802.995 ±(99.9%) 14144.017 ops/ms [Average]
  (min, avg, max) = (423165.828, 453802.995, 470760.781), stdev = 13230.322
  CI (99.9%): [439658.978, 467947.012] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.ObjectCacheBenchmark.primitive

# Run progress: 91.76% complete, ETA 00:10:00
# Fork: 1 of 1
# Warmup Iteration   1: 805705.321 ops/ms
# Warmup Iteration   2: 1171186.338 ops/ms
# Warmup Iteration   3: 1532166.868 ops/ms
# Warmup Iteration   4: 2080578.855 ops/ms
# Warmup Iteration   5: 1740282.121 ops/ms
# Warmup Iteration   6: 1876607.481 ops/ms
# Warmup Iteration   7: 1963743.791 ops/ms
# Warmup Iteration   8: 1947098.878 ops/ms
# Warmup Iteration   9: 2000176.934 ops/ms
# Warmup Iteration  10: 2052532.054 ops/ms
# Warmup Iteration  11: 2077434.498 ops/ms
# Warmup Iteration  12: 2040597.304 ops/ms
# Warmup Iteration  13: 2100486.910 ops/ms
# Warmup Iteration  14: 2107198.594 ops/ms
# Warmup Iteration  15: 2062701.086 ops/ms
Iteration   1: 2021775.444 ops/ms
Iteration   2: 1975029.923 ops/ms
Iteration   3: 2110683.529 ops/ms
Iteration   4: 2098493.961 ops/ms
Iteration   5: 2093855.924 ops/ms
Iteration   6: 2081756.569 ops/ms
Iteration   7: 1971047.129 ops/ms
Iteration   8: 2099709.460 ops/ms
Iteration   9: 2090633.145 ops/ms
Iteration  10: 2080220.957 ops/ms
Iteration  11: 2093960.664 ops/ms
Iteration  12: 2105735.103 ops/ms
Iteration  13: 2087180.228 ops/ms
Iteration  14: 2084415.429 ops/ms
Iteration  15: 2092748.397 ops/ms


Result "com.github.chrisgleissner.benchmarks.ObjectCacheBenchmark.primitive":
  2072483.057 ±(99.9%) 48237.285 ops/ms [Average]
  (min, avg, max) = (1971047.129, 2072483.057, 2110683.529), stdev = 45121.186
  CI (99.9%): [2024245.773, 2120720.342] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.SetterBenchmark.direct

# Run progress: 92.94% complete, ETA 00:08:31
# Fork: 1 of 1
# Warmup Iteration   1: 159267.765 ops/ms
# Warmup Iteration   2: 165777.428 ops/ms
# Warmup Iteration   3: 189951.894 ops/ms
# Warmup Iteration   4: 183392.522 ops/ms
# Warmup Iteration   5: 183127.344 ops/ms
# Warmup Iteration   6: 176940.229 ops/ms
# Warmup Iteration   7: 181564.129 ops/ms
# Warmup Iteration   8: 187149.711 ops/ms
# Warmup Iteration   9: 187149.909 ops/ms
# Warmup Iteration  10: 179816.459 ops/ms
# Warmup Iteration  11: 189375.975 ops/ms
# Warmup Iteration  12: 187911.074 ops/ms
# Warmup Iteration  13: 184541.163 ops/ms
# Warmup Iteration  14: 187261.378 ops/ms
# Warmup Iteration  15: 187531.065 ops/ms
Iteration   1: 187127.028 ops/ms
Iteration   2: 182175.279 ops/ms
Iteration   3: 188408.803 ops/ms
Iteration   4: 185459.806 ops/ms
Iteration   5: 184485.183 ops/ms
Iteration   6: 188053.309 ops/ms
Iteration   7: 186276.099 ops/ms
Iteration   8: 189156.473 ops/ms
Iteration   9: 187454.092 ops/ms
Iteration  10: 188758.945 ops/ms
Iteration  11: 181100.772 ops/ms
Iteration  12: 188471.750 ops/ms
Iteration  13: 186552.095 ops/ms
Iteration  14: 185652.101 ops/ms
Iteration  15: 187431.342 ops/ms


Result "com.github.chrisgleissner.benchmarks.SetterBenchmark.direct":
  186437.538 ±(99.9%) 2523.142 ops/ms [Average]
  (min, avg, max) = (181100.772, 186437.538, 189156.473), stdev = 2360.149
  CI (99.9%): [183914.396, 188960.681] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.SetterBenchmark.lambdaMetaFactoryForSetter

# Run progress: 94.12% complete, ETA 00:07:02
# Fork: 1 of 1
# Warmup Iteration   1: 79794.982 ops/ms
# Warmup Iteration   2: 82032.625 ops/ms
# Warmup Iteration   3: 91647.290 ops/ms
# Warmup Iteration   4: 91573.262 ops/ms
# Warmup Iteration   5: 92457.758 ops/ms
# Warmup Iteration   6: 91242.605 ops/ms
# Warmup Iteration   7: 91756.864 ops/ms
# Warmup Iteration   8: 92174.358 ops/ms
# Warmup Iteration   9: 91742.966 ops/ms
# Warmup Iteration  10: 92518.210 ops/ms
# Warmup Iteration  11: 85375.212 ops/ms
# Warmup Iteration  12: 86826.028 ops/ms
# Warmup Iteration  13: 91993.779 ops/ms
# Warmup Iteration  14: 91337.019 ops/ms
# Warmup Iteration  15: 91720.120 ops/ms
Iteration   1: 86871.410 ops/ms
Iteration   2: 92348.358 ops/ms
Iteration   3: 91769.632 ops/ms
Iteration   4: 92463.061 ops/ms
Iteration   5: 91955.258 ops/ms
Iteration   6: 84696.891 ops/ms
Iteration   7: 83638.754 ops/ms
Iteration   8: 92538.430 ops/ms
Iteration   9: 92757.368 ops/ms
Iteration  10: 92683.274 ops/ms
Iteration  11: 91492.835 ops/ms
Iteration  12: 92630.787 ops/ms
Iteration  13: 90480.348 ops/ms
Iteration  14: 90270.045 ops/ms
Iteration  15: 91638.127 ops/ms


Result "com.github.chrisgleissner.benchmarks.SetterBenchmark.lambdaMetaFactoryForSetter":
  90548.972 ±(99.9%) 3204.322 ops/ms [Average]
  (min, avg, max) = (83638.754, 90548.972, 92757.368), stdev = 2997.325
  CI (99.9%): [87344.650, 93753.294] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.SetterBenchmark.methodHandleForField

# Run progress: 95.29% complete, ETA 00:05:35
# Fork: 1 of 1
# Warmup Iteration   1: 20455.466 ops/ms
# Warmup Iteration   2: 21990.858 ops/ms
# Warmup Iteration   3: 22982.909 ops/ms
# Warmup Iteration   4: 22809.556 ops/ms
# Warmup Iteration   5: 22439.901 ops/ms
# Warmup Iteration   6: 22843.899 ops/ms
# Warmup Iteration   7: 23068.330 ops/ms
# Warmup Iteration   8: 23081.355 ops/ms
# Warmup Iteration   9: 22637.528 ops/ms
# Warmup Iteration  10: 22970.219 ops/ms
# Warmup Iteration  11: 22796.076 ops/ms
# Warmup Iteration  12: 22723.539 ops/ms
# Warmup Iteration  13: 22839.956 ops/ms
# Warmup Iteration  14: 22702.697 ops/ms
# Warmup Iteration  15: 22983.613 ops/ms
Iteration   1: 23047.474 ops/ms
Iteration   2: 21782.640 ops/ms
Iteration   3: 22677.439 ops/ms
Iteration   4: 23034.966 ops/ms
Iteration   5: 20921.722 ops/ms
Iteration   6: 22703.195 ops/ms
Iteration   7: 22866.653 ops/ms
Iteration   8: 23044.163 ops/ms
Iteration   9: 22768.898 ops/ms
Iteration  10: 23048.991 ops/ms
Iteration  11: 22759.640 ops/ms
Iteration  12: 22936.736 ops/ms
Iteration  13: 22944.068 ops/ms
Iteration  14: 22552.498 ops/ms
Iteration  15: 23065.055 ops/ms


Result "com.github.chrisgleissner.benchmarks.SetterBenchmark.methodHandleForField":
  22676.943 ±(99.9%) 624.428 ops/ms [Average]
  (min, avg, max) = (20921.722, 22676.943, 23065.055), stdev = 584.090
  CI (99.9%): [22052.515, 23301.371] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.SetterBenchmark.methodHandleForSetter

# Run progress: 96.47% complete, ETA 00:04:09
# Fork: 1 of 1
# Warmup Iteration   1: 19757.777 ops/ms
# Warmup Iteration   2: 21374.261 ops/ms
# Warmup Iteration   3: 21941.980 ops/ms
# Warmup Iteration   4: 20666.933 ops/ms
# Warmup Iteration   5: 21593.362 ops/ms
# Warmup Iteration   6: 21666.024 ops/ms
# Warmup Iteration   7: 20240.629 ops/ms
# Warmup Iteration   8: 20264.861 ops/ms
# Warmup Iteration   9: 20008.384 ops/ms
# Warmup Iteration  10: 21645.236 ops/ms
# Warmup Iteration  11: 21993.705 ops/ms
# Warmup Iteration  12: 19803.850 ops/ms
# Warmup Iteration  13: 21688.609 ops/ms
# Warmup Iteration  14: 21775.594 ops/ms
# Warmup Iteration  15: 21758.732 ops/ms
Iteration   1: 20752.596 ops/ms
Iteration   2: 21880.943 ops/ms
Iteration   3: 21579.040 ops/ms
Iteration   4: 21285.176 ops/ms
Iteration   5: 21746.908 ops/ms
Iteration   6: 21601.038 ops/ms
Iteration   7: 21609.820 ops/ms
Iteration   8: 21846.188 ops/ms
Iteration   9: 21865.702 ops/ms
Iteration  10: 21530.310 ops/ms
Iteration  11: 21152.657 ops/ms
Iteration  12: 21672.898 ops/ms
Iteration  13: 18992.958 ops/ms
Iteration  14: 21575.669 ops/ms
Iteration  15: 21597.910 ops/ms


Result "com.github.chrisgleissner.benchmarks.SetterBenchmark.methodHandleForSetter":
  21379.321 ±(99.9%) 773.370 ops/ms [Average]
  (min, avg, max) = (18992.958, 21379.321, 21880.943), stdev = 723.411
  CI (99.9%): [20605.951, 22152.691] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.SetterBenchmark.reflection

# Run progress: 97.65% complete, ETA 00:02:45
# Fork: 1 of 1
# Warmup Iteration   1: 25026.055 ops/ms
# Warmup Iteration   2: 29775.427 ops/ms
# Warmup Iteration   3: 36474.924 ops/ms
# Warmup Iteration   4: 34141.874 ops/ms
# Warmup Iteration   5: 37883.266 ops/ms
# Warmup Iteration   6: 37648.091 ops/ms
# Warmup Iteration   7: 37942.297 ops/ms
# Warmup Iteration   8: 38072.297 ops/ms
# Warmup Iteration   9: 37434.006 ops/ms
# Warmup Iteration  10: 38194.607 ops/ms
# Warmup Iteration  11: 37558.328 ops/ms
# Warmup Iteration  12: 38125.474 ops/ms
# Warmup Iteration  13: 38175.584 ops/ms
# Warmup Iteration  14: 38078.600 ops/ms
# Warmup Iteration  15: 38170.737 ops/ms
Iteration   1: 36360.916 ops/ms
Iteration   2: 37730.225 ops/ms
Iteration   3: 37789.964 ops/ms
Iteration   4: 38285.803 ops/ms
Iteration   5: 37065.571 ops/ms
Iteration   6: 37761.624 ops/ms
Iteration   7: 37985.036 ops/ms
Iteration   8: 37815.235 ops/ms
Iteration   9: 37928.928 ops/ms
Iteration  10: 37363.882 ops/ms
Iteration  11: 36032.554 ops/ms
Iteration  12: 37718.210 ops/ms
Iteration  13: 37572.392 ops/ms
Iteration  14: 38070.957 ops/ms
Iteration  15: 38319.211 ops/ms


Result "com.github.chrisgleissner.benchmarks.SetterBenchmark.reflection":
  37586.700 ±(99.9%) 696.180 ops/ms [Average]
  (min, avg, max) = (36032.554, 37586.700, 38319.211), stdev = 651.207
  CI (99.9%): [36890.520, 38282.881] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 11.0.2, OpenJDK 64-Bit Server VM, 11.0.2+9
# VM invoker: /home/chris/.sdkman/candidates/java/11.0.2-open/bin/java
# VM options: -Xms4g -Xms4g -Xcomp
# Warmup: 15 iterations, 300 ms each
# Measurement: 15 iterations, 300 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.chrisgleissner.benchmarks.SetterBenchmark.varHandle

# Run progress: 98.82% complete, ETA 00:01:22
# Fork: 1 of 1
# Warmup Iteration   1: 32657.802 ops/ms
# Warmup Iteration   2: 33820.846 ops/ms
# Warmup Iteration   3: 34085.782 ops/ms
# Warmup Iteration   4: 33123.806 ops/ms
# Warmup Iteration   5: 34099.855 ops/ms
# Warmup Iteration   6: 34096.128 ops/ms
# Warmup Iteration   7: 33654.856 ops/ms
# Warmup Iteration   8: 33583.230 ops/ms
# Warmup Iteration   9: 34103.036 ops/ms
# Warmup Iteration  10: 30632.489 ops/ms
# Warmup Iteration  11: 33665.560 ops/ms
# Warmup Iteration  12: 33858.158 ops/ms
# Warmup Iteration  13: 33653.915 ops/ms
# Warmup Iteration  14: 33620.821 ops/ms
# Warmup Iteration  15: 33613.558 ops/ms
Iteration   1: 33868.964 ops/ms
Iteration   2: 34047.637 ops/ms
Iteration   3: 33678.909 ops/ms
Iteration   4: 33766.594 ops/ms
Iteration   5: 33926.371 ops/ms
Iteration   6: 33571.222 ops/ms
Iteration   7: 34060.072 ops/ms
Iteration   8: 31424.985 ops/ms
Iteration   9: 33644.469 ops/ms
Iteration  10: 33578.340 ops/ms
Iteration  11: 33682.621 ops/ms
Iteration  12: 33639.777 ops/ms
Iteration  13: 31824.762 ops/ms
Iteration  14: 33668.049 ops/ms
Iteration  15: 32312.117 ops/ms


Result "com.github.chrisgleissner.benchmarks.SetterBenchmark.varHandle":
  33379.659 ±(99.9%) 878.497 ops/ms [Average]
  (min, avg, max) = (31424.985, 33379.659, 34060.072), stdev = 821.747
  CI (99.9%): [32501.162, 34258.157] (assumes normal distribution)


# Run complete. Total time: 01:55:28

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                   Mode  Cnt        Score        Error   Units
ArrayAddBenchmark.intArrayAdd                                              thrpt   15  3524700.552 ± 108311.825  ops/ms
ArrayAddBenchmark.intArrayClone                                            thrpt   15  3028062.447 ±  35312.801  ops/ms
ArrayAddBenchmark.intArrayCopyOf                                           thrpt   15  2993934.129 ±  61607.058  ops/ms
ArrayAddBenchmark.intWrapperArrayAdd                                       thrpt   15   510507.155 ±  19792.768  ops/ms
ArrayAddBenchmark.intWrapperArrayClone                                     thrpt   15  2995628.416 ±  71978.726  ops/ms
ArrayAddBenchmark.intWrapperArrayCopyOf                                    thrpt   15  2994660.818 ±  99746.537  ops/ms
ArrayAddBenchmark.longArrayAdd                                             thrpt   15  2155106.891 ±  31225.856  ops/ms
ArrayAddBenchmark.longArrayClone                                           thrpt   15  1507171.470 ±  38005.958  ops/ms
ArrayAddBenchmark.longArrayCopyOf                                          thrpt   15  1514326.992 ±  38609.767  ops/ms
ArrayAddBenchmark.longWrapperArrayAdd                                      thrpt   15   512465.795 ±  20781.299  ops/ms
ArrayAddBenchmark.longWrapperArrayClone                                    thrpt   15  3013131.677 ±  52252.270  ops/ms
ArrayAddBenchmark.longWrapperArrayCopyOf                                   thrpt   15  3013775.502 ±  39131.244  ops/ms
CollectionAddBenchmark.ArrayDeque                                          thrpt   15    44674.334 ±    444.810  ops/ms
CollectionAddBenchmark.ArrayList                                           thrpt   15    42102.105 ±    147.039  ops/ms
CollectionAddBenchmark.ArrayListNoResize                                   thrpt   15    69734.794 ±   2514.563  ops/ms
CollectionAddBenchmark.ConcurrentHashMap                                   thrpt   15     7049.747 ±    469.049  ops/ms
CollectionAddBenchmark.ConcurrentLinkedDeque                               thrpt   15     7343.351 ±    222.570  ops/ms
CollectionAddBenchmark.ConcurrentSkipListSet                               thrpt   15     1961.903 ±    104.988  ops/ms
CollectionAddBenchmark.CopyOnWriteArrayList                                thrpt   15       99.826 ±      1.161  ops/ms
CollectionAddBenchmark.CopyOnWriteArraySet                                 thrpt   15       67.799 ±      0.656  ops/ms
CollectionAddBenchmark.HashMap                                             thrpt   15    14512.796 ±    537.247  ops/ms
CollectionAddBenchmark.HashSet                                             thrpt   15    19170.949 ±    358.156  ops/ms
CollectionAddBenchmark.LinkedBlockingDeque                                 thrpt   15    11517.273 ±     87.141  ops/ms
CollectionAddBenchmark.LinkedBlockingQueue                                 thrpt   15    13593.802 ±    328.127  ops/ms
CollectionAddBenchmark.LinkedHashMap                                       thrpt   15    10167.347 ±    145.501  ops/ms
CollectionAddBenchmark.LinkedHashSet                                       thrpt   15    11841.149 ±    561.838  ops/ms
CollectionAddBenchmark.LinkedList                                          thrpt   15    13951.735 ±    127.447  ops/ms
CollectionAddBenchmark.LinkedTransferQueue                                 thrpt   15     9305.816 ±    234.424  ops/ms
CollectionAddBenchmark.PriorityBlockingQueue                               thrpt   15    10888.086 ±    384.689  ops/ms
CollectionAddBenchmark.PriorityQueue                                       thrpt   15    26204.035 ±   1563.098  ops/ms
CollectionAddBenchmark.Stack                                               thrpt   15    49682.366 ±   1590.124  ops/ms
CollectionAddBenchmark.TreeSet                                             thrpt   15     2183.545 ±     74.604  ops/ms
CollectionAddBenchmark.Vector                                              thrpt   15    50909.686 ±   1940.181  ops/ms
CollectionAddBenchmark.VectorNoResize                                      thrpt   15    65450.462 ±    315.087  ops/ms
CollectionIterateBenchmark.ArrayBlockingQueue                              thrpt   14    11306.738 ±    174.050  ops/ms
CollectionIterateBenchmark.ArrayDeque                                      thrpt   14    51695.213 ±   1432.397  ops/ms
CollectionIterateBenchmark.ArrayList                                       thrpt   14    63188.239 ±    805.010  ops/ms
CollectionIterateBenchmark.ArrayListNoResize                               thrpt   14    60728.072 ±   1734.606  ops/ms
CollectionIterateBenchmark.ConcurrentHashMap                               thrpt   14    18470.877 ±    341.063  ops/ms
CollectionIterateBenchmark.ConcurrentLinkedDeque                           thrpt   14    40030.600 ±    382.373  ops/ms
CollectionIterateBenchmark.ConcurrentSkipListSet                           thrpt   14    51731.763 ±    689.648  ops/ms
CollectionIterateBenchmark.CopyOnWriteArrayList                            thrpt   14    59740.788 ±   3078.284  ops/ms
CollectionIterateBenchmark.CopyOnWriteArraySet                             thrpt   14    62135.804 ±   2321.936  ops/ms
CollectionIterateBenchmark.HashMap                                         thrpt   14    43242.737 ±   1254.293  ops/ms
CollectionIterateBenchmark.HashSet                                         thrpt   14    59815.523 ±   1796.895  ops/ms
CollectionIterateBenchmark.LinkedBlockingDeque                             thrpt   14    16656.631 ±     96.824  ops/ms
CollectionIterateBenchmark.LinkedBlockingQueue                             thrpt   14     9964.664 ±     86.479  ops/ms
CollectionIterateBenchmark.LinkedHashMap                                   thrpt   14    54062.922 ±   2004.707  ops/ms
CollectionIterateBenchmark.LinkedHashSet                                   thrpt   14    48512.764 ±   1573.326  ops/ms
CollectionIterateBenchmark.LinkedList                                      thrpt   14    44120.652 ±   1528.970  ops/ms
CollectionIterateBenchmark.LinkedTransferQueue                             thrpt   14    50916.730 ±   2001.168  ops/ms
CollectionIterateBenchmark.PriorityBlockingQueue                           thrpt   14    78684.803 ±   2315.081  ops/ms
CollectionIterateBenchmark.PriorityQueue                                   thrpt   14    76467.387 ±    997.227  ops/ms
CollectionIterateBenchmark.Stack                                           thrpt   14    45959.612 ±   2138.314  ops/ms
CollectionIterateBenchmark.TreeSet                                         thrpt   14    43564.406 ±   2411.738  ops/ms
CollectionIterateBenchmark.Vector                                          thrpt   14    46422.453 ±   1052.020  ops/ms
CollectionIterateBenchmark.VectorNoResize                                  thrpt   14    46022.464 ±   1556.837  ops/ms
ConcCollectionBenchmark.ArrayBlockingQueue                                 thrpt   15    19623.615 ±    534.678  ops/ms
ConcCollectionBenchmark.ArrayBlockingQueue:ArrayBlockingQueueAdd           thrpt   15     1913.429 ±    767.290  ops/ms
ConcCollectionBenchmark.ArrayBlockingQueue:ArrayBlockingQueueGet           thrpt   15    16268.081 ±   1497.388  ops/ms
ConcCollectionBenchmark.ArrayBlockingQueue:ArrayBlockingQueueRemove        thrpt   15     1442.106 ±    741.127  ops/ms
ConcCollectionBenchmark.ArrayList                                          thrpt   15     1834.216 ±   3245.235  ops/ms
ConcCollectionBenchmark.ArrayList:ArrayListAdd                             thrpt   15      171.867 ±    149.253  ops/ms
ConcCollectionBenchmark.ArrayList:ArrayListGet                             thrpt   15     1630.813 ±   3166.690  ops/ms
ConcCollectionBenchmark.ArrayList:ArrayListRemove                          thrpt   15       31.537 ±     19.182  ops/ms
ConcCollectionBenchmark.ConcurrentHashMap                                  thrpt   15    78782.011 ±   5701.512  ops/ms
ConcCollectionBenchmark.ConcurrentHashMap:ConcurrentHashMapAdd             thrpt   15     4577.602 ±    828.395  ops/ms
ConcCollectionBenchmark.ConcurrentHashMap:ConcurrentHashMapGet             thrpt   15    69762.618 ±   4926.669  ops/ms
ConcCollectionBenchmark.ConcurrentHashMap:ConcurrentHashMapRemove          thrpt   15     4441.790 ±   1393.051  ops/ms
ConcCollectionBenchmark.ConcurrentLinkedDeque                              thrpt   15   268075.057 ±  19261.509  ops/ms
ConcCollectionBenchmark.ConcurrentLinkedDeque:ConcurrentLinkedDequeAdd     thrpt   15     5742.360 ±   1044.803  ops/ms
ConcCollectionBenchmark.ConcurrentLinkedDeque:ConcurrentLinkedDequeGet     thrpt   15   258355.755 ±  22697.733  ops/ms
ConcCollectionBenchmark.ConcurrentLinkedDeque:ConcurrentLinkedDequeRemove  thrpt   15     3976.941 ±   5044.309  ops/ms
ConcCollectionBenchmark.ConcurrentSkipListSet                              thrpt   15   183598.564 ±   6762.054  ops/ms
ConcCollectionBenchmark.ConcurrentSkipListSet:ConcurrentSkipListSetAdd     thrpt   15     2574.404 ±    512.167  ops/ms
ConcCollectionBenchmark.ConcurrentSkipListSet:ConcurrentSkipListSetGet     thrpt   15   179979.622 ±   7196.931  ops/ms
ConcCollectionBenchmark.ConcurrentSkipListSet:ConcurrentSkipListSetRemove  thrpt   15     1044.539 ±    260.909  ops/ms
ConcCollectionBenchmark.CopyOnWriteArrayList                               thrpt   15   422167.083 ±   8417.709  ops/ms
ConcCollectionBenchmark.CopyOnWriteArrayList:CopyOnWriteArrayAdd           thrpt   15        5.127 ±      1.876  ops/ms
ConcCollectionBenchmark.CopyOnWriteArrayList:CopyOnWriteArrayListGet       thrpt   15   422157.555 ±   8418.425  ops/ms
ConcCollectionBenchmark.CopyOnWriteArrayList:CopyOnWriteArrayRemove        thrpt   15        4.401 ±      1.427  ops/ms
ConcCollectionBenchmark.CopyOnWriteArraySet                                thrpt   15   161503.541 ±  10139.693  ops/ms
ConcCollectionBenchmark.CopyOnWriteArraySet:CopyOnWriteArraySetAdd         thrpt   15        1.222 ±      0.243  ops/ms
ConcCollectionBenchmark.CopyOnWriteArraySet:CopyOnWriteArraySetGet         thrpt   15   161501.196 ±  10139.685  ops/ms
ConcCollectionBenchmark.CopyOnWriteArraySet:CopyOnWriteArraySetRemove      thrpt   15        1.122 ±      0.171  ops/ms
CounterBenchmark.atomicInteger                                             thrpt   15   131945.800 ±   2620.643  ops/ms
CounterBenchmark.atomicLong                                                thrpt   15   143404.138 ±   3564.989  ops/ms
CounterBenchmark.mutableInt                                                thrpt   15   131702.382 ±    925.156  ops/ms
CounterBenchmark.mutableLong                                               thrpt   15   145169.061 ±   1397.694  ops/ms
CounterBenchmark.primitiveInt                                              thrpt   15   260379.910 ±   8117.615  ops/ms
CounterBenchmark.primitiveLong                                             thrpt   15   243504.550 ±   7640.230  ops/ms
GetterBenchmark.direct                                                     thrpt   15   136045.135 ±   1445.647  ops/ms
GetterBenchmark.lambdaMetaFactoryForGetter                                 thrpt   15    94024.864 ±   1799.716  ops/ms
GetterBenchmark.methodHandleForField                                       thrpt   15    20682.924 ±    340.338  ops/ms
GetterBenchmark.methodHandleForGetter                                      thrpt   15    21292.823 ±   1177.606  ops/ms
GetterBenchmark.reflection                                                 thrpt   15    32087.183 ±    659.469  ops/ms
GetterBenchmark.varHandle                                                  thrpt   15    32121.338 ±   1732.363  ops/ms
ObjectCacheBenchmark.cache                                                 thrpt   15   547409.139 ±  18236.462  ops/ms
ObjectCacheBenchmark.constructor                                           thrpt   15   453802.995 ±  14144.017  ops/ms
ObjectCacheBenchmark.primitive                                             thrpt   15  2072483.057 ±  48237.285  ops/ms
SetterBenchmark.direct                                                     thrpt   15   186437.538 ±   2523.142  ops/ms
SetterBenchmark.lambdaMetaFactoryForSetter                                 thrpt   15    90548.972 ±   3204.322  ops/ms
SetterBenchmark.methodHandleForField                                       thrpt   15    22676.943 ±    624.428  ops/ms
SetterBenchmark.methodHandleForSetter                                      thrpt   15    21379.321 ±    773.370  ops/ms
SetterBenchmark.reflection                                                 thrpt   15    37586.700 ±    696.180  ops/ms
SetterBenchmark.varHandle                                                  thrpt   15    33379.659 ±    878.497  ops/ms

Benchmark result is saved to jmh-result.json
